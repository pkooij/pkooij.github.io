let e,t,i,n,r,a,s,o,l,h,c,u,d,p,f,m,g,v,y;function _(e,t,i,n){Object.defineProperty(e,t,{get:i,set:n,enumerable:!0,configurable:!0})}var x,b=globalThis,M={},w={},S=b.parcelRequire988e;null==S&&((S=function(e){if(e in M)return M[e].exports;if(e in w){var t=w[e];delete w[e];var i={id:e,exports:{}};return M[e]=i,t.call(i.exports,i,i.exports),i.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){w[e]=t},b.parcelRequire988e=S);var E=S.register;E("8PNKb",function(e,t){_(e.exports,"Easing",()=>n),_(e.exports,"Tween",()=>h),_(e.exports,"getAll",()=>c),_(e.exports,"removeAll",()=>u),_(e.exports,"update",()=>d);var i,n=Object.freeze({Linear:Object.freeze({None:function(e){return e},In:function(e){return e},Out:function(e){return e},InOut:function(e){return e}}),Quadratic:Object.freeze({In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}}),Cubic:Object.freeze({In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}}),Quartic:Object.freeze({In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}}),Quintic:Object.freeze({In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}}),Sinusoidal:Object.freeze({In:function(e){return 1-Math.sin((1-e)*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return .5*(1-Math.sin(Math.PI*(.5-e)))}}),Exponential:Object.freeze({In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(-Math.pow(2,-10*(e-1))+2)}}),Circular:Object.freeze({In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}}),Elastic:Object.freeze({In:function(e){return 0===e?0:1===e?1:-Math.pow(2,10*(e-1))*Math.sin((e-1.1)*5*Math.PI)},Out:function(e){return 0===e?0:1===e?1:Math.pow(2,-10*e)*Math.sin((e-.1)*5*Math.PI)+1},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?-.5*Math.pow(2,10*(e-1))*Math.sin((e-1.1)*5*Math.PI):.5*Math.pow(2,-10*(e-1))*Math.sin((e-1.1)*5*Math.PI)+1}}),Back:Object.freeze({In:function(e){return 1===e?1:e*e*(2.70158*e-1.70158)},Out:function(e){return 0===e?0:--e*e*(2.70158*e+1.70158)+1},InOut:function(e){return(e*=2)<1?e*e*(3.5949095*e-2.5949095)*.5:.5*((e-=2)*e*(3.5949095*e+2.5949095)+2)}}),Bounce:Object.freeze({In:function(e){return 1-n.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return e<.5?.5*n.Bounce.In(2*e):.5*n.Bounce.Out(2*e-1)+.5}}),generatePow:function(e){return void 0===e&&(e=4),e=(e=e<Number.EPSILON?Number.EPSILON:e)>1e4?1e4:e,{In:function(t){return Math.pow(t,e)},Out:function(t){return 1-Math.pow(1-t,e)},InOut:function(t){return t<.5?Math.pow(2*t,e)/2:(1-Math.pow(2-2*t,e))/2+.5}}}}),r=function(){return performance.now()},a=function(){function e(){this._tweens={},this._tweensAddedDuringUpdate={}}return e.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(t){return e._tweens[t]})},e.prototype.removeAll=function(){this._tweens={}},e.prototype.add=function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},e.prototype.remove=function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},e.prototype.update=function(e,t){void 0===e&&(e=r()),void 0===t&&(t=!1);var i=Object.keys(this._tweens);if(0===i.length)return!1;for(;i.length>0;){this._tweensAddedDuringUpdate={};for(var n=0;n<i.length;n++){var a=this._tweens[i[n]],s=!t;a&&!1===a.update(e,s)&&!t&&delete this._tweens[i[n]]}i=Object.keys(this._tweensAddedDuringUpdate)}return!0},e}(),s={Linear:function(e,t){var i=e.length-1,n=i*t,r=Math.floor(n),a=s.Utils.Linear;return t<0?a(e[0],e[1],n):t>1?a(e[i],e[i-1],i-n):a(e[r],e[r+1>i?i:r+1],n-r)},Bezier:function(e,t){for(var i=0,n=e.length-1,r=Math.pow,a=s.Utils.Bernstein,o=0;o<=n;o++)i+=r(1-t,n-o)*r(t,o)*e[o]*a(n,o);return i},CatmullRom:function(e,t){var i=e.length-1,n=i*t,r=Math.floor(n),a=s.Utils.CatmullRom;return e[0]===e[i]?(t<0&&(r=Math.floor(n=i*(1+t))),a(e[(r-1+i)%i],e[r],e[(r+1)%i],e[(r+2)%i],n-r)):t<0?e[0]-(a(e[0],e[0],e[1],e[1],-n)-e[0]):t>1?e[i]-(a(e[i],e[i],e[i-1],e[i-1],n-i)-e[i]):a(e[r?r-1:0],e[r],e[i<r+1?i:r+1],e[i<r+2?i:r+2],n-r)},Utils:{Linear:function(e,t,i){return(t-e)*i+e},Bernstein:function(e,t){var i=s.Utils.Factorial;return i(e)/i(t)/i(e-t)},Factorial:(i=[1],function(e){var t=1;if(i[e])return i[e];for(var n=e;n>1;n--)t*=n;return i[e]=t,t}),CatmullRom:function(e,t,i,n,r){var a=(i-e)*.5,s=(n-t)*.5,o=r*r;return r*o*(2*t-2*i+a+s)+(-3*t+3*i-2*a-s)*o+a*r+t}}},o=function(){function e(){}return e.nextId=function(){return e._nextId++},e._nextId=0,e}(),l=new a,h=function(){function e(e,t){void 0===t&&(t=l),this._object=e,this._group=t,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=n.Linear.None,this._interpolationFunction=s.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=o.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1}return e.prototype.getId=function(){return this._id},e.prototype.isPlaying=function(){return this._isPlaying},e.prototype.isPaused=function(){return this._isPaused},e.prototype.getDuration=function(){return this._duration},e.prototype.to=function(e,t){if(void 0===t&&(t=1e3),this._isPlaying)throw Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=t<0?0:t,this},e.prototype.duration=function(e){return void 0===e&&(e=1e3),this._duration=e<0?0:e,this},e.prototype.dynamic=function(e){return void 0===e&&(e=!1),this._isDynamic=e,this},e.prototype.start=function(e,t){if(void 0===e&&(e=r()),void 0===t&&(t=!1),this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed)for(var i in this._reversed=!1,this._valuesStartRepeat)this._swapEndStartRepeatValues(i),this._valuesStart[i]=this._valuesStartRepeat[i];if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){if(this._propertiesAreSetUp=!0,!this._isDynamic){var n={};for(var a in this._valuesEnd)n[a]=this._valuesEnd[a];this._valuesEnd=n}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},e.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},e.prototype._setupProperties=function(e,t,i,n,r){for(var a in i){var s=e[a],o=Array.isArray(s),l=o?"array":typeof s,h=!o&&Array.isArray(i[a]);if("undefined"!==l&&"function"!==l){if(h){var c=i[a];if(0===c.length)continue;for(var u=[s],d=0,p=c.length;d<p;d+=1){var f=this._handleRelativeValue(s,c[d]);if(isNaN(f)){h=!1,console.warn("Found invalid interpolation list. Skipping.");break}u.push(f)}h&&(i[a]=u)}if(("object"===l||o)&&s&&!h){for(var m in t[a]=o?[]:{},s)t[a][m]=s[m];n[a]=o?[]:{};var c=i[a];if(!this._isDynamic){var g={};for(var m in c)g[m]=c[m];i[a]=c=g}this._setupProperties(s,t[a],c,n[a],r)}else(void 0===t[a]||r)&&(t[a]=s),o||(t[a]*=1),h?n[a]=i[a].slice().reverse():n[a]=t[a]||0}}},e.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying&&(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object)),this},e.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},e.prototype.pause=function(e){return void 0===e&&(e=r()),this._isPaused||!this._isPlaying||(this._isPaused=!0,this._pauseStart=e,this._group&&this._group.remove(this)),this},e.prototype.resume=function(e){return void 0===e&&(e=r()),this._isPaused&&this._isPlaying&&(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this)),this},e.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},e.prototype.group=function(e){return void 0===e&&(e=l),this._group=e,this},e.prototype.delay=function(e){return void 0===e&&(e=0),this._delayTime=e,this},e.prototype.repeat=function(e){return void 0===e&&(e=0),this._initialRepeat=e,this._repeat=e,this},e.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},e.prototype.yoyo=function(e){return void 0===e&&(e=!1),this._yoyo=e,this},e.prototype.easing=function(e){return void 0===e&&(e=n.Linear.None),this._easingFunction=e,this},e.prototype.interpolation=function(e){return void 0===e&&(e=s.Linear),this._interpolationFunction=e,this},e.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},e.prototype.onStart=function(e){return this._onStartCallback=e,this},e.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},e.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},e.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},e.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},e.prototype.onStop=function(e){return this._onStopCallback=e,this},e.prototype.update=function(e,t){if(void 0===e&&(e=r()),void 0===t&&(t=!0),this._isPaused)return!0;var i,n=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(e>n)return!1;t&&this.start(e,!0)}if(this._goToEnd=!1,e<this._startTime)return!0;!1===this._onStartCallbackFired&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),!1===this._onEveryStartCallbackFired&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var a=e-this._startTime,s=this._duration+(null!==(i=this._repeatDelayTime)&&void 0!==i?i:this._delayTime),o=this._duration+this._repeat*s,l=this._calculateElapsedPortion(a,s,o),h=this._easingFunction(l),c=this._calculateCompletionStatus(a,s);if("repeat"===c&&this._processRepetition(a,s),this._updateProperties(this._object,this._valuesStart,this._valuesEnd,h),"about-to-repeat"===c&&this._processRepetition(a,s),this._onUpdateCallback&&this._onUpdateCallback(this._object,l),"repeat"===c||"about-to-repeat"===c)this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1;else if("completed"===c){this._isPlaying=!1,this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var u=0,d=this._chainedTweens.length;u<d;u++)this._chainedTweens[u].start(this._startTime+this._duration,!1)}return"completed"!==c},e.prototype._calculateElapsedPortion=function(e,t,i){if(0===this._duration||e>i)return 1;var n=Math.min(e%t/this._duration,1);return 0===n&&0!==e&&e%this._duration==0?1:n},e.prototype._calculateCompletionStatus=function(e,t){return 0!==this._duration&&e<this._duration?"playing":this._repeat<=0?"completed":e===this._duration?"about-to-repeat":"repeat"},e.prototype._processRepetition=function(e,t){var i=Math.min(Math.trunc((e-this._duration)/t)+1,this._repeat);for(var n in isFinite(this._repeat)&&(this._repeat-=i),this._valuesStartRepeat){var r=this._valuesEnd[n];this._yoyo||"string"!=typeof r||(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(r)),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n]}this._yoyo&&(this._reversed=!this._reversed),this._startTime+=t*i},e.prototype._updateProperties=function(e,t,i,n){for(var r in i)if(void 0!==t[r]){var a=t[r]||0,s=i[r],o=Array.isArray(e[r]),l=Array.isArray(s);!o&&l?e[r]=this._interpolationFunction(s,n):"object"==typeof s&&s?this._updateProperties(e[r],a,s,n):"number"==typeof(s=this._handleRelativeValue(a,s))&&(e[r]=a+(s-a)*n)}},e.prototype._handleRelativeValue=function(e,t){return"string"!=typeof t?t:"+"===t.charAt(0)||"-"===t.charAt(0)?e+parseFloat(t):parseFloat(t)},e.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],i=this._valuesEnd[e];"string"==typeof i?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(i):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=t},e}(),c=(o.nextId,l.getAll.bind(l)),u=l.removeAll.bind(l),d=(l.add.bind(l),l.remove.bind(l),l.update.bind(l))}),E("chmDu",function(e,t){var i=S("jYBtj");class n extends i.default{constructor(){super("Franka","franka_description","robots/panda_arm_hand.urdf.xacro"),this.robotRoot="panda_link0",this.handRoot="panda_hand",this.modelScale=10,this.defaultPose={panda_joint1:.5,panda_joint2:-.3,panda_joint4:-1.8,panda_joint6:1.5,panda_joint7:1},this.tcp.parent="panda_hand",this.tcp.position=[0,0,.103394],this.ikEnabled=["panda_joint1","panda_joint2","panda_joint4"],this.interactionJointLimits={panda_joint4:{upper:-Math.PI/6}}}}e.exports=new n}),E("jYBtj",function(e,t){_(e.exports,"default",()=>s);var i=S("ilwiq"),n=S("71kF2"),r=S("59kwG");let a=e=>r.join("",e);class s{constructor(e,t,n){this.name=e,this._package=t+"/",this._xacro=n,this.useAdvancedGripping=!0,this.model={},this.links=[],this.joints=[],this.packages={get[t](){return a(t)}},this.arm={joints:[],movable:[],links:[]},this.hand={joints:[],movable:[],links:[],invertOpenClose:!1},this.robotRoot="",this.handRoot="",this.rosMacros={},this.modelScale=1,this.partNames={arm:[],hand:[]},this.defaultPose={},this.tcp={parent:"",position:[0,0,0],rotation:[0,0,0],object:new i.Object3D},this.ikEnabled=[],this.interactionJointLimits={},this.maxSpeed={move:1,gripper:.2},this.generator=null}init(e){for(let t of(this.model=e,this.joints=e.joints,this.links=e.links,this.model.scale.set(this.modelScale,this.modelScale,this.modelScale),this.tcp.object.position.set(...this.tcp.position),this.tcp.object.quaternion.multiply(new(0,i.Quaternion)().setFromEuler(new(0,i.Euler)().set(...this.tcp.rotation))),this.getFrame(this.tcp.parent).add(this.tcp.object),this.robotRoot=this.getFrame(this.robotRoot),(0,n.traverse)(this.robotRoot,e=>{if(e.name===this.handRoot)return!0;this.partNames.arm.push(e.name),this.isJoint(e)?(this.arm.joints.push(e),this.isMovable(e)&&this.arm.movable.push(e)):this.isLink(e)&&this.arm.links.push(e)}),this.handRoot=this.getFrame(this.handRoot),(0,n.traverse)(this.handRoot,e=>{this.partNames.hand.push(e.name),this.isJoint(e)?(this.hand.joints.push(e),this.isMovable(e)&&this.hand.movable.push(e)):this.isLink(e)&&this.hand.links.push(e)}),this.hand.movable))t.states={closed:this.hand.invertOpenClose?t.limit.upper:t.limit.lower,opened:this.hand.invertOpenClose?t.limit.lower:t.limit.upper}}onLoadComplete(){}get root(){return""}get package(){return r.join(this.root,this._package)}get xacro(){return r.join(this.package,this._xacro)}setPose(e){if(Array.isArray(e)){if(e.length!==this.arm.movable.length)throw Error("Array length must be equal to the number of movable joints");for(let t=0;t<e.length;t++)this.arm.movable[t].setJointValue(e[t])}else if("object"==typeof e)for(let t of this.arm.movable){let i=e[t.name];"number"==typeof i&&t.setJointValue(i)}else throw Error('Invalid pose type "'+typeof e+'"')}isJoint(e){return"URDFJoint"===e.type}isLink(e){return"URDFLink"===e.type}isArm(e){return this.partNames.arm.includes(e.name)}isHand(e){return this.partNames.hand.includes(e.name)}isMovable(e){return this.isJoint(e)&&"fixed"!==e._jointType}isIKEnabled(e){return this.ikEnabled.length>0?this.ikEnabled.includes(e.name):this.isMovable(e)&&this.isArm(e)}isGripperOpen(){return this.getGripperAbduction()>=.5}getGripperAbduction(){if(0===this.hand.movable.length)return 0;let e=0;for(let t of this.hand.movable){let i=t.angle,n=t.limit.upper,r=t.limit.lower;e+=(i-r)/(n-r)}return e/this.hand.movable.length}getJointForLink(e){"string"==typeof e&&(e=this.model.links[e]);let t=e.parent;for(;t;){if(this.isJoint(t))return t;t=t.parent}return null}getLinkForJoint(e){for(let t of("string"==typeof e&&(e=this.model.joints[e]),e.children))if(this.isLink(t))return t;return null}getFrame(e){return this.model.frames[e]}createSkeleton(){let e=new i.Vector3,t=new i.Bone,n={origin:this.model,root:t,bones:[],tip:this.tcp.object};for(let r of this.arm.movable){this.getLinkForJoint(r).getWorldPosition(e);let a=new i.Bone;a.robotJoint=r,t.add(a),t.lookAt(e),t.updateMatrixWorld(),a.position.copy(a.worldToLocal(e)),n.bones.push(a),t=a}return n}}}),E("ilwiq",function(e,t){let i,n,r;_(e.exports,"MOUSE",()=>a),_(e.exports,"TOUCH",()=>s),_(e.exports,"FrontSide",()=>o),_(e.exports,"DoubleSide",()=>l),_(e.exports,"RepeatWrapping",()=>c),_(e.exports,"ClampToEdgeWrapping",()=>u),_(e.exports,"LinearMipmapLinearFilter",()=>d),_(e.exports,"SRGBColorSpace",()=>p),_(e.exports,"EventDispatcher",()=>M),_(e.exports,"MathUtils",()=>I),_(e.exports,"Vector2",()=>U),_(e.exports,"Quaternion",()=>er),_(e.exports,"Vector3",()=>ea),_(e.exports,"Ray",()=>eU),_(e.exports,"Matrix4",()=>eO),_(e.exports,"Euler",()=>ej),_(e.exports,"Object3D",()=>e8),_(e.exports,"Color",()=>tf),_(e.exports,"MeshBasicMaterial",()=>ty),_(e.exports,"BufferAttribute",()=>tb),_(e.exports,"Float32BufferAttribute",()=>tS),_(e.exports,"BufferGeometry",()=>tN),_(e.exports,"Mesh",()=>tZ),_(e.exports,"BoxGeometry",()=>tQ),_(e.exports,"PerspectiveCamera",()=>t8),_(e.exports,"Plane",()=>is),_(e.exports,"PlaneGeometry",()=>id),_(e.exports,"OrthographicCamera",()=>iT),_(e.exports,"Group",()=>r_),_(e.exports,"WebGLRenderer",()=>rP),_(e.exports,"Scene",()=>rL),_(e.exports,"SkinnedMesh",()=>rV),_(e.exports,"Bone",()=>rH),_(e.exports,"Skeleton",()=>rq),_(e.exports,"LineBasicMaterial",()=>rX),_(e.exports,"Line",()=>r1),_(e.exports,"LineSegments",()=>r5),_(e.exports,"PointsMaterial",()=>r6),_(e.exports,"Points",()=>at),_(e.exports,"CylinderGeometry",()=>aS),_(e.exports,"OctahedronGeometry",()=>aK),_(e.exports,"SphereGeometry",()=>a0),_(e.exports,"TorusGeometry",()=>a2),_(e.exports,"MeshPhongMaterial",()=>a5),_(e.exports,"MeshLambertMaterial",()=>a6),_(e.exports,"QuaternionKeyframeTrack",()=>sh),_(e.exports,"VectorKeyframeTrack",()=>su),_(e.exports,"AnimationClip",()=>sd),_(e.exports,"LoadingManager",()=>sf),_(e.exports,"DefaultLoadingManager",()=>sm),_(e.exports,"Loader",()=>sg),_(e.exports,"FileLoader",()=>s_),_(e.exports,"DataTextureLoader",()=>sb),_(e.exports,"TextureLoader",()=>sM),_(e.exports,"HemisphereLight",()=>sS),_(e.exports,"SpotLight",()=>sP),_(e.exports,"PointLight",()=>sO),_(e.exports,"DirectionalLight",()=>sF),_(e.exports,"AmbientLight",()=>sz),_(e.exports,"LoaderUtils",()=>sB),_(e.exports,"Raycaster",()=>sJ),_(e.exports,"Spherical",()=>sQ),_(e.exports,"PolarGridHelper",()=>s$),_(e.exports,"ArrowHelper",()=>s1);let a={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},s={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},o=0,l=2,h="attached",c=1e3,u=1001,d=1008,p="srgb",f="srgb-linear",m="display-p3",g="display-p3-linear",v="linear",y="srgb",x="rec709",b="300 es";class M{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let i=this._listeners[e];if(void 0!==i){let e=i.indexOf(t);-1!==e&&i.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners[e.type];if(void 0!==t){e.target=this;let i=t.slice(0);for(let t=0,n=i.length;t<n;t++)i[t].call(this,e);e.target=null}}}let w=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],S=1234567,E=Math.PI/180,T=180/Math.PI;function A(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(w[255&e]+w[e>>8&255]+w[e>>16&255]+w[e>>24&255]+"-"+w[255&t]+w[t>>8&255]+"-"+w[t>>16&15|64]+w[t>>24&255]+"-"+w[63&i|128]+w[i>>8&255]+"-"+w[i>>16&255]+w[i>>24&255]+w[255&n]+w[n>>8&255]+w[n>>16&255]+w[n>>24&255]).toLowerCase()}function C(e,t,i){return Math.max(t,Math.min(i,e))}function R(e,t){return(e%t+t)%t}function P(e,t,i){return(1-i)*e+i*t}function L(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function N(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}let I={DEG2RAD:E,RAD2DEG:T,generateUUID:A,clamp:C,euclideanModulo:R,mapLinear:function(e,t,i,n,r){return n+(e-t)*(r-n)/(i-t)},inverseLerp:function(e,t,i){return e!==t?(i-e)/(t-e):0},lerp:P,damp:function(e,t,i,n){return P(e,t,1-Math.exp(-i*n))},pingpong:function(e,t=1){return t-Math.abs(R(e,2*t)-t)},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(S=e);let t=S+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*E},radToDeg:function(e){return e*T},isPowerOfTwo:function(e){return(e&e-1)==0&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,i,n,r){let a=Math.cos,s=Math.sin,o=a(i/2),l=s(i/2),h=a((t+n)/2),c=s((t+n)/2),u=a((t-n)/2),d=s((t-n)/2),p=a((n-t)/2),f=s((n-t)/2);switch(r){case"XYX":e.set(o*c,l*u,l*d,o*h);break;case"YZY":e.set(l*d,o*c,l*u,o*h);break;case"ZXZ":e.set(l*u,l*d,o*c,o*h);break;case"XZX":e.set(o*c,l*f,l*p,o*h);break;case"YXY":e.set(l*p,o*c,l*f,o*h);break;case"ZYZ":e.set(l*f,l*p,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:N,denormalize:L};class U{constructor(e=0,t=0){U.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(C(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*i-a*n+e.x,this.y=r*n+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class O{constructor(e,t,i,n,r,a,s,o,l){O.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,i,n,r,a,s,o,l)}set(e,t,i,n,r,a,s,o,l){let h=this.elements;return h[0]=e,h[1]=n,h[2]=s,h[3]=t,h[4]=r,h[5]=o,h[6]=i,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[3],o=i[6],l=i[1],h=i[4],c=i[7],u=i[2],d=i[5],p=i[8],f=n[0],m=n[3],g=n[6],v=n[1],y=n[4],_=n[7],x=n[2],b=n[5],M=n[8];return r[0]=a*f+s*v+o*x,r[3]=a*m+s*y+o*b,r[6]=a*g+s*_+o*M,r[1]=l*f+h*v+c*x,r[4]=l*m+h*y+c*b,r[7]=l*g+h*_+c*M,r[2]=u*f+d*v+p*x,r[5]=u*m+d*y+p*b,r[8]=u*g+d*_+p*M,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8];return t*a*h-t*s*l-i*r*h+i*s*o+n*r*l-n*a*o}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=h*a-s*l,u=s*o-h*r,d=l*r-a*o,p=t*c+i*u+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=c*f,e[1]=(n*l-h*i)*f,e[2]=(s*i-n*a)*f,e[3]=u*f,e[4]=(h*t-n*o)*f,e[5]=(n*r-s*t)*f,e[6]=d*f,e[7]=(i*o-l*t)*f,e[8]=(a*t-i*r)*f,this}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,a,s){let o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*a+l*s)+a+e,-n*l,n*o,-n*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){return this.premultiply(D.makeScale(e,t)),this}rotate(e){return this.premultiply(D.makeRotation(-e)),this}translate(e,t){return this.premultiply(D.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){let t=this.elements,i=e.elements;for(let e=0;e<9;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}let D=new O;function F(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function z(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let B={};function k(e){e in B||(B[e]=!0,console.warn(e))}let V=new O().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),H=new O().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),G={[f]:{transfer:v,primaries:x,toReference:e=>e,fromReference:e=>e},[p]:{transfer:y,primaries:x,toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[g]:{transfer:v,primaries:"p3",toReference:e=>e.applyMatrix3(H),fromReference:e=>e.applyMatrix3(V)},[m]:{transfer:y,primaries:"p3",toReference:e=>e.convertSRGBToLinear().applyMatrix3(H),fromReference:e=>e.applyMatrix3(V).convertLinearToSRGB()}},W=new Set([f,g]),j={enabled:!0,_workingColorSpace:f,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(colorSpace){if(!W.has(colorSpace))throw Error(`Unsupported working color space, "${colorSpace}".`);this._workingColorSpace=colorSpace},convert:function(e,t,i){if(!1===this.enabled||t===i||!t||!i)return e;let n=G[t].toReference;return(0,G[i].fromReference)(n(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return G[e].primaries},getTransfer:function(e){return""===e?v:G[e].transfer}};function q(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function X(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Y{static getDataURL(e){let t;if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;if(e instanceof HTMLCanvasElement)t=e;else{void 0===i&&(i=z("canvas")),i.width=e.width,i.height=e.height;let n=i.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=i}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=z("canvas");t.width=e.width,t.height=e.height;let i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);let n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let e=0;e<r.length;e++)r[e]=255*q(r[e]/255);return i.putImageData(n,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*q(t[e]/255)):t[e]=q(t[e]);return{data:t,width:e.width,height:e.height}}}}let J=0;class Z{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:J++}),this.uuid=A(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let e;if(Array.isArray(n)){e=[];for(let t=0,i=n.length;t<i;t++)n[t].isDataTexture?e.push(K(n[t].image)):e.push(K(n[t]))}else e=K(n);i.url=e}return t||(e.images[this.uuid]=i),i}}function K(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Y.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Q=0;class $ extends M{constructor(e=$.DEFAULT_IMAGE,t=$.DEFAULT_MAPPING,i=u,n=u,r=1006,a=d,s=1023,o=1009,l=$.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Q++}),this.uuid=A(),this.name="",this.source=new Z(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new U(0,0),this.repeat=new U(1,1),this.center=new U(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new O,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case c:e.x=e.x-Math.floor(e.x);break;case u:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case c:e.y=e.y-Math.floor(e.y);break;case u:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){!0===e&&this.pmremVersion++}}$.DEFAULT_IMAGE=null,$.DEFAULT_MAPPING=300,$.DEFAULT_ANISOTROPY=1;class ee{constructor(e=0,t=0,i=0,n=1){ee.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*t+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*t+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*t+a[7]*i+a[11]*n+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r;let a=e.elements,s=a[0],o=a[4],l=a[8],h=a[1],c=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-d)&&.01>Math.abs(u-p)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+d)&&.1>Math.abs(u+p)&&.1>Math.abs(s+c+f-3))return this.set(1,0,0,0),this;t=Math.PI;let e=(s+1)/2,a=(c+1)/2,m=(f+1)/2,g=(o+h)/4,v=(l+d)/4,y=(u+p)/4;return e>a&&e>m?e<.01?(i=0,n=.707106781,r=.707106781):(n=g/(i=Math.sqrt(e)),r=v/i):a>m?a<.01?(i=.707106781,n=0,r=.707106781):(i=g/(n=Math.sqrt(a)),r=y/n):m<.01?(i=.707106781,n=.707106781,r=0):(i=v/(r=Math.sqrt(m)),n=y/r),this.set(i,n,r,t),this}let m=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(h-o)*(h-o));return .001>Math.abs(m)&&(m=1),this.x=(p-u)/m,this.y=(l-d)/m,this.z=(h-o)/m,this.w=Math.acos((s+c+f-1)/2),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class et extends M{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new ee(0,0,e,t),this.scissorTest=!1,this.viewport=new ee(0,0,e,t);let n=new $({width:e,height:t,depth:1},(i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:1006,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i)).mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);n.flipY=!1,n.generateMipmaps=i.generateMipmaps,n.internalFormat=i.internalFormat,this.textures=[];let r=i.count;for(let e=0;e<r;e++)this.textures[e]=n.clone(),this.textures[e].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++)this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0;let t=Object.assign({},e.texture.image);return this.texture.source=new Z(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ei extends et{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class en extends ${constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class er{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,a,s){let o=i[n+0],l=i[n+1],h=i[n+2],c=i[n+3],u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c;return}if(1===s){e[t+0]=u,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(c!==f||o!==u||l!==d||h!==p){let e=1-s,t=o*u+l*d+h*p+c*f,i=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){let r=Math.sqrt(n),a=Math.atan2(r,t*i);e=Math.sin(e*a)/r,s=Math.sin(s*a)/r}let r=s*i;if(o=o*e+u*r,l=l*e+d*r,h=h*e+p*r,c=c*e+f*r,e===1-s){let e=1/Math.sqrt(o*o+l*l+h*h+c*c);o*=e,l*=e,h*=e,c*=e}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c}static multiplyQuaternionsFlat(e,t,i,n,r,a){let s=i[n],o=i[n+1],l=i[n+2],h=i[n+3],c=r[a],u=r[a+1],d=r[a+2],p=r[a+3];return e[t]=s*p+h*c+o*d-l*u,e[t+1]=o*p+h*u+l*c-s*d,e[t+2]=l*p+h*d+s*u-o*c,e[t+3]=h*p-s*c-o*u-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){let i=e._x,n=e._y,r=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(i/2),h=s(n/2),c=s(r/2),u=o(i/2),d=o(n/2),p=o(r/2);switch(a){case"XYZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"YXZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"ZXY":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"ZYX":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"YZX":this._x=u*h*c+l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c-u*d*p;break;case"XZY":this._x=u*h*c-l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],n=t[4],r=t[8],a=t[1],s=t[5],o=t[9],l=t[2],h=t[6],c=t[10],u=i+s+c;if(u>0){let e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(h-o)*e,this._y=(r-l)*e,this._z=(a-n)*e}else if(i>s&&i>c){let e=2*Math.sqrt(1+i-s-c);this._w=(h-o)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(r+l)/e}else if(s>c){let e=2*Math.sqrt(1+s-i-c);this._w=(r-l)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(o+h)/e}else{let e=2*Math.sqrt(1+c-i-s);this._w=(a-n)/e,this._x=(r+l)/e,this._y=(o+h)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=i,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(C(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);if(0===i)return this;let n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,n=e._y,r=e._z,a=e._w,s=t._x,o=t._y,l=t._z,h=t._w;return this._x=i*h+a*s+n*l-r*o,this._y=n*h+a*o+r*s-i*l,this._z=r*h+a*l+i*o-n*s,this._w=a*h-i*s-n*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let i=this._x,n=this._y,r=this._z,a=this._w,s=a*e._w+i*e._x+n*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=i,this._y=n,this._z=r,this;let o=1-s*s;if(o<=Number.EPSILON){let e=1-t;return this._w=e*a+t*this._w,this._x=e*i+t*this._x,this._y=e*n+t*this._y,this._z=e*r+t*this._z,this.normalize(),this}let l=Math.sqrt(o),h=Math.atan2(l,s),c=Math.sin((1-t)*h)/l,u=Math.sin(t*h)/l;return this._w=a*c+this._w*u,this._x=i*c+this._x*u,this._y=n*c+this._y*u,this._z=r*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){let e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ea{constructor(e=0,t=0,i=0){ea.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(eo.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(eo.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=e.elements,a=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*a,this}applyQuaternion(e){let t=this.x,i=this.y,n=this.z,r=e.x,a=e.y,s=e.z,o=e.w,l=2*(a*n-s*i),h=2*(s*t-r*n),c=2*(r*i-a*t);return this.x=t+o*l+a*c-s*h,this.y=i+o*h+s*l-r*c,this.z=n+o*c+r*h-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,n=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=n*o-r*s,this.y=r*a-i*o,this.z=i*s-n*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return es.copy(this).projectOnVector(e),this.sub(es)}reflect(e){return this.sub(es.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(C(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=Math.random()*Math.PI*2,t=2*Math.random()-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let es=new ea,eo=new er;class el{constructor(e=new ea(1/0,1/0,1/0),t=new ea(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(ec.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(ec.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=ec.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let i=e.geometry;if(void 0!==i){let n=i.getAttribute("position");if(!0===t&&void 0!==n&&!0!==e.isInstancedMesh)for(let t=0,i=n.count;t<i;t++)!0===e.isMesh?e.getVertexPosition(t,ec):ec.fromBufferAttribute(n,t),ec.applyMatrix4(e.matrixWorld),this.expandByPoint(ec);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),eu.copy(e.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),eu.copy(i.boundingBox)),eu.applyMatrix4(e.matrixWorld),this.union(eu)}let n=e.children;for(let e=0,i=n.length;e<i;e++)this.expandByObject(n[e],t);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ec),ec.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ey),e_.subVectors(this.max,ey),ed.subVectors(e.a,ey),ep.subVectors(e.b,ey),ef.subVectors(e.c,ey),em.subVectors(ep,ed),eg.subVectors(ef,ep),ev.subVectors(ed,ef);let t=[0,-em.z,em.y,0,-eg.z,eg.y,0,-ev.z,ev.y,em.z,0,-em.x,eg.z,0,-eg.x,ev.z,0,-ev.x,-em.y,em.x,0,-eg.y,eg.x,0,-ev.y,ev.x,0];return!!(eM(t,ed,ep,ef,e_)&&eM(t=[1,0,0,0,1,0,0,0,1],ed,ep,ef,e_))&&(ex.crossVectors(em,eg),eM(t=[ex.x,ex.y,ex.z],ed,ep,ef,e_))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ec).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(ec).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(eh[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),eh[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),eh[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),eh[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),eh[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),eh[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),eh[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),eh[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(eh)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}let eh=[new ea,new ea,new ea,new ea,new ea,new ea,new ea,new ea],ec=new ea,eu=new el,ed=new ea,ep=new ea,ef=new ea,em=new ea,eg=new ea,ev=new ea,ey=new ea,e_=new ea,ex=new ea,eb=new ea;function eM(e,t,i,n,r){for(let a=0,s=e.length-3;a<=s;a+=3){eb.fromArray(e,a);let s=r.x*Math.abs(eb.x)+r.y*Math.abs(eb.y)+r.z*Math.abs(eb.z),o=t.dot(eb),l=i.dot(eb),h=n.dot(eb);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>s)return!1}return!0}let ew=new el,eS=new ea,eE=new ea;class eT{constructor(e=new ea,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;void 0!==t?i.copy(t):ew.setFromPoints(e).getCenter(i);let n=0;for(let t=0,r=e.length;t<r;t++)n=Math.max(n,i.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;eS.subVectors(e,this.center);let t=eS.lengthSq();if(t>this.radius*this.radius){let e=Math.sqrt(t),i=(e-this.radius)*.5;this.center.addScaledVector(eS,i/e),this.radius+=i}return this}union(e){return e.isEmpty()||(this.isEmpty()?this.copy(e):!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(eE.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(eS.copy(e.center).add(eE)),this.expandByPoint(eS.copy(e.center).sub(eE)))),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let eA=new ea,eC=new ea,eR=new ea,eP=new ea,eL=new ea,eN=new ea,eI=new ea;class eU{constructor(e=new ea,t=new ea(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,eA)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=eA.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(eA.copy(this.origin).addScaledVector(this.direction,t),eA.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){let r,a,s,o;eC.copy(e).add(t).multiplyScalar(.5),eR.copy(t).sub(e).normalize(),eP.copy(this.origin).sub(eC);let l=.5*e.distanceTo(t),h=-this.direction.dot(eR),c=eP.dot(this.direction),u=-eP.dot(eR),d=eP.lengthSq(),p=Math.abs(1-h*h);if(p>0){if(r=h*u-c,a=h*c-u,o=l*p,r>=0){if(a>=-o){if(a<=o){let e=1/p;r*=e,a*=e,s=r*(r+h*a+2*c)+a*(h*r+a+2*u)+d}else s=-(r=Math.max(0,-(h*(a=l)+c)))*r+a*(a+2*u)+d}else s=-(r=Math.max(0,-(h*(a=-l)+c)))*r+a*(a+2*u)+d}else a<=-o?(a=(r=Math.max(0,-(-h*l+c)))>0?-l:Math.min(Math.max(-l,-u),l),s=-r*r+a*(a+2*u)+d):a<=o?(r=0,s=(a=Math.min(Math.max(-l,-u),l))*(a+2*u)+d):(a=(r=Math.max(0,-(h*l+c)))>0?l:Math.min(Math.max(-l,-u),l),s=-r*r+a*(a+2*u)+d)}else a=h>0?-l:l,s=-(r=Math.max(0,-(h*a+c)))*r+a*(a+2*u)+d;return i&&i.copy(this.origin).addScaledVector(this.direction,r),n&&n.copy(eC).addScaledVector(eR,a),s}intersectSphere(e,t){eA.subVectors(e.center,this.origin);let i=eA.dot(this.direction),n=eA.dot(eA)-i*i,r=e.radius*e.radius;if(n>r)return null;let a=Math.sqrt(r-n),s=i-a,o=i+a;return o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return!!(0===t||e.normal.dot(this.direction)*t<0)}intersectBox(e,t){let i,n,r,a,s,o;let l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return(l>=0?(i=(e.min.x-u.x)*l,n=(e.max.x-u.x)*l):(i=(e.max.x-u.x)*l,n=(e.min.x-u.x)*l),h>=0?(r=(e.min.y-u.y)*h,a=(e.max.y-u.y)*h):(r=(e.max.y-u.y)*h,a=(e.min.y-u.y)*h),i>a||r>n)?null:((r>i||isNaN(i))&&(i=r),(a<n||isNaN(n))&&(n=a),c>=0?(s=(e.min.z-u.z)*c,o=(e.max.z-u.z)*c):(s=(e.max.z-u.z)*c,o=(e.min.z-u.z)*c),i>o||s>n)?null:((s>i||i!=i)&&(i=s),(o<n||n!=n)&&(n=o),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return null!==this.intersectBox(e,eA)}intersectTriangle(e,t,i,n,r){let a;eL.subVectors(t,e),eN.subVectors(i,e),eI.crossVectors(eL,eN);let s=this.direction.dot(eI);if(s>0){if(n)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}eP.subVectors(this.origin,e);let o=a*this.direction.dot(eN.crossVectors(eP,eN));if(o<0)return null;let l=a*this.direction.dot(eL.cross(eP));if(l<0||o+l>s)return null;let h=-a*eP.dot(eI);return h<0?null:this.at(h/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class eO{constructor(e,t,i,n,r,a,s,o,l,h,c,u,d,p,f,m){eO.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,i,n,r,a,s,o,l,h,c,u,d,p,f,m)}set(e,t,i,n,r,a,s,o,l,h,c,u,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new eO().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,n=1/eD.setFromMatrixColumn(e,0).length(),r=1/eD.setFromMatrixColumn(e,1).length(),a=1/eD.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,i=e.x,n=e.y,r=e.z,a=Math.cos(i),s=Math.sin(i),o=Math.cos(n),l=Math.sin(n),h=Math.cos(r),c=Math.sin(r);if("XYZ"===e.order){let e=a*h,i=a*c,n=s*h,r=s*c;t[0]=o*h,t[4]=-o*c,t[8]=l,t[1]=i+n*l,t[5]=e-r*l,t[9]=-s*o,t[2]=r-e*l,t[6]=n+i*l,t[10]=a*o}else if("YXZ"===e.order){let e=o*h,i=o*c,n=l*h,r=l*c;t[0]=e+r*s,t[4]=n*s-i,t[8]=a*l,t[1]=a*c,t[5]=a*h,t[9]=-s,t[2]=i*s-n,t[6]=r+e*s,t[10]=a*o}else if("ZXY"===e.order){let e=o*h,i=o*c,n=l*h,r=l*c;t[0]=e-r*s,t[4]=-a*c,t[8]=n+i*s,t[1]=i+n*s,t[5]=a*h,t[9]=r-e*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let e=a*h,i=a*c,n=s*h,r=s*c;t[0]=o*h,t[4]=n*l-i,t[8]=e*l+r,t[1]=o*c,t[5]=r*l+e,t[9]=i*l-n,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let e=a*o,i=a*l,n=s*o,r=s*l;t[0]=o*h,t[4]=r-e*c,t[8]=n*c+i,t[1]=c,t[5]=a*h,t[9]=-s*h,t[2]=-l*h,t[6]=i*c+n,t[10]=e-r*c}else if("XZY"===e.order){let e=a*o,i=a*l,n=s*o,r=s*l;t[0]=o*h,t[4]=-c,t[8]=l*h,t[1]=e*c+r,t[5]=a*h,t[9]=i*c-n,t[2]=n*c-i,t[6]=s*h,t[10]=r*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ez,e,eB)}lookAt(e,t,i){let n=this.elements;return eH.subVectors(e,t),0===eH.lengthSq()&&(eH.z=1),eH.normalize(),ek.crossVectors(i,eH),0===ek.lengthSq()&&(1===Math.abs(i.z)?eH.x+=1e-4:eH.z+=1e-4,eH.normalize(),ek.crossVectors(i,eH)),ek.normalize(),eV.crossVectors(eH,ek),n[0]=ek.x,n[4]=eV.x,n[8]=eH.x,n[1]=ek.y,n[5]=eV.y,n[9]=eH.y,n[2]=ek.z,n[6]=eV.z,n[10]=eH.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[4],o=i[8],l=i[12],h=i[1],c=i[5],u=i[9],d=i[13],p=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],_=i[11],x=i[15],b=n[0],M=n[4],w=n[8],S=n[12],E=n[1],T=n[5],A=n[9],C=n[13],R=n[2],P=n[6],L=n[10],N=n[14],I=n[3],U=n[7],O=n[11],D=n[15];return r[0]=a*b+s*E+o*R+l*I,r[4]=a*M+s*T+o*P+l*U,r[8]=a*w+s*A+o*L+l*O,r[12]=a*S+s*C+o*N+l*D,r[1]=h*b+c*E+u*R+d*I,r[5]=h*M+c*T+u*P+d*U,r[9]=h*w+c*A+u*L+d*O,r[13]=h*S+c*C+u*N+d*D,r[2]=p*b+f*E+m*R+g*I,r[6]=p*M+f*T+m*P+g*U,r[10]=p*w+f*A+m*L+g*O,r[14]=p*S+f*C+m*N+g*D,r[3]=v*b+y*E+_*R+x*I,r[7]=v*M+y*T+_*P+x*U,r[11]=v*w+y*A+_*L+x*O,r[15]=v*S+y*C+_*N+x*D,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14],p=e[3];return p*(+r*o*c-n*l*c-r*s*u+i*l*u+n*s*d-i*o*d)+e[7]*(+t*o*d-t*l*u+r*a*u-n*a*d+n*l*h-r*o*h)+e[11]*(+t*l*c-t*s*d-r*a*c+i*a*d+r*s*h-i*l*h)+e[15]*(-n*s*h-t*o*c+t*s*u+n*a*c-i*a*u+i*o*h)}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(e,t,i){let n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=e[9],u=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=c*m*l-f*u*l+f*o*d-s*m*d-c*o*g+s*u*g,y=p*u*l-h*m*l-p*o*d+a*m*d+h*o*g-a*u*g,_=h*f*l-p*c*l+p*s*d-a*f*d-h*s*g+a*c*g,x=p*c*o-h*f*o-p*s*u+a*f*u+h*s*m-a*c*m,b=t*v+i*y+n*_+r*x;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let M=1/b;return e[0]=v*M,e[1]=(f*u*r-c*m*r-f*n*d+i*m*d+c*n*g-i*u*g)*M,e[2]=(s*m*r-f*o*r+f*n*l-i*m*l-s*n*g+i*o*g)*M,e[3]=(c*o*r-s*u*r-c*n*l+i*u*l+s*n*d-i*o*d)*M,e[4]=y*M,e[5]=(h*m*r-p*u*r+p*n*d-t*m*d-h*n*g+t*u*g)*M,e[6]=(p*o*r-a*m*r-p*n*l+t*m*l+a*n*g-t*o*g)*M,e[7]=(a*u*r-h*o*r+h*n*l-t*u*l-a*n*d+t*o*d)*M,e[8]=_*M,e[9]=(p*c*r-h*f*r-p*i*d+t*f*d+h*i*g-t*c*g)*M,e[10]=(a*f*r-p*s*r+p*i*l-t*f*l-a*i*g+t*s*g)*M,e[11]=(h*s*r-a*c*r-h*i*l+t*c*l+a*i*d-t*s*d)*M,e[12]=x*M,e[13]=(h*f*n-p*c*n+p*i*u-t*f*u-h*i*m+t*c*m)*M,e[14]=(p*s*n-a*f*n-p*i*o+t*f*o+a*i*m-t*s*m)*M,e[15]=(a*c*n-h*s*n+h*i*o-t*c*o-a*i*u+t*s*u)*M,this}scale(e){let t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),n=Math.sin(t),r=1-i,a=e.x,s=e.y,o=e.z,l=r*a,h=r*s;return this.set(l*a+i,l*s-n*o,l*o+n*s,0,l*s+n*o,h*s+i,h*o-n*a,0,l*o-n*s,h*o+n*a,r*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,a){return this.set(1,i,r,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){let n=this.elements,r=t._x,a=t._y,s=t._z,o=t._w,l=r+r,h=a+a,c=s+s,u=r*l,d=r*h,p=r*c,f=a*h,m=a*c,g=s*c,v=o*l,y=o*h,_=o*c,x=i.x,b=i.y,M=i.z;return n[0]=(1-(f+g))*x,n[1]=(d+_)*x,n[2]=(p-y)*x,n[3]=0,n[4]=(d-_)*b,n[5]=(1-(u+g))*b,n[6]=(m+v)*b,n[7]=0,n[8]=(p+y)*M,n[9]=(m-v)*M,n[10]=(1-(u+f))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){let n=this.elements,r=eD.set(n[0],n[1],n[2]).length(),a=eD.set(n[4],n[5],n[6]).length(),s=eD.set(n[8],n[9],n[10]).length();0>this.determinant()&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],eF.copy(this);let o=1/r,l=1/a,h=1/s;return eF.elements[0]*=o,eF.elements[1]*=o,eF.elements[2]*=o,eF.elements[4]*=l,eF.elements[5]*=l,eF.elements[6]*=l,eF.elements[8]*=h,eF.elements[9]*=h,eF.elements[10]*=h,t.setFromRotationMatrix(eF),i.x=r,i.y=a,i.z=s,this}makePerspective(e,t,i,n,r,a,s=2e3){let o,l;let h=this.elements;if(2e3===s)o=-(a+r)/(a-r),l=-2*a*r/(a-r);else if(2001===s)o=-a/(a-r),l=-a*r/(a-r);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+s);return h[0]=2*r/(t-e),h[4]=0,h[8]=(t+e)/(t-e),h[12]=0,h[1]=0,h[5]=2*r/(i-n),h[9]=(i+n)/(i-n),h[13]=0,h[2]=0,h[6]=0,h[10]=o,h[14]=l,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(e,t,i,n,r,a,s=2e3){let o,l;let h=this.elements,c=1/(t-e),u=1/(i-n),d=1/(a-r);if(2e3===s)o=(a+r)*d,l=-2*d;else if(2001===s)o=r*d,l=-1*d;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+s);return h[0]=2*c,h[4]=0,h[8]=0,h[12]=-((t+e)*c),h[1]=0,h[5]=2*u,h[9]=0,h[13]=-((i+n)*u),h[2]=0,h[6]=0,h[10]=l,h[14]=-o,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let e=0;e<16;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}let eD=new ea,eF=new eO,ez=new ea(0,0,0),eB=new ea(1,1,1),ek=new ea,eV=new ea,eH=new ea,eG=new eO,eW=new er;class ej{constructor(e=0,t=0,i=0,n=ej.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let n=e.elements,r=n[0],a=n[4],s=n[8],o=n[1],l=n[5],h=n[9],c=n[2],u=n[6],d=n[10];switch(t){case"XYZ":this._y=Math.asin(C(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-C(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(C(u,-1,1)),.9999999>Math.abs(u)?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-C(c,-1,1)),.9999999>Math.abs(c)?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(C(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-C(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(u,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return eG.makeRotationFromQuaternion(e),this.setFromRotationMatrix(eG,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return eW.setFromEuler(this),this.setFromQuaternion(eW,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ej.DEFAULT_ORDER="XYZ";class eq{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let eX=0,eY=new ea,eJ=new er,eZ=new eO,eK=new ea,eQ=new ea,e$=new ea,e0=new er,e1=new ea(1,0,0),e2=new ea(0,1,0),e3=new ea(0,0,1),e4={type:"added"},e5={type:"removed"},e6={type:"childadded",child:null},e7={type:"childremoved",child:null};class e8 extends M{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:eX++}),this.uuid=A(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=e8.DEFAULT_UP.clone();let e=new ea,t=new ej,i=new er,n=new ea(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new eO},normalMatrix:{value:new O}}),this.matrix=new eO,this.matrixWorld=new eO,this.matrixAutoUpdate=e8.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=e8.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new eq,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return eJ.setFromAxisAngle(e,t),this.quaternion.multiply(eJ),this}rotateOnWorldAxis(e,t){return eJ.setFromAxisAngle(e,t),this.quaternion.premultiply(eJ),this}rotateX(e){return this.rotateOnAxis(e1,e)}rotateY(e){return this.rotateOnAxis(e2,e)}rotateZ(e){return this.rotateOnAxis(e3,e)}translateOnAxis(e,t){return eY.copy(e).applyQuaternion(this.quaternion),this.position.add(eY.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(e1,e)}translateY(e){return this.translateOnAxis(e2,e)}translateZ(e){return this.translateOnAxis(e3,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(eZ.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?eK.copy(e):eK.set(e,t,i);let n=this.parent;this.updateWorldMatrix(!0,!1),eQ.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?eZ.lookAt(eQ,eK,this.up):eZ.lookAt(eK,eQ,this.up),this.quaternion.setFromRotationMatrix(eZ),n&&(eZ.extractRotation(n.matrixWorld),eJ.setFromRotationMatrix(eZ),this.quaternion.premultiply(eJ.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(e4),e6.child=e,this.dispatchEvent(e6),e6.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}let t=this.children.indexOf(e);return -1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(e5),e7.child=e,this.dispatchEvent(e7),e7.child=null),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),eZ.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),eZ.multiply(e.parent.matrixWorld)),e.applyMatrix4(eZ),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(e4),e6.child=e,this.dispatchEvent(e6),e6.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){let n=this.children[i].getObjectByProperty(e,t);if(void 0!==n)return n}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);let n=this.children;for(let r=0,a=n.length;r<a;r++)n[r].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eQ,e,e$),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eQ,e0,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){let i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===t){let e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){let t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(e=>({boxInitialized:e.boxInitialized,boxMin:e.box.min.toArray(),boxMax:e.box.max.toArray(),sphereInitialized:e.sphereInitialized,sphereRadius:e.sphere.radius,sphereCenter:e.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),null!==this._colorsTexture&&(n.colorsTexture=this._colorsTexture.toJSON(e)),null!==this.boundingSphere&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),null!==this.boundingBox&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);let t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){let i=t.shapes;if(Array.isArray(i))for(let t=0,n=i.length;t<n;t++){let n=i[t];r(e.shapes,n)}else r(e.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let t=[];for(let i=0,n=this.material.length;i<n;i++)t.push(r(e.materials,this.material[i]));n.material=t}else n.material=r(e.materials,this.material)}if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let t=0;t<this.animations.length;t++){let i=this.animations[t];n.animations.push(r(e.animations,i))}}if(t){let t=a(e.geometries),n=a(e.materials),r=a(e.textures),s=a(e.images),o=a(e.shapes),l=a(e.skeletons),h=a(e.animations),c=a(e.nodes);t.length>0&&(i.geometries=t),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),s.length>0&&(i.images=s),o.length>0&&(i.shapes=o),l.length>0&&(i.skeletons=l),h.length>0&&(i.animations=h),c.length>0&&(i.nodes=c)}return i.object=n,i;function a(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){let i=e.children[t];this.add(i.clone())}return this}}e8.DEFAULT_UP=new ea(0,1,0),e8.DEFAULT_MATRIX_AUTO_UPDATE=!0,e8.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let e9=new ea,te=new ea,tt=new ea,ti=new ea,tn=new ea,tr=new ea,ta=new ea,ts=new ea,to=new ea,tl=new ea;class th{constructor(e=new ea,t=new ea,i=new ea){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),e9.subVectors(e,t),n.cross(e9);let r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){e9.subVectors(n,t),te.subVectors(i,t),tt.subVectors(e,t);let a=e9.dot(e9),s=e9.dot(te),o=e9.dot(tt),l=te.dot(te),h=te.dot(tt),c=a*l-s*s;if(0===c)return r.set(0,0,0),null;let u=1/c,d=(l*o-s*h)*u,p=(a*h-s*o)*u;return r.set(1-d-p,p,d)}static containsPoint(e,t,i,n){return null!==this.getBarycoord(e,t,i,n,ti)&&ti.x>=0&&ti.y>=0&&ti.x+ti.y<=1}static getInterpolation(e,t,i,n,r,a,s,o){return null===this.getBarycoord(e,t,i,n,ti)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,ti.x),o.addScaledVector(a,ti.y),o.addScaledVector(s,ti.z),o)}static isFrontFacing(e,t,i,n){return e9.subVectors(i,t),te.subVectors(e,t),0>e9.cross(te).dot(n)}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return e9.subVectors(this.c,this.b),te.subVectors(this.a,this.b),.5*e9.cross(te).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return th.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return th.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,r){return th.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return th.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return th.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i,n;let r=this.a,a=this.b,s=this.c;tn.subVectors(a,r),tr.subVectors(s,r),ts.subVectors(e,r);let o=tn.dot(ts),l=tr.dot(ts);if(o<=0&&l<=0)return t.copy(r);to.subVectors(e,a);let h=tn.dot(to),c=tr.dot(to);if(h>=0&&c<=h)return t.copy(a);let u=o*c-h*l;if(u<=0&&o>=0&&h<=0)return i=o/(o-h),t.copy(r).addScaledVector(tn,i);tl.subVectors(e,s);let d=tn.dot(tl),p=tr.dot(tl);if(p>=0&&d<=p)return t.copy(s);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return n=l/(l-p),t.copy(r).addScaledVector(tr,n);let m=h*p-d*c;if(m<=0&&c-h>=0&&d-p>=0)return ta.subVectors(s,a),n=(c-h)/(c-h+(d-p)),t.copy(a).addScaledVector(ta,n);let g=1/(m+f+u);return i=f*g,n=u*g,t.copy(r).addScaledVector(tn,i).addScaledVector(tr,n)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let tc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},tu={h:0,s:0,l:0},td={h:0,s:0,l:0};function tp(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*6*(2/3-i):e}class tf{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){return void 0===t&&void 0===i?e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e):this.setRGB(e,t,i),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=p){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,j.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=j.workingColorSpace){return this.r=e,this.g=t,this.b=i,j.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=j.workingColorSpace){if(e=R(e,1),t=C(t,0,1),i=C(i,0,1),0===t)this.r=this.g=this.b=i;else{let n=i<=.5?i*(1+t):i+t-i*t,r=2*i-n;this.r=tp(r,n,e+1/3),this.g=tp(r,n,e),this.b=tp(r,n,e-1/3)}return j.toWorkingColorSpace(this,n),this}setStyle(e,t=p){let i;function n(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;let a=i[1],s=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){let n=i[1],r=n.length;if(3===r)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===r)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=p){let i=tc[e.toLowerCase()];return void 0!==i?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=q(e.r),this.g=q(e.g),this.b=q(e.b),this}copyLinearToSRGB(e){return this.r=X(e.r),this.g=X(e.g),this.b=X(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=p){return j.fromWorkingColorSpace(tm.copy(this),e),65536*Math.round(C(255*tm.r,0,255))+256*Math.round(C(255*tm.g,0,255))+Math.round(C(255*tm.b,0,255))}getHexString(e=p){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=j.workingColorSpace){let i,n;j.fromWorkingColorSpace(tm.copy(this),t);let r=tm.r,a=tm.g,s=tm.b,o=Math.max(r,a,s),l=Math.min(r,a,s),h=(l+o)/2;if(l===o)i=0,n=0;else{let e=o-l;switch(n=h<=.5?e/(o+l):e/(2-o-l),o){case r:i=(a-s)/e+(a<s?6:0);break;case a:i=(s-r)/e+2;break;case s:i=(r-a)/e+4}i/=6}return e.h=i,e.s=n,e.l=h,e}getRGB(e,t=j.workingColorSpace){return j.fromWorkingColorSpace(tm.copy(this),t),e.r=tm.r,e.g=tm.g,e.b=tm.b,e}getStyle(e=p){j.fromWorkingColorSpace(tm.copy(this),e);let t=tm.r,i=tm.g,n=tm.b;return e!==p?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*i)},${Math.round(255*n)})`}offsetHSL(e,t,i){return this.getHSL(tu),this.setHSL(tu.h+e,tu.s+t,tu.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(tu),e.getHSL(td);let i=P(tu.h,td.h,t),n=P(tu.s,td.s,t),r=P(tu.l,td.l,t);return this.setHSL(i,n,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,i=this.g,n=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*n,this.g=r[1]*t+r[4]*i+r[7]*n,this.b=r[2]*t+r[5]*i+r[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let tm=new tf;tf.NAMES=tc;let tg=0;class tv extends M{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:tg++}),this.uuid=A(),this.name="",this.type="Material",this.blending=1,this.side=o,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new tf(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let i=e[t];if(void 0===i){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let n=this[t];if(void 0===n){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(i.dispersion=this.dispersion),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(i.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapRotation&&(i.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),this.side!==o&&(i.side=this.side),!0===this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=!0),204!==this.blendSrc&&(i.blendSrc=this.blendSrc),205!==this.blendDst&&(i.blendDst=this.blendDst),100!==this.blendEquation&&(i.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(i.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(i.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(i.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(i.depthFunc=this.depthFunc),!1===this.depthTest&&(i.depthTest=this.depthTest),!1===this.depthWrite&&(i.depthWrite=this.depthWrite),!1===this.colorWrite&&(i.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(i.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(i.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(i.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(i.stencilFuncMask=this.stencilFuncMask),7680!==this.stencilFail&&(i.stencilFail=this.stencilFail),7680!==this.stencilZFail&&(i.stencilZFail=this.stencilZFail),7680!==this.stencilZPass&&(i.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(i.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaHash&&(i.alphaHash=!0),!0===this.alphaToCoverage&&(i.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=!0),!0===this.forceSinglePass&&(i.forceSinglePass=!0),!0===this.wireframe&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),t){let t=n(e.textures),r=n(e.images);t.length>0&&(i.textures=t),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(null!==t){let e=t.length;i=Array(e);for(let n=0;n!==e;++n)i[n]=t[n].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}onBeforeRender(){console.warn("Material: onBeforeRender() has been removed.")}}class ty extends tv{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new tf(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ej,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}let t_=new ea,tx=new U;class tb{constructor(e,t,i=!1){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=i,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}get updateRange(){return k("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)tx.fromBufferAttribute(this,t),tx.applyMatrix3(e),this.setXY(t,tx.x,tx.y);else if(3===this.itemSize)for(let t=0,i=this.count;t<i;t++)t_.fromBufferAttribute(this,t),t_.applyMatrix3(e),this.setXYZ(t,t_.x,t_.y,t_.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)t_.fromBufferAttribute(this,t),t_.applyMatrix4(e),this.setXYZ(t,t_.x,t_.y,t_.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)t_.fromBufferAttribute(this,t),t_.applyNormalMatrix(e),this.setXYZ(t,t_.x,t_.y,t_.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)t_.fromBufferAttribute(this,t),t_.transformDirection(e),this.setXYZ(t,t_.x,t_.y,t_.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=L(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=N(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=L(t,this.array)),t}setX(e,t){return this.normalized&&(t=N(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=L(t,this.array)),t}setY(e,t){return this.normalized&&(t=N(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=L(t,this.array)),t}setZ(e,t){return this.normalized&&(t=N(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=L(t,this.array)),t}setW(e,t){return this.normalized&&(t=N(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=N(t,this.array),i=N(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=N(t,this.array),i=N(i,this.array),n=N(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=N(t,this.array),i=N(i,this.array),n=N(n,this.array),r=N(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),e}}class tM extends tb{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class tw extends tb{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class tS extends tb{constructor(e,t,i){super(new Float32Array(e),t,i)}}let tE=0,tT=new eO,tA=new e8,tC=new ea,tR=new el,tP=new el,tL=new ea;class tN extends M{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:tE++}),this.uuid=A(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(F(e)?tw:tM)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let t=new O().getNormalMatrix(e);i.applyNormalMatrix(t),i.needsUpdate=!0}let n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return tT.makeRotationFromQuaternion(e),this.applyMatrix4(tT),this}rotateX(e){return tT.makeRotationX(e),this.applyMatrix4(tT),this}rotateY(e){return tT.makeRotationY(e),this.applyMatrix4(tT),this}rotateZ(e){return tT.makeRotationZ(e),this.applyMatrix4(tT),this}translate(e,t,i){return tT.makeTranslation(e,t,i),this.applyMatrix4(tT),this}scale(e,t,i){return tT.makeScale(e,t,i),this.applyMatrix4(tT),this}lookAt(e){return tA.lookAt(e),tA.updateMatrix(),this.applyMatrix4(tA.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(tC).negate(),this.translate(tC.x,tC.y,tC.z),this}setFromPoints(e){let t=[];for(let i=0,n=e.length;i<n;i++){let n=e[i];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new tS(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new el);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new ea(-1/0,-1/0,-1/0),new ea(1/0,1/0,1/0));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){let i=t[e];tR.setFromBufferAttribute(i),this.morphTargetsRelative?(tL.addVectors(this.boundingBox.min,tR.min),this.boundingBox.expandByPoint(tL),tL.addVectors(this.boundingBox.max,tR.max),this.boundingBox.expandByPoint(tL)):(this.boundingBox.expandByPoint(tR.min),this.boundingBox.expandByPoint(tR.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new eT);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new ea,1/0);return}if(e){let i=this.boundingSphere.center;if(tR.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){let i=t[e];tP.setFromBufferAttribute(i),this.morphTargetsRelative?(tL.addVectors(tR.min,tP.min),tR.expandByPoint(tL),tL.addVectors(tR.max,tP.max),tR.expandByPoint(tL)):(tR.expandByPoint(tP.min),tR.expandByPoint(tP.max))}tR.getCenter(i);let n=0;for(let t=0,r=e.count;t<r;t++)tL.fromBufferAttribute(e,t),n=Math.max(n,i.distanceToSquared(tL));if(t)for(let r=0,a=t.length;r<a;r++){let a=t[r],s=this.morphTargetsRelative;for(let t=0,r=a.count;t<r;t++)tL.fromBufferAttribute(a,t),s&&(tC.fromBufferAttribute(e,t),tL.add(tC)),n=Math.max(n,i.distanceToSquared(tL))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=t.position,n=t.normal,r=t.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new tb(new Float32Array(4*i.count),4));let a=this.getAttribute("tangent"),s=[],o=[];for(let e=0;e<i.count;e++)s[e]=new ea,o[e]=new ea;let l=new ea,h=new ea,c=new ea,u=new U,d=new U,p=new U,f=new ea,m=new ea,g=this.groups;0===g.length&&(g=[{start:0,count:e.count}]);for(let t=0,n=g.length;t<n;++t){let n=g[t],a=n.start,v=n.count;for(let t=a,n=a+v;t<n;t+=3)!function(e,t,n){l.fromBufferAttribute(i,e),h.fromBufferAttribute(i,t),c.fromBufferAttribute(i,n),u.fromBufferAttribute(r,e),d.fromBufferAttribute(r,t),p.fromBufferAttribute(r,n),h.sub(l),c.sub(l),d.sub(u),p.sub(u);let a=1/(d.x*p.y-p.x*d.y);isFinite(a)&&(f.copy(h).multiplyScalar(p.y).addScaledVector(c,-d.y).multiplyScalar(a),m.copy(c).multiplyScalar(d.x).addScaledVector(h,-p.x).multiplyScalar(a),s[e].add(f),s[t].add(f),s[n].add(f),o[e].add(m),o[t].add(m),o[n].add(m))}(e.getX(t+0),e.getX(t+1),e.getX(t+2))}let v=new ea,y=new ea,_=new ea,x=new ea;function b(e){_.fromBufferAttribute(n,e),x.copy(_);let t=s[e];v.copy(t),v.sub(_.multiplyScalar(_.dot(t))).normalize(),y.crossVectors(x,t);let i=y.dot(o[e]);a.setXYZW(e,v.x,v.y,v.z,i<0?-1:1)}for(let t=0,i=g.length;t<i;++t){let i=g[t],n=i.start,r=i.count;for(let t=n,i=n+r;t<i;t+=3)b(e.getX(t+0)),b(e.getX(t+1)),b(e.getX(t+2))}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new tb(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let e=0,t=i.count;e<t;e++)i.setXYZ(e,0,0,0);let n=new ea,r=new ea,a=new ea,s=new ea,o=new ea,l=new ea,h=new ea,c=new ea;if(e)for(let u=0,d=e.count;u<d;u+=3){let d=e.getX(u+0),p=e.getX(u+1),f=e.getX(u+2);n.fromBufferAttribute(t,d),r.fromBufferAttribute(t,p),a.fromBufferAttribute(t,f),h.subVectors(a,r),c.subVectors(n,r),h.cross(c),s.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,f),s.add(h),o.add(h),l.add(h),i.setXYZ(d,s.x,s.y,s.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,s=t.count;e<s;e+=3)n.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),h.subVectors(a,r),c.subVectors(n,r),h.cross(c),i.setXYZ(e+0,h.x,h.y,h.z),i.setXYZ(e+1,h.x,h.y,h.z),i.setXYZ(e+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)tL.fromBufferAttribute(e,t),tL.normalize(),e.setXYZ(t,tL.x,tL.y,tL.z)}toNonIndexed(){function e(e,t){let i=e.array,n=e.itemSize,r=e.normalized,a=new i.constructor(t.length*n),s=0,o=0;for(let r=0,l=t.length;r<l;r++){s=e.isInterleavedBufferAttribute?t[r]*e.data.stride+e.offset:t[r]*n;for(let e=0;e<n;e++)a[o++]=i[s++]}return new tb(a,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new tN,i=this.index.array,n=this.attributes;for(let r in n){let a=e(n[r],i);t.setAttribute(r,a)}let r=this.morphAttributes;for(let n in r){let a=[],s=r[n];for(let t=0,n=s.length;t<n;t++){let n=e(s[t],i);a.push(n)}t.morphAttributes[n]=a}t.morphTargetsRelative=this.morphTargetsRelative;let a=this.groups;for(let e=0,i=a.length;e<i;e++){let i=a[e];t.addGroup(i.start,i.count,i.materialIndex)}return t}toJSON(){let e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};let t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let i=this.attributes;for(let t in i){let n=i[t];e.data.attributes[t]=n.toJSON(e.data)}let n={},r=!1;for(let t in this.morphAttributes){let i=this.morphAttributes[t],a=[];for(let t=0,n=i.length;t<n;t++){let n=i[t];a.push(n.toJSON(e.data))}a.length>0&&(n[t]=a,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);let a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));let s=this.boundingSphere;return null!==s&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;null!==i&&this.setIndex(i.clone(t));let n=e.attributes;for(let e in n){let i=n[e];this.setAttribute(e,i.clone(t))}let r=e.morphAttributes;for(let e in r){let i=[],n=r[e];for(let e=0,r=n.length;e<r;e++)i.push(n[e].clone(t));this.morphAttributes[e]=i}this.morphTargetsRelative=e.morphTargetsRelative;let a=e.groups;for(let e=0,t=a.length;e<t;e++){let t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}let s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());let o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}let tI=new eO,tU=new eU,tO=new eT,tD=new ea,tF=new ea,tz=new ea,tB=new ea,tk=new ea,tV=new ea,tH=new U,tG=new U,tW=new U,tj=new ea,tq=new ea,tX=new ea,tY=new ea,tJ=new ea;class tZ extends e8{constructor(e=new tN,t=new ty){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let i=e[t[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){let t=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){let i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,a=i.morphTargetsRelative;t.fromBufferAttribute(n,e);let s=this.morphTargetInfluences;if(r&&s){tV.set(0,0,0);for(let i=0,n=r.length;i<n;i++){let n=s[i],o=r[i];0!==n&&(tk.fromBufferAttribute(o,e),a?tV.addScaledVector(tk,n):tV.addScaledVector(tk.sub(t),n))}t.add(tV)}return t}raycast(e,t){let i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0!==n){if(null===i.boundingSphere&&i.computeBoundingSphere(),tO.copy(i.boundingSphere),tO.applyMatrix4(r),tU.copy(e.ray).recast(e.near),!1===tO.containsPoint(tU.origin)&&(null===tU.intersectSphere(tO,tD)||tU.origin.distanceToSquared(tD)>(e.far-e.near)**2)||(tI.copy(r).invert(),tU.copy(e.ray).applyMatrix4(tI),null!==i.boundingBox&&!1===tU.intersectsBox(i.boundingBox)))return;this._computeIntersections(e,t,tU)}}_computeIntersections(e,t,i){let n;let r=this.geometry,a=this.material,s=r.index,o=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,c=r.attributes.normal,u=r.groups,d=r.drawRange;if(null!==s){if(Array.isArray(a))for(let r=0,o=u.length;r<o;r++){let o=u[r],p=a[o.materialIndex],f=Math.max(o.start,d.start),m=Math.min(s.count,Math.min(o.start+o.count,d.start+d.count));for(let r=f;r<m;r+=3)(n=tK(this,p,e,i,l,h,c,s.getX(r),s.getX(r+1),s.getX(r+2)))&&(n.faceIndex=Math.floor(r/3),n.face.materialIndex=o.materialIndex,t.push(n))}else{let r=Math.max(0,d.start),o=Math.min(s.count,d.start+d.count);for(let u=r;u<o;u+=3)(n=tK(this,a,e,i,l,h,c,s.getX(u),s.getX(u+1),s.getX(u+2)))&&(n.faceIndex=Math.floor(u/3),t.push(n))}}else if(void 0!==o){if(Array.isArray(a))for(let r=0,s=u.length;r<s;r++){let s=u[r],p=a[s.materialIndex],f=Math.max(s.start,d.start),m=Math.min(o.count,Math.min(s.start+s.count,d.start+d.count));for(let r=f;r<m;r+=3)(n=tK(this,p,e,i,l,h,c,r,r+1,r+2))&&(n.faceIndex=Math.floor(r/3),n.face.materialIndex=s.materialIndex,t.push(n))}else{let r=Math.max(0,d.start),s=Math.min(o.count,d.start+d.count);for(let o=r;o<s;o+=3)(n=tK(this,a,e,i,l,h,c,o,o+1,o+2))&&(n.faceIndex=Math.floor(o/3),t.push(n))}}}}function tK(e,t,i,n,r,a,s,l,h,c){e.getVertexPosition(l,tF),e.getVertexPosition(h,tz),e.getVertexPosition(c,tB);let u=function(e,t,i,n,r,a,s,l){if(null===(1===t.side?n.intersectTriangle(s,a,r,!0,l):n.intersectTriangle(r,a,s,t.side===o,l)))return null;tJ.copy(l),tJ.applyMatrix4(e.matrixWorld);let h=i.ray.origin.distanceTo(tJ);return h<i.near||h>i.far?null:{distance:h,point:tJ.clone(),object:e}}(e,t,i,n,tF,tz,tB,tY);if(u){r&&(tH.fromBufferAttribute(r,l),tG.fromBufferAttribute(r,h),tW.fromBufferAttribute(r,c),u.uv=th.getInterpolation(tY,tF,tz,tB,tH,tG,tW,new U)),a&&(tH.fromBufferAttribute(a,l),tG.fromBufferAttribute(a,h),tW.fromBufferAttribute(a,c),u.uv1=th.getInterpolation(tY,tF,tz,tB,tH,tG,tW,new U)),s&&(tj.fromBufferAttribute(s,l),tq.fromBufferAttribute(s,h),tX.fromBufferAttribute(s,c),u.normal=th.getInterpolation(tY,tF,tz,tB,tj,tq,tX,new ea),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));let e={a:l,b:h,c:c,normal:new ea,materialIndex:0};th.getNormal(tF,tz,tB,e.normal),u.face=e}return u}class tQ extends tN{constructor(e=1,t=1,i=1,n=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:a};let s=this;n=Math.floor(n),r=Math.floor(r);let o=[],l=[],h=[],c=[],u=0,d=0;function p(e,t,i,n,r,a,p,f,m,g,v){let y=a/m,_=p/g,x=a/2,b=p/2,M=f/2,w=m+1,S=g+1,E=0,T=0,A=new ea;for(let a=0;a<S;a++){let s=a*_-b;for(let o=0;o<w;o++){let u=o*y-x;A[e]=u*n,A[t]=s*r,A[i]=M,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[i]=f>0?1:-1,h.push(A.x,A.y,A.z),c.push(o/m),c.push(1-a/g),E+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){let i=u+t+w*e,n=u+t+w*(e+1),r=u+(t+1)+w*(e+1),a=u+(t+1)+w*e;o.push(i,n,a),o.push(n,r,a),T+=6}s.addGroup(d,T,v),d+=T,u+=E}p("z","y","x",-1,-1,i,t,e,a=Math.floor(a),r,0),p("z","y","x",1,-1,i,t,-e,a,r,1),p("x","z","y",1,1,e,i,t,n,a,2),p("x","z","y",1,-1,e,i,-t,n,a,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new tS(l,3)),this.setAttribute("normal",new tS(h,3)),this.setAttribute("uv",new tS(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new tQ(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function t$(e){let t={};for(let i in e)for(let n in t[i]={},e[i]){let r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[i][n]=null):t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}return t}function t0(e){let t={};for(let i=0;i<e.length;i++){let n=t$(e[i]);for(let e in n)t[e]=n[e]}return t}function t1(e){let t=e.getRenderTarget();return null===t?e.outputColorSpace:!0===t.isXRRenderTarget?t.texture.colorSpace:j.workingColorSpace}let t2={clone:t$};class t3 extends tv{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=t$(e.uniforms),this.uniformsGroups=function(e){let t=[];for(let i=0;i<e.length;i++)t.push(e[i].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let n=this.uniforms[i].value;n&&n.isTexture?t.uniforms[i]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[i]={type:"m4",value:n.toArray()}:t.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let i={};for(let e in this.extensions)!0===this.extensions[e]&&(i[e]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class t4 extends e8{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new eO,this.projectionMatrix=new eO,this.projectionMatrixInverse=new eO,this.coordinateSystem=2e3}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}let t5=new ea,t6=new U,t7=new U;class t8 extends t4{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*T*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*E*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*T*Math.atan(Math.tan(.5*E*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){t5.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(t5.x,t5.y).multiplyScalar(-e/t5.z),t5.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(t5.x,t5.y).multiplyScalar(-e/t5.z)}getViewSize(e,t){return this.getViewBounds(e,t6,t7),t.subVectors(t7,t6)}setViewOffset(e,t,i,n,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*E*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){let e=a.fullWidth,s=a.fullHeight;r+=a.offsetX*n/e,t-=a.offsetY*i/s,n*=a.width/e,i*=a.height/s}let s=this.filmOffset;0!==s&&(r+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class t9 extends e8{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;let n=new t8(-90,1,e,t);n.layers=this.layers,this.add(n);let r=new t8(-90,1,e,t);r.layers=this.layers,this.add(r);let a=new t8(-90,1,e,t);a.layers=this.layers,this.add(a);let s=new t8(-90,1,e,t);s.layers=this.layers,this.add(s);let o=new t8(-90,1,e,t);o.layers=this.layers,this.add(o);let l=new t8(-90,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[i,n,r,a,s,o]=t;for(let e of t)this.remove(e);if(2e3===e)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),s.up.set(0,1,0),s.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else if(2001===e)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),s.up.set(0,-1,0),s.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(let e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();let{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[r,a,s,o,l,h]=this.children,c=e.getRenderTarget(),u=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;let f=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,r),e.setRenderTarget(i,1,n),e.render(t,a),e.setRenderTarget(i,2,n),e.render(t,s),e.setRenderTarget(i,3,n),e.render(t,o),e.setRenderTarget(i,4,n),e.render(t,l),i.texture.generateMipmaps=f,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(c,u,d),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class ie extends ${constructor(e,t,i,n,r,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:301,i,n,r,a,s,o,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class it extends ei{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let i={width:e,height:e,depth:1};this.texture=new ie([i,i,i,i,i,i],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:1006}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new tQ(5,5,5),r=new t3({name:"CubemapFromEquirect",uniforms:t$(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;let a=new tZ(n,r),s=t.minFilter;return t.minFilter===d&&(t.minFilter=1006),new t9(1,10,this).update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,n){let r=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,i,n);e.setRenderTarget(r)}}let ii=new ea,ir=new ea,ia=new O;class is{constructor(e=new ea(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let n=ii.subVectors(i,t).cross(ir.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let i=e.delta(ii),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||ia.getNormalMatrix(e),n=this.coplanarPoint(ii).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}let io=new eT,il=new ea;class ih{constructor(e=new is,t=new is,i=new is,n=new is,r=new is,a=new is){this.planes=[e,t,i,n,r,a]}set(e,t,i,n,r,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(i),s[3].copy(n),s[4].copy(r),s[5].copy(a),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=2e3){let i=this.planes,n=e.elements,r=n[0],a=n[1],s=n[2],o=n[3],l=n[4],h=n[5],c=n[6],u=n[7],d=n[8],p=n[9],f=n[10],m=n[11],g=n[12],v=n[13],y=n[14],_=n[15];if(i[0].setComponents(o-r,u-l,m-d,_-g).normalize(),i[1].setComponents(o+r,u+l,m+d,_+g).normalize(),i[2].setComponents(o+a,u+h,m+p,_+v).normalize(),i[3].setComponents(o-a,u-h,m-p,_-v).normalize(),i[4].setComponents(o-s,u-c,m-f,_-y).normalize(),2e3===t)i[5].setComponents(o+s,u+c,m+f,_+y).normalize();else if(2001===t)i[5].setComponents(s,c,f,y).normalize();else throw Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),io.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{let t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),io.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(io)}intersectsSprite(e){return io.center.set(0,0,0),io.radius=.7071067811865476,io.applyMatrix4(e.matrixWorld),this.intersectsSphere(io)}intersectsSphere(e){let t=this.planes,i=e.center,n=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let n=t[i];if(il.x=n.normal.x>0?e.max.x:e.min.x,il.y=n.normal.y>0?e.max.y:e.min.y,il.z=n.normal.z>0?e.max.z:e.min.z,0>n.distanceToPoint(il))return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(0>t[i].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function ic(){let e=null,t=!1,i=null,n=null;function r(t,a){i(t,a),n=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==i&&(n=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function iu(e){let t=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);let n=t.get(i);n&&(e.deleteBuffer(n.buffer),t.delete(i))},update:function(i,n){if(i.isGLBufferAttribute){let e=t.get(i);(!e||e.version<i.version)&&t.set(i,{buffer:i.buffer,type:i.type,bytesPerElement:i.elementSize,version:i.version});return}i.isInterleavedBufferAttribute&&(i=i.data);let r=t.get(i);if(void 0===r)t.set(i,function(t,i){let n;let r=t.array,a=t.usage,s=r.byteLength,o=e.createBuffer();if(e.bindBuffer(i,o),e.bufferData(i,r,a),t.onUploadCallback(),r instanceof Float32Array)n=e.FLOAT;else if(r instanceof Uint16Array)n=t.isFloat16BufferAttribute?e.HALF_FLOAT:e.UNSIGNED_SHORT;else if(r instanceof Int16Array)n=e.SHORT;else if(r instanceof Uint32Array)n=e.UNSIGNED_INT;else if(r instanceof Int32Array)n=e.INT;else if(r instanceof Int8Array)n=e.BYTE;else if(r instanceof Uint8Array)n=e.UNSIGNED_BYTE;else if(r instanceof Uint8ClampedArray)n=e.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);return{buffer:o,type:n,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version,size:s}}(i,n));else if(r.version<i.version){if(r.size!==i.array.byteLength)throw Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");(function(t,i,n){let r=i.array,a=i._updateRange,s=i.updateRanges;if(e.bindBuffer(n,t),-1===a.count&&0===s.length&&e.bufferSubData(n,0,r),0!==s.length){for(let t=0,i=s.length;t<i;t++){let i=s[t];e.bufferSubData(n,i.start*r.BYTES_PER_ELEMENT,r,i.start,i.count)}i.clearUpdateRanges()}-1!==a.count&&(e.bufferSubData(n,a.offset*r.BYTES_PER_ELEMENT,r,a.offset,a.count),a.count=-1),i.onUploadCallback()})(r.buffer,i,n),r.version=i.version}}}}class id extends tN{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};let r=e/2,a=t/2,s=Math.floor(i),o=Math.floor(n),l=s+1,h=o+1,c=e/s,u=t/o,d=[],p=[],f=[],m=[];for(let e=0;e<h;e++){let t=e*u-a;for(let i=0;i<l;i++){let n=i*c-r;p.push(n,-t,0),f.push(0,0,1),m.push(i/s),m.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<s;t++){let i=t+l*e,n=t+l*(e+1),r=t+1+l*(e+1),a=t+1+l*e;d.push(i,n,a),d.push(n,r,a)}this.setIndex(d),this.setAttribute("position",new tS(p,3)),this.setAttribute("normal",new tS(f,3)),this.setAttribute("uv",new tS(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new id(e.width,e.height,e.widthSegments,e.heightSegments)}}let ip={alphahash_fragment:"#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	#ifdef ALPHA_TO_COVERAGE\n	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n	if ( diffuseColor.a == 0.0 ) discard;\n	#else\n	if ( diffuseColor.a < alphaTest ) discard;\n	#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_CLEARCOAT ) \n		clearcoatSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_SHEEN ) \n		sheenSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n	#if ! defined( GL_ANGLE_multi_draw )\n	#define gl_DrawID _gl_DrawID\n	uniform int _gl_DrawID;\n	#endif\n	uniform highp sampler2D batchingTexture;\n	uniform highp usampler2D batchingIdTexture;\n	mat4 getBatchingMatrix( const in float i ) {\n		int size = textureSize( batchingTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n	float getIndirectIndex( const in int i ) {\n		int size = textureSize( batchingIdTexture, 0 ).x;\n		int x = i % size;\n		int y = i / size;\n		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n	}\n#endif\n#ifdef USE_BATCHING_COLOR\n	uniform sampler2D batchingColorTexture;\n	vec3 getBatchingColor( const in float i ) {\n		int size = textureSize( batchingColorTexture, 0 ).x;\n		int j = int( i );\n		int x = j % size;\n		int y = j / size;\n		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n	}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#ifdef ALPHA_TO_COVERAGE\n		float distanceToPlane, distanceGradient;\n		float clipOpacity = 1.0;\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n			distanceGradient = fwidth( distanceToPlane ) / 2.0;\n			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			if ( clipOpacity == 0.0 ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			float unionClipOpacity = 1.0;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n				distanceGradient = fwidth( distanceToPlane ) / 2.0;\n				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			}\n			#pragma unroll_loop_end\n			clipOpacity *= 1.0 - unionClipOpacity;\n		#endif\n		diffuseColor.a *= clipOpacity;\n		if ( diffuseColor.a == 0.0 ) discard;\n	#else\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			bool clipped = true;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n			}\n			#pragma unroll_loop_end\n			if ( clipped ) discard;\n		#endif\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n	vColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n	vec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n	mat3 bm = mat3( batchingMatrix );\n	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n	transformedNormal = bm * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = bm * transformedTangent;\n	#endif\n#endif\n#ifdef USE_INSTANCING\n	mat3 im = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n	transformedNormal = im * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = im * transformedTangent;\n	#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n	vec3( 0.8224621, 0.177538, 0.0 ),\n	vec3( 0.0331941, 0.9668058, 0.0 ),\n	vec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n	vec3( 1.2249401, - 0.2249404, 0.0 ),\n	vec3( - 0.0420569, 1.0420571, 0.0 ),\n	vec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n	return value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform mat3 envMapRotation;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n	uniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if ( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n	material.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	if( material.anisotropy == 0.0 ) {\n		anisotropyV = vec2( 1.0, 0.0 );\n	} else {\n		anisotropyV /= material.anisotropy;\n		material.anisotropy = saturate( material.anisotropy );\n	}\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	float dispersion;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometryNormal;\n		vec3 viewDir = geometryViewDir;\n		vec3 position = geometryPosition;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n	geometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometryViewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometryPosition, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometryPosition, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#if defined( USE_LIGHT_PROBES )\n		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometryNormal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	vFragDepth = 1.0 + gl_Position.w;\n	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n	float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n	}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n	}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	#ifndef USE_INSTANCING_MORPH\n		uniform float morphTargetBaseInfluence;\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n	#endif\n	uniform sampler2DArray morphTargetsTexture;\n	uniform ivec2 morphTargetsTextureSize;\n	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n		int y = texelIndex / morphTargetsTextureSize.x;\n		int x = texelIndex - y * morphTargetsTextureSize.x;\n		ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n		return texelFetch( morphTargetsTexture, morphUV, 0 );\n	}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n	}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n	return packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n	mvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return mix( 1.0, shadow, shadowIntensity );\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		float shadow = 1.0;\n		vec3 lightToPosition = shadowCoord.xyz;\n		\n		float lightToPositionLength = length( lightToPosition );\n		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;\n			vec3 bd3D = normalize( lightToPosition );\n			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n				shadow = (\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n				) * ( 1.0 / 9.0 );\n			#else\n				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n			#endif\n		}\n		return mix( 1.0, shadow, shadowIntensity );\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	mat4 getBoneMatrix( const in float i ) {\n		int size = textureSize( boneTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n	vec3( 1.6605, - 0.1246, - 0.0182 ),\n	vec3( - 0.5876, 1.1329, - 0.1006 ),\n	vec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n	vec3( 0.6274, 0.0691, 0.0164 ),\n	vec3( 0.3293, 0.9195, 0.0880 ),\n	vec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n	vec3 x2 = x * x;\n	vec3 x4 = x2 * x2;\n	return + 15.5 * x4 * x2\n		- 40.14 * x4 * x\n		+ 31.96 * x4\n		- 6.868 * x2 * x\n		+ 0.4298 * x2\n		+ 0.1191 * x\n		- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n	const mat3 AgXInsetMatrix = mat3(\n		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n	);\n	const mat3 AgXOutsetMatrix = mat3(\n		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n	);\n	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;\n	color *= toneMappingExposure;\n	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n	color = AgXInsetMatrix * color;\n	color = max( color, 1e-10 );	color = log2( color );\n	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n	color = clamp( color, 0.0, 1.0 );\n	color = agxDefaultContrastApprox( color );\n	color = AgXOutsetMatrix * color;\n	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n	color = clamp( color, 0.0, 1.0 );\n	return color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n	const float StartCompression = 0.8 - 0.04;\n	const float Desaturation = 0.15;\n	color *= toneMappingExposure;\n	float x = min( color.r, min( color.g, color.b ) );\n	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n	color -= offset;\n	float peak = max( color.r, max( color.g, color.b ) );\n	if ( peak < StartCompression ) return color;\n	float d = 1. - StartCompression;\n	float newPeak = 1. - d * d / ( peak + d - StartCompression );\n	color *= newPeak / peak;\n	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n	return mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec4 transmittedLight;\n		vec3 transmittance;\n		#ifdef USE_DISPERSION\n			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n			for ( int i = 0; i < 3; i ++ ) {\n				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n				vec3 refractedRayExit = position + transmissionRay;\n		\n				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n				vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n				refractionCoords += 1.0;\n				refractionCoords /= 2.0;\n		\n				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n				transmittedLight[ i ] = transmissionSample[ i ];\n				transmittedLight.a += transmissionSample.a;\n				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n			}\n			transmittedLight.a /= 3.0;\n		\n		#else\n		\n			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n			vec3 refractedRayExit = position + transmissionRay;\n			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n			vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n			refractionCoords += 1.0;\n			refractionCoords /= 2.0;\n			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		\n		#endif\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_BATCHING\n		worldPosition = batchingMatrix * worldPosition;\n	#endif\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n	uniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},im={common:{diffuse:{value:new tf(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new O},alphaMap:{value:null},alphaMapTransform:{value:new O},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new O}},envmap:{envMap:{value:null},envMapRotation:{value:new O},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new O}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new O}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new O},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new O},normalScale:{value:new U(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new O},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new O}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new O}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new O}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new tf(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new tf(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new O},alphaTest:{value:0},uvTransform:{value:new O}},sprite:{diffuse:{value:new tf(16777215)},opacity:{value:1},center:{value:new U(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new O},alphaMap:{value:null},alphaMapTransform:{value:new O},alphaTest:{value:0}}},ig={basic:{uniforms:t0([im.common,im.specularmap,im.envmap,im.aomap,im.lightmap,im.fog]),vertexShader:ip.meshbasic_vert,fragmentShader:ip.meshbasic_frag},lambert:{uniforms:t0([im.common,im.specularmap,im.envmap,im.aomap,im.lightmap,im.emissivemap,im.bumpmap,im.normalmap,im.displacementmap,im.fog,im.lights,{emissive:{value:new tf(0)}}]),vertexShader:ip.meshlambert_vert,fragmentShader:ip.meshlambert_frag},phong:{uniforms:t0([im.common,im.specularmap,im.envmap,im.aomap,im.lightmap,im.emissivemap,im.bumpmap,im.normalmap,im.displacementmap,im.fog,im.lights,{emissive:{value:new tf(0)},specular:{value:new tf(1118481)},shininess:{value:30}}]),vertexShader:ip.meshphong_vert,fragmentShader:ip.meshphong_frag},standard:{uniforms:t0([im.common,im.envmap,im.aomap,im.lightmap,im.emissivemap,im.bumpmap,im.normalmap,im.displacementmap,im.roughnessmap,im.metalnessmap,im.fog,im.lights,{emissive:{value:new tf(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ip.meshphysical_vert,fragmentShader:ip.meshphysical_frag},toon:{uniforms:t0([im.common,im.aomap,im.lightmap,im.emissivemap,im.bumpmap,im.normalmap,im.displacementmap,im.gradientmap,im.fog,im.lights,{emissive:{value:new tf(0)}}]),vertexShader:ip.meshtoon_vert,fragmentShader:ip.meshtoon_frag},matcap:{uniforms:t0([im.common,im.bumpmap,im.normalmap,im.displacementmap,im.fog,{matcap:{value:null}}]),vertexShader:ip.meshmatcap_vert,fragmentShader:ip.meshmatcap_frag},points:{uniforms:t0([im.points,im.fog]),vertexShader:ip.points_vert,fragmentShader:ip.points_frag},dashed:{uniforms:t0([im.common,im.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ip.linedashed_vert,fragmentShader:ip.linedashed_frag},depth:{uniforms:t0([im.common,im.displacementmap]),vertexShader:ip.depth_vert,fragmentShader:ip.depth_frag},normal:{uniforms:t0([im.common,im.bumpmap,im.normalmap,im.displacementmap,{opacity:{value:1}}]),vertexShader:ip.meshnormal_vert,fragmentShader:ip.meshnormal_frag},sprite:{uniforms:t0([im.sprite,im.fog]),vertexShader:ip.sprite_vert,fragmentShader:ip.sprite_frag},background:{uniforms:{uvTransform:{value:new O},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ip.background_vert,fragmentShader:ip.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new O}},vertexShader:ip.backgroundCube_vert,fragmentShader:ip.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ip.cube_vert,fragmentShader:ip.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ip.equirect_vert,fragmentShader:ip.equirect_frag},distanceRGBA:{uniforms:t0([im.common,im.displacementmap,{referencePosition:{value:new ea},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ip.distanceRGBA_vert,fragmentShader:ip.distanceRGBA_frag},shadow:{uniforms:t0([im.lights,im.fog,{color:{value:new tf(0)},opacity:{value:1}}]),vertexShader:ip.shadow_vert,fragmentShader:ip.shadow_frag}};ig.physical={uniforms:t0([ig.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new O},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new O},clearcoatNormalScale:{value:new U(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new O},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new O},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new O},sheen:{value:0},sheenColor:{value:new tf(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new O},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new O},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new O},transmissionSamplerSize:{value:new U},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new O},attenuationDistance:{value:0},attenuationColor:{value:new tf(0)},specularColor:{value:new tf(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new O},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new O},anisotropyVector:{value:new U},anisotropyMap:{value:null},anisotropyMapTransform:{value:new O}}]),vertexShader:ip.meshphysical_vert,fragmentShader:ip.meshphysical_frag};let iv={r:0,b:0,g:0},iy=new ej,i_=new eO;function ix(e,t,i,n,r,a,s){let l,h;let c=new tf(0),u=!0===a?0:1,d=null,p=0,f=null;function m(e){let n=!0===e.isScene?e.background:null;return n&&n.isTexture&&(n=(e.backgroundBlurriness>0?i:t).get(n)),n}function g(t,i){t.getRGB(iv,t1(e)),n.buffers.color.setClear(iv.r,iv.g,iv.b,i,s)}return{getClearColor:function(){return c},setClearColor:function(e,t=1){c.set(e),g(c,u=t)},getClearAlpha:function(){return u},setClearAlpha:function(e){g(c,u=e)},render:function(t){let i=!1,r=m(t);null===r?g(c,u):r&&r.isColor&&(g(r,1),i=!0);let a=e.xr.getEnvironmentBlendMode();"additive"===a?n.buffers.color.setClear(0,0,0,1,s):"alpha-blend"===a&&n.buffers.color.setClear(0,0,0,0,s),(e.autoClear||i)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil))},addToRenderList:function(t,i){let n=m(i);n&&(n.isCubeTexture||306===n.mapping)?(void 0===h&&((h=new tZ(new tQ(1,1,1),new t3({name:"BackgroundCubeMaterial",uniforms:t$(ig.backgroundCube.uniforms),vertexShader:ig.backgroundCube.vertexShader,fragmentShader:ig.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),iy.copy(i.backgroundRotation),iy.x*=-1,iy.y*=-1,iy.z*=-1,n.isCubeTexture&&!1===n.isRenderTargetTexture&&(iy.y*=-1,iy.z*=-1),h.material.uniforms.envMap.value=n,h.material.uniforms.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,h.material.uniforms.backgroundBlurriness.value=i.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(i_.makeRotationFromEuler(iy)),h.material.toneMapped=j.getTransfer(n.colorSpace)!==y,(d!==n||p!==n.version||f!==e.toneMapping)&&(h.material.needsUpdate=!0,d=n,p=n.version,f=e.toneMapping),h.layers.enableAll(),t.unshift(h,h.geometry,h.material,0,0,null)):n&&n.isTexture&&(void 0===l&&((l=new tZ(new id(2,2),new t3({name:"BackgroundMaterial",uniforms:t$(ig.background.uniforms),vertexShader:ig.background.vertexShader,fragmentShader:ig.background.fragmentShader,side:o,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=n,l.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,l.material.toneMapped=j.getTransfer(n.colorSpace)!==y,!0===n.matrixAutoUpdate&&n.updateMatrix(),l.material.uniforms.uvTransform.value.copy(n.matrix),(d!==n||p!==n.version||f!==e.toneMapping)&&(l.material.needsUpdate=!0,d=n,p=n.version,f=e.toneMapping),l.layers.enableAll(),t.unshift(l,l.geometry,l.material,0,0,null))}}}function ib(e,t){let i=e.getParameter(e.MAX_VERTEX_ATTRIBS),n={},r=h(null),a=r,s=!1;function o(t){return e.bindVertexArray(t)}function l(t){return e.deleteVertexArray(t)}function h(e){let t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function c(){let e=a.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function u(e){d(e,0)}function d(t,i){let n=a.newAttributes,r=a.enabledAttributes,s=a.attributeDivisors;n[t]=1,0===r[t]&&(e.enableVertexAttribArray(t),r[t]=1),s[t]!==i&&(e.vertexAttribDivisor(t,i),s[t]=i)}function p(){let t=a.newAttributes,i=a.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==t[n]&&(e.disableVertexAttribArray(n),i[n]=0)}function f(t,i,n,r,a,s,o){!0===o?e.vertexAttribIPointer(t,i,n,a,s):e.vertexAttribPointer(t,i,n,r,a,s)}function m(){g(),s=!0,a!==r&&o((a=r).object)}function g(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:function(i,r,l,m,g){let v=!1,y=function(t,i,r){let a=!0===r.wireframe,s=n[t.id];void 0===s&&(s={},n[t.id]=s);let o=s[i.id];void 0===o&&(o={},s[i.id]=o);let l=o[a];return void 0===l&&(l=h(e.createVertexArray()),o[a]=l),l}(m,l,r);a!==y&&o((a=y).object),(v=function(e,t,i,n){let r=a.attributes,s=t.attributes,o=0,l=i.getAttributes();for(let t in l)if(l[t].location>=0){let i=r[t],n=s[t];if(void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor)),void 0===i||i.attribute!==n||n&&i.data!==n.data)return!0;o++}return a.attributesNum!==o||a.index!==n}(i,m,l,g))&&function(e,t,i,n){let r={},s=t.attributes,o=0,l=i.getAttributes();for(let t in l)if(l[t].location>=0){let i=s[t];void 0===i&&("instanceMatrix"===t&&e.instanceMatrix&&(i=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(i=e.instanceColor));let n={};n.attribute=i,i&&i.data&&(n.data=i.data),r[t]=n,o++}a.attributes=r,a.attributesNum=o,a.index=n}(i,m,l,g),null!==g&&t.update(g,e.ELEMENT_ARRAY_BUFFER),(v||s)&&(s=!1,function(i,n,r,a){c();let s=a.attributes,o=r.getAttributes(),l=n.defaultAttributeValues;for(let n in o){let r=o[n];if(r.location>=0){let o=s[n];if(void 0===o&&("instanceMatrix"===n&&i.instanceMatrix&&(o=i.instanceMatrix),"instanceColor"===n&&i.instanceColor&&(o=i.instanceColor)),void 0!==o){let n=o.normalized,s=o.itemSize,l=t.get(o);if(void 0===l)continue;let h=l.buffer,c=l.type,p=l.bytesPerElement,m=c===e.INT||c===e.UNSIGNED_INT||1013===o.gpuType;if(o.isInterleavedBufferAttribute){let t=o.data,l=t.stride,g=o.offset;if(t.isInstancedInterleavedBuffer){for(let e=0;e<r.locationSize;e++)d(r.location+e,t.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<r.locationSize;e++)u(r.location+e);e.bindBuffer(e.ARRAY_BUFFER,h);for(let e=0;e<r.locationSize;e++)f(r.location+e,s/r.locationSize,c,n,l*p,(g+s/r.locationSize*e)*p,m)}else{if(o.isInstancedBufferAttribute){for(let e=0;e<r.locationSize;e++)d(r.location+e,o.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let e=0;e<r.locationSize;e++)u(r.location+e);e.bindBuffer(e.ARRAY_BUFFER,h);for(let e=0;e<r.locationSize;e++)f(r.location+e,s/r.locationSize,c,n,s*p,s/r.locationSize*e*p,m)}}else if(void 0!==l){let t=l[n];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(r.location,t);break;case 3:e.vertexAttrib3fv(r.location,t);break;case 4:e.vertexAttrib4fv(r.location,t);break;default:e.vertexAttrib1fv(r.location,t)}}}}p()}(i,r,l,m),null!==g&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.get(g).buffer))},reset:m,resetDefaultState:g,dispose:function(){for(let e in m(),n){let t=n[e];for(let e in t){let i=t[e];for(let e in i)l(i[e].object),delete i[e];delete t[e]}delete n[e]}},releaseStatesOfGeometry:function(e){if(void 0===n[e.id])return;let t=n[e.id];for(let e in t){let i=t[e];for(let e in i)l(i[e].object),delete i[e];delete t[e]}delete n[e.id]},releaseStatesOfProgram:function(e){for(let t in n){let i=n[t];if(void 0===i[e.id])continue;let r=i[e.id];for(let e in r)l(r[e].object),delete r[e];delete i[e.id]}},initAttributes:c,enableAttribute:u,disableUnusedAttributes:p}}function iM(e,t,i){let n;function r(t,r,a){0!==a&&(e.drawArraysInstanced(n,t,r,a),i.update(r,n,a))}this.setMode=function(e){n=e},this.render=function(t,r){e.drawArrays(n,t,r),i.update(r,n,1)},this.renderInstances=r,this.renderMultiDraw=function(e,r,a){if(0===a)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,e,0,r,0,a);let s=0;for(let e=0;e<a;e++)s+=r[e];i.update(s,n,1)},this.renderMultiDrawInstances=function(e,a,s,o){if(0===s)return;let l=t.get("WEBGL_multi_draw");if(null===l)for(let t=0;t<e.length;t++)r(e[t],a[t],o[t]);else{l.multiDrawArraysInstancedWEBGL(n,e,0,a,0,o,0,s);let t=0;for(let e=0;e<s;e++)t+=a[e];for(let e=0;e<o.length;e++)i.update(t,n,o[e])}}}function iw(e,t,i,n){let r;function a(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let s=void 0!==i.precision?i.precision:"highp",o=a(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=!0===i.logarithmicDepthBuffer,h=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),c=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=e.getParameter(e.MAX_TEXTURE_SIZE),d=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),p=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){let i=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:a,textureFormatReadable:function(t){return 1023===t||n.convert(t)===e.getParameter(e.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(i){let r=1016===i&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return 1009===i||n.convert(i)===e.getParameter(e.IMPLEMENTATION_COLOR_READ_TYPE)||1015===i||!!r},precision:s,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:e.getParameter(e.MAX_VARYING_VECTORS),maxFragmentUniforms:e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:c>0,maxSamples:e.getParameter(e.MAX_SAMPLES)}}function iS(e){let t=this,i=null,n=0,r=!1,a=!1,s=new is,o=new O,l={value:null,needsUpdate:!1};function h(e,i,n,r){let a=null!==e?e.length:0,h=null;if(0!==a){if(h=l.value,!0!==r||null===h){let t=n+4*a,r=i.matrixWorldInverse;o.getNormalMatrix(r),(null===h||h.length<t)&&(h=new Float32Array(t));for(let t=0,i=n;t!==a;++t,i+=4)s.copy(e[t]).applyMatrix4(r,o),s.normal.toArray(h,i),h[i+3]=s.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){let i=0!==e.length||t||0!==n||r;return r=t,n=e.length,i},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){i=h(e,t,0)},this.setState=function(s,o,c){let u=s.clippingPlanes,d=s.clipIntersection,p=s.clipShadows,f=e.get(s);if(r&&null!==u&&0!==u.length&&(!a||p)){let e=a?0:n,t=4*e,r=f.clippingState||null;l.value=r,r=h(u,o,t,c);for(let e=0;e!==t;++e)r[e]=i[e];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}else a?h(null):(l.value!==i&&(l.value=i,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0)}}function iE(e){let t=new WeakMap;function i(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){let a=r.mapping;if(303===a||304===a){if(t.has(r))return i(t.get(r).texture,r.mapping);{let a=r.image;if(!a||!(a.height>0))return null;{let s=new it(a.height);return s.fromEquirectangularTexture(e,r),t.set(r,s),r.addEventListener("dispose",n),i(s.texture,r.mapping)}}}}return r},dispose:function(){t=new WeakMap}}}class iT extends t4{constructor(e=-1,t=1,i=1,n=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-e,a=i+e,s=n+t,o=n-t;if(null!==this.view&&this.view.enabled){let e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,a=r+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}let iA=[.125,.215,.35,.446,.526,.582],iC=new iT,iR=new tf,iP=null,iL=0,iN=0,iI=!1,iU=(1+Math.sqrt(5))/2,iO=1/iU,iD=[new ea(-iU,iO,0),new ea(iU,iO,0),new ea(-iO,0,iU),new ea(iO,0,iU),new ea(0,iU,-iO),new ea(0,iU,iO),new ea(-1,1,-1),new ea(1,1,-1),new ea(-1,1,1),new ea(1,1,1)];class iF{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){iP=this._renderer.getRenderTarget(),iL=this._renderer.getActiveCubeFace(),iN=this._renderer.getActiveMipmapLevel(),iI=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);let r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,i,n,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=iV(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=ik(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(iP,iL,iN),this._renderer.xr.enabled=iI,e.scissorTest=!1,iB(e,0,0,e.width,e.height)}_fromTexture(e,t){301===e.mapping||302===e.mapping?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),iP=this._renderer.getRenderTarget(),iL=this._renderer.getActiveCubeFace(),iN=this._renderer.getActiveMipmapLevel(),iI=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;let i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,colorSpace:f,depthBuffer:!1},n=iz(e,t,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=iz(e,t,i);let{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){let t=[],i=[],n=[],r=e,a=e-4+1+iA.length;for(let s=0;s<a;s++){let a=Math.pow(2,r);i.push(a);let o=1/a;s>e-4?o=iA[s-e+4-1]:0===s&&(o=0),n.push(o);let l=1/(a-2),h=-l,c=1+l,u=[h,h,c,h,c,c,h,h,c,c,h,c],d=new Float32Array(108),p=new Float32Array(72),f=new Float32Array(36);for(let e=0;e<6;e++){let t=e%3*2/3-1,i=e>2?0:-1,n=[t,i,0,t+2/3,i,0,t+2/3,i+1,0,t,i,0,t+2/3,i+1,0,t,i+1,0];d.set(n,18*e),p.set(u,12*e);let r=[e,e,e,e,e,e];f.set(r,6*e)}let m=new tN;m.setAttribute("position",new tb(d,3)),m.setAttribute("uv",new tb(p,2)),m.setAttribute("faceIndex",new tb(f,1)),t.push(m),r>4&&r--}return{lodPlanes:t,sizeLods:i,sigmas:n}}(n)),this._blurMaterial=new t3({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(20)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new ea(0,1,0)}},vertexShader:iH(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}return n}_compileMaterial(e){let t=new tZ(this._lodPlanes[0],e);this._renderer.compile(t,iC)}_sceneToCubeUV(e,t,i,n){let r=new t8(90,1,t,i),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,h=o.toneMapping;o.getClearColor(iR),o.toneMapping=0,o.autoClear=!1;let c=new ty({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),u=new tZ(new tQ,c),d=!1,p=e.background;p?p.isColor&&(c.color.copy(p),e.background=null,d=!0):(c.color.copy(iR),d=!0);for(let t=0;t<6;t++){let i=t%3;0===i?(r.up.set(0,a[t],0),r.lookAt(s[t],0,0)):1===i?(r.up.set(0,0,a[t]),r.lookAt(0,s[t],0)):(r.up.set(0,a[t],0),r.lookAt(0,0,s[t]));let l=this._cubeSize;iB(n,i*l,t>2?l:0,l,l),o.setRenderTarget(n),d&&o.render(u,r),o.render(e,r)}u.geometry.dispose(),u.material.dispose(),o.toneMapping=h,o.autoClear=l,e.background=p}_textureToCubeUV(e,t){let i=this._renderer,n=301===e.mapping||302===e.mapping;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=iV()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ik());let r=n?this._cubemapMaterial:this._equirectMaterial,a=new tZ(this._lodPlanes[0],r);r.uniforms.envMap.value=e;let s=this._cubeSize;iB(t,0,0,3*s,2*s),i.setRenderTarget(t),i.render(a,iC)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;let n=this._lodPlanes.length;for(let t=1;t<n;t++){let i=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=iD[(n-t-1)%iD.length];this._blur(e,t-1,t,i,r)}t.autoClear=i}_blur(e,t,i,n,r){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,n,"latitudinal",r),this._halfBlur(a,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new tZ(this._lodPlanes[n],l),c=l.uniforms,u=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let e=0;e<20;++e){let t=e/p,i=Math.exp(-t*t/2);m.push(i),0===e?g+=i:e<f&&(g+=2*i)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;c.envMap.value=e.texture,c.samples.value=f,c.weights.value=m,c.latitudinal.value="latitudinal"===a,s&&(c.poleAxis.value=s);let{_lodMax:v}=this;c.dTheta.value=d,c.mipInt.value=v-i;let y=this._sizeLods[n],_=4*(this._cubeSize-y);iB(t,3*y*(n>v-4?n-v+4:0),_,3*y,2*y),o.setRenderTarget(t),o.render(h,iC)}}function iz(e,t,i){let n=new ei(e,t,i);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function iB(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function ik(){return new t3({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:iH(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function iV(){return new t3({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:iH(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function iH(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function iG(e){let t=new WeakMap,i=null;function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){let a=r.mapping,s=303===a||304===a,o=301===a||302===a;if(s||o){let a=t.get(r),l=void 0!==a?a.texture.pmremVersion:0;if(r.isRenderTargetTexture&&r.pmremVersion!==l)return null===i&&(i=new iF(e)),(a=s?i.fromEquirectangular(r,a):i.fromCubemap(r,a)).texture.pmremVersion=r.pmremVersion,t.set(r,a),a.texture;if(void 0!==a)return a.texture;{let l=r.image;return s&&l&&l.height>0||o&&l&&function(e){let t=0;for(let i=0;i<6;i++)void 0!==e[i]&&t++;return 6===t}(l)?(null===i&&(i=new iF(e)),(a=s?i.fromEquirectangular(r):i.fromCubemap(r)).texture.pmremVersion=r.pmremVersion,t.set(r,a),r.addEventListener("dispose",n),a.texture):null}}}return r},dispose:function(){t=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function iW(e){let t={};function i(i){let n;if(void 0!==t[i])return t[i];switch(i){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(i)}return t[i]=n,n}return{has:function(e){return null!==i(e)},init:function(){i("EXT_color_buffer_float"),i("WEBGL_clip_cull_distance"),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture"),i("WEBGL_render_shared_exponent")},get:function(e){let t=i(e);return null===t&&k("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function ij(e,t,i,n){let r={},a=new WeakMap;function s(e){let o=e.target;for(let e in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[e]);for(let e in o.morphAttributes){let i=o.morphAttributes[e];for(let e=0,n=i.length;e<n;e++)t.remove(i[e])}o.removeEventListener("dispose",s),delete r[o.id];let l=a.get(o);l&&(t.remove(l),a.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(e){let i=[],n=e.index,r=e.attributes.position,s=0;if(null!==n){let e=n.array;s=n.version;for(let t=0,n=e.length;t<n;t+=3){let n=e[t+0],r=e[t+1],a=e[t+2];i.push(n,r,r,a,a,n)}}else{if(void 0===r)return;let e=r.array;s=r.version;for(let t=0,n=e.length/3-1;t<n;t+=3){let e=t+0,n=t+1,r=t+2;i.push(e,n,n,r,r,e)}}let o=new(F(i)?tw:tM)(i,1);o.version=s;let l=a.get(e);l&&t.remove(l),a.set(e,o)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",s),r[t.id]=!0,i.memory.geometries++),t},update:function(i){let n=i.attributes;for(let i in n)t.update(n[i],e.ARRAY_BUFFER);let r=i.morphAttributes;for(let i in r){let n=r[i];for(let i=0,r=n.length;i<r;i++)t.update(n[i],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let i=e.index;null!==i&&t.version<i.version&&o(e)}else o(e);return a.get(e)}}}function iq(e,t,i){let n,r,a;function s(t,s,o){0!==o&&(e.drawElementsInstanced(n,s,r,t*a,o),i.update(s,n,o))}this.setMode=function(e){n=e},this.setIndex=function(e){r=e.type,a=e.bytesPerElement},this.render=function(t,s){e.drawElements(n,s,r,t*a),i.update(s,n,1)},this.renderInstances=s,this.renderMultiDraw=function(e,a,s){if(0===s)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,a,0,r,e,0,s);let o=0;for(let e=0;e<s;e++)o+=a[e];i.update(o,n,1)},this.renderMultiDrawInstances=function(e,o,l,h){if(0===l)return;let c=t.get("WEBGL_multi_draw");if(null===c)for(let t=0;t<e.length;t++)s(e[t]/a,o[t],h[t]);else{c.multiDrawElementsInstancedWEBGL(n,o,0,r,e,0,h,0,l);let t=0;for(let e=0;e<l;e++)t+=o[e];for(let e=0;e<h.length;e++)i.update(t,n,h[e])}}}function iX(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(i,n,r){switch(t.calls++,n){case e.TRIANGLES:t.triangles+=i/3*r;break;case e.LINES:t.lines+=i/2*r;break;case e.LINE_STRIP:t.lines+=r*(i-1);break;case e.LINE_LOOP:t.lines+=r*i;break;case e.POINTS:t.points+=r*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function iY(e,t,i){let n=new WeakMap,r=new ee;return{update:function(a,s,o){let l=a.morphTargetInfluences,h=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,c=void 0!==h?h.length:0,u=n.get(s);if(void 0===u||u.count!==c){void 0!==u&&u.texture.dispose();let e=void 0!==s.morphAttributes.position,i=void 0!==s.morphAttributes.normal,a=void 0!==s.morphAttributes.color,o=s.morphAttributes.position||[],l=s.morphAttributes.normal||[],h=s.morphAttributes.color||[],d=0;!0===e&&(d=1),!0===i&&(d=2),!0===a&&(d=3);let p=s.attributes.position.count*d,f=1;p>t.maxTextureSize&&(f=Math.ceil(p/t.maxTextureSize),p=t.maxTextureSize);let m=new Float32Array(p*f*4*c),g=new en(m,p,f,c);g.type=1015,g.needsUpdate=!0;let v=4*d;for(let t=0;t<c;t++){let n=o[t],s=l[t],c=h[t],u=p*f*4*t;for(let t=0;t<n.count;t++){let o=t*v;!0===e&&(r.fromBufferAttribute(n,t),m[u+o+0]=r.x,m[u+o+1]=r.y,m[u+o+2]=r.z,m[u+o+3]=0),!0===i&&(r.fromBufferAttribute(s,t),m[u+o+4]=r.x,m[u+o+5]=r.y,m[u+o+6]=r.z,m[u+o+7]=0),!0===a&&(r.fromBufferAttribute(c,t),m[u+o+8]=r.x,m[u+o+9]=r.y,m[u+o+10]=r.z,m[u+o+11]=4===c.itemSize?r.w:1)}}u={count:c,texture:g,size:new U(p,f)},n.set(s,u),s.addEventListener("dispose",function e(){g.dispose(),n.delete(s),s.removeEventListener("dispose",e)})}if(!0===a.isInstancedMesh&&null!==a.morphTexture)o.getUniforms().setValue(e,"morphTexture",a.morphTexture,i);else{let t=0;for(let e=0;e<l.length;e++)t+=l[e];let i=s.morphTargetsRelative?1:1-t;o.getUniforms().setValue(e,"morphTargetBaseInfluence",i),o.getUniforms().setValue(e,"morphTargetInfluences",l)}o.getUniforms().setValue(e,"morphTargetsTexture",u.texture,i),o.getUniforms().setValue(e,"morphTargetsTextureSize",u.size)}}}function iJ(e,t,i,n){let r=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(s){let o=n.render.frame,l=s.geometry,h=t.get(s,l);if(r.get(h)!==o&&(t.update(h),r.set(h,o)),s.isInstancedMesh&&(!1===s.hasEventListener("dispose",a)&&s.addEventListener("dispose",a),r.get(s)!==o&&(i.update(s.instanceMatrix,e.ARRAY_BUFFER),null!==s.instanceColor&&i.update(s.instanceColor,e.ARRAY_BUFFER),r.set(s,o))),s.isSkinnedMesh){let e=s.skeleton;r.get(e)!==o&&(e.update(),r.set(e,o))}return h},dispose:function(){r=new WeakMap}}}class iZ extends ${constructor(e,t,i,n,r,a,s,o,l,h=1026){if(1026!==h&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&1026===h&&(i=1014),void 0===i&&1027===h&&(i=1020),super(null,n,r,a,s,o,h,i,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==s?s:1003,this.minFilter=void 0!==o?o:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}let iK=new $,iQ=new iZ(1,1),i$=new en,i0=new class extends ${constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},i1=new ie,i2=[],i3=[],i4=new Float32Array(16),i5=new Float32Array(9),i6=new Float32Array(4);function i7(e,t,i){let n=e[0];if(n<=0||n>0)return e;let r=t*i,a=i2[r];if(void 0===a&&(a=new Float32Array(r),i2[r]=a),0!==t){n.toArray(a,0);for(let n=1,r=0;n!==t;++n)r+=i,e[n].toArray(a,r)}return a}function i8(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function i9(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function ne(e,t){let i=i3[t];void 0===i&&(i=new Int32Array(t),i3[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function nt(e,t){let i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function ni(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(i8(i,t))return;e.uniform2fv(this.addr,t),i9(i,t)}}function nn(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(i8(i,t))return;e.uniform3fv(this.addr,t),i9(i,t)}}function nr(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(i8(i,t))return;e.uniform4fv(this.addr,t),i9(i,t)}}function na(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(i8(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),i9(i,t)}else{if(i8(i,n))return;i6.set(n),e.uniformMatrix2fv(this.addr,!1,i6),i9(i,n)}}function ns(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(i8(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),i9(i,t)}else{if(i8(i,n))return;i5.set(n),e.uniformMatrix3fv(this.addr,!1,i5),i9(i,n)}}function no(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(i8(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),i9(i,t)}else{if(i8(i,n))return;i4.set(n),e.uniformMatrix4fv(this.addr,!1,i4),i9(i,n)}}function nl(e,t){let i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function nh(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(i8(i,t))return;e.uniform2iv(this.addr,t),i9(i,t)}}function nc(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(i8(i,t))return;e.uniform3iv(this.addr,t),i9(i,t)}}function nu(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(i8(i,t))return;e.uniform4iv(this.addr,t),i9(i,t)}}function nd(e,t){let i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function np(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(i8(i,t))return;e.uniform2uiv(this.addr,t),i9(i,t)}}function nf(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(i8(i,t))return;e.uniform3uiv(this.addr,t),i9(i,t)}}function nm(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(i8(i,t))return;e.uniform4uiv(this.addr,t),i9(i,t)}}function ng(e,t,i){let n;let r=this.cache,a=i.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),this.type===e.SAMPLER_2D_SHADOW?(iQ.compareFunction=515,n=iQ):n=iK,i.setTexture2D(t||n,a)}function nv(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||i0,r)}function ny(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(t||i1,r)}function n_(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||i$,r)}function nx(e,t){e.uniform1fv(this.addr,t)}function nb(e,t){let i=i7(t,this.size,2);e.uniform2fv(this.addr,i)}function nM(e,t){let i=i7(t,this.size,3);e.uniform3fv(this.addr,i)}function nw(e,t){let i=i7(t,this.size,4);e.uniform4fv(this.addr,i)}function nS(e,t){let i=i7(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function nE(e,t){let i=i7(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function nT(e,t){let i=i7(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function nA(e,t){e.uniform1iv(this.addr,t)}function nC(e,t){e.uniform2iv(this.addr,t)}function nR(e,t){e.uniform3iv(this.addr,t)}function nP(e,t){e.uniform4iv(this.addr,t)}function nL(e,t){e.uniform1uiv(this.addr,t)}function nN(e,t){e.uniform2uiv(this.addr,t)}function nI(e,t){e.uniform3uiv(this.addr,t)}function nU(e,t){e.uniform4uiv(this.addr,t)}function nO(e,t,i){let n=this.cache,r=t.length,a=ne(i,r);i8(n,a)||(e.uniform1iv(this.addr,a),i9(n,a));for(let e=0;e!==r;++e)i.setTexture2D(t[e]||iK,a[e])}function nD(e,t,i){let n=this.cache,r=t.length,a=ne(i,r);i8(n,a)||(e.uniform1iv(this.addr,a),i9(n,a));for(let e=0;e!==r;++e)i.setTexture3D(t[e]||i0,a[e])}function nF(e,t,i){let n=this.cache,r=t.length,a=ne(i,r);i8(n,a)||(e.uniform1iv(this.addr,a),i9(n,a));for(let e=0;e!==r;++e)i.setTextureCube(t[e]||i1,a[e])}function nz(e,t,i){let n=this.cache,r=t.length,a=ne(i,r);i8(n,a)||(e.uniform1iv(this.addr,a),i9(n,a));for(let e=0;e!==r;++e)i.setTexture2DArray(t[e]||i$,a[e])}class nB{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return nt;case 35664:return ni;case 35665:return nn;case 35666:return nr;case 35674:return na;case 35675:return ns;case 35676:return no;case 5124:case 35670:return nl;case 35667:case 35671:return nh;case 35668:case 35672:return nc;case 35669:case 35673:return nu;case 5125:return nd;case 36294:return np;case 36295:return nf;case 36296:return nm;case 35678:case 36198:case 36298:case 36306:case 35682:return ng;case 35679:case 36299:case 36307:return nv;case 35680:case 36300:case 36308:case 36293:return ny;case 36289:case 36303:case 36311:case 36292:return n_}}(t.type)}}class nk{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return nx;case 35664:return nb;case 35665:return nM;case 35666:return nw;case 35674:return nS;case 35675:return nE;case 35676:return nT;case 5124:case 35670:return nA;case 35667:case 35671:return nC;case 35668:case 35672:return nR;case 35669:case 35673:return nP;case 5125:return nL;case 36294:return nN;case 36295:return nI;case 36296:return nU;case 35678:case 36198:case 36298:case 36306:case 35682:return nO;case 35679:case 36299:case 36307:return nD;case 35680:case 36300:case 36308:case 36293:return nF;case 36289:case 36303:case 36311:case 36292:return nz}}(t.type)}}class nV{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){let n=this.seq;for(let r=0,a=n.length;r!==a;++r){let a=n[r];a.setValue(e,t[a.id],i)}}}let nH=/(\w+)(\])?(\[|\.)?/g;function nG(e,t){e.seq.push(t),e.map[t.id]=t}class nW{constructor(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){let i=e.getActiveUniform(t,n),r=e.getUniformLocation(t,i.name);!function(e,t,i){let n=e.name,r=n.length;for(nH.lastIndex=0;;){let a=nH.exec(n),s=nH.lastIndex,o=a[1],l="]"===a[2],h=a[3];if(l&&(o|=0),void 0===h||"["===h&&s+2===r){nG(i,void 0===h?new nB(o,e,t):new nk(o,e,t));break}{let e=i.map[o];void 0===e&&nG(i,e=new nV(o)),i=e}}}(i,r,this)}}setValue(e,t,i,n){let r=this.map[t];void 0!==r&&r.setValue(e,i,n)}setOptional(e,t,i){let n=t[i];void 0!==n&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,a=t.length;r!==a;++r){let a=t[r],s=i[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,n)}}static seqWithValue(e,t){let i=[];for(let n=0,r=e.length;n!==r;++n){let r=e[n];r.id in t&&i.push(r)}return i}}function nj(e,t,i){let n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}let nq=0;function nX(e,t,i){let n=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";let a=/ERROR: 0:(\d+)/.exec(r);if(!a)return r;{let n=parseInt(a[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){let i=e.split("\n"),n=[],r=Math.max(t-6,0),a=Math.min(t+6,i.length);for(let e=r;e<a;e++){let r=e+1;n.push(`${r===t?">":" "} ${r}: ${i[e]}`)}return n.join("\n")}(e.getShaderSource(t),n)}}function nY(e){return""!==e}function nJ(e,t){let i=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function nZ(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let nK=/^[ \t]*#include +<([\w\d./]+)>/gm;function nQ(e){return e.replace(nK,n0)}let n$=new Map;function n0(e,t){let i=ip[t];if(void 0===i){let e=n$.get(t);if(void 0!==e)i=ip[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e);else throw Error("Can not resolve #include <"+t+">")}return nQ(i)}let n1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function n2(e){return e.replace(n1,n3)}function n3(e,t,i,n){let r="";for(let e=parseInt(t);e<parseInt(i);e++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function n4(e){let t=`precision ${e.precision} float;
	precision ${e.precision} int;
	precision ${e.precision} sampler2D;
	precision ${e.precision} samplerCube;
	precision ${e.precision} sampler3D;
	precision ${e.precision} sampler2DArray;
	precision ${e.precision} sampler2DShadow;
	precision ${e.precision} samplerCubeShadow;
	precision ${e.precision} sampler2DArrayShadow;
	precision ${e.precision} isampler2D;
	precision ${e.precision} isampler3D;
	precision ${e.precision} isamplerCube;
	precision ${e.precision} isampler2DArray;
	precision ${e.precision} usampler2D;
	precision ${e.precision} usampler3D;
	precision ${e.precision} usamplerCube;
	precision ${e.precision} usampler2DArray;
	`;return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function n5(e,t,i,n){let r,a,s,o,l,h;let c=e.getContext(),u=i.defines,d=i.vertexShader,v=i.fragmentShader,y=(l="SHADOWMAP_TYPE_BASIC",1===i.shadowMapType?l="SHADOWMAP_TYPE_PCF":2===i.shadowMapType?l="SHADOWMAP_TYPE_PCF_SOFT":3===i.shadowMapType&&(l="SHADOWMAP_TYPE_VSM"),l),_=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:t="ENVMAP_TYPE_CUBE_UV"}return t}(i),M=(h="ENVMAP_MODE_REFLECTION",i.envMap&&302===i.envMapMode&&(h="ENVMAP_MODE_REFRACTION"),h),w=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(i),S=function(e){let t=e.envMapCubeUVHeight;if(null===t)return null;let i=Math.log2(t)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:1/t,maxMip:i}}(i),E=[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(nY).join("\n"),T=function(e){let t=[];for(let i in e){let n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}(u),A=c.createProgram(),C=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?((r=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,T].filter(nY).join("\n")).length>0&&(r+="\n"),(a=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,T].filter(nY).join("\n")).length>0&&(a+="\n")):(r=[n4(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,T,i.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",i.batching?"#define USE_BATCHING":"",i.batchingColor?"#define USE_BATCHING_COLOR":"",i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.instancingMorph?"#define USE_INSTANCING_MORPH":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+M:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.displacementMap?"#define USE_DISPLACEMENTMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.mapUv?"#define MAP_UV "+i.mapUv:"",i.alphaMapUv?"#define ALPHAMAP_UV "+i.alphaMapUv:"",i.lightMapUv?"#define LIGHTMAP_UV "+i.lightMapUv:"",i.aoMapUv?"#define AOMAP_UV "+i.aoMapUv:"",i.emissiveMapUv?"#define EMISSIVEMAP_UV "+i.emissiveMapUv:"",i.bumpMapUv?"#define BUMPMAP_UV "+i.bumpMapUv:"",i.normalMapUv?"#define NORMALMAP_UV "+i.normalMapUv:"",i.displacementMapUv?"#define DISPLACEMENTMAP_UV "+i.displacementMapUv:"",i.metalnessMapUv?"#define METALNESSMAP_UV "+i.metalnessMapUv:"",i.roughnessMapUv?"#define ROUGHNESSMAP_UV "+i.roughnessMapUv:"",i.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+i.anisotropyMapUv:"",i.clearcoatMapUv?"#define CLEARCOATMAP_UV "+i.clearcoatMapUv:"",i.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+i.clearcoatNormalMapUv:"",i.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+i.clearcoatRoughnessMapUv:"",i.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+i.iridescenceMapUv:"",i.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+i.iridescenceThicknessMapUv:"",i.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+i.sheenColorMapUv:"",i.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+i.sheenRoughnessMapUv:"",i.specularMapUv?"#define SPECULARMAP_UV "+i.specularMapUv:"",i.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+i.specularColorMapUv:"",i.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+i.specularIntensityMapUv:"",i.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+i.transmissionMapUv:"",i.thicknessMapUv?"#define THICKNESSMAP_UV "+i.thicknessMapUv:"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+y:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(nY).join("\n"),a=[n4(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,T,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+_:"",i.envMap?"#define "+M:"",i.envMap?"#define "+w:"",S?"#define CUBEUV_TEXEL_WIDTH "+S.texelWidth:"",S?"#define CUBEUV_TEXEL_HEIGHT "+S.texelHeight:"",S?"#define CUBEUV_MAX_MIP "+S.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.dispersion?"#define USE_DISPERSION":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor||i.batchingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+y:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?ip.tonemapping_pars_fragment:"",0!==i.toneMapping?function(e,t){let i;switch(t){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 6:i="AgX";break;case 7:i="Neutral";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),i="Linear"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",ip.colorspace_pars_fragment,function(e,t){let i=function(e){let t;let i=j.getPrimaries(j.workingColorSpace),n=j.getPrimaries(e);switch(i===n?t="":"p3"===i&&n===x?t="LinearDisplayP3ToLinearSRGB":i===x&&"p3"===n&&(t="LinearSRGBToLinearDisplayP3"),e){case f:case g:return[t,"LinearTransferOETF"];case p:case m:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[t,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) { return ${i[0]}( ${i[1]}( value ) ); }`}("linearToOutputTexel",i.outputColorSpace),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(nY).join("\n")),d=nZ(d=nJ(d=nQ(d),i),i),v=nZ(v=nJ(v=nQ(v),i),i),d=n2(d),v=n2(v),!0!==i.isRawShaderMaterial&&(C="#version 300 es\n",r=[E,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+r,a=["#define varying in",i.glslVersion===b?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===b?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);let R=C+r+d,P=C+a+v,L=nj(c,c.VERTEX_SHADER,R),N=nj(c,c.FRAGMENT_SHADER,P);function I(t){if(e.debug.checkShaderErrors){let i=c.getProgramInfoLog(A).trim(),n=c.getShaderInfoLog(L).trim(),s=c.getShaderInfoLog(N).trim(),o=!0,l=!0;if(!1===c.getProgramParameter(A,c.LINK_STATUS)){if(o=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(c,A,L,N);else{let e=nX(c,L,"vertex"),n=nX(c,N,"fragment");console.error("THREE.WebGLProgram: Shader Error "+c.getError()+" - VALIDATE_STATUS "+c.getProgramParameter(A,c.VALIDATE_STATUS)+"\n\nMaterial Name: "+t.name+"\nMaterial Type: "+t.type+"\n\nProgram Info Log: "+i+"\n"+e+"\n"+n)}}else""!==i?console.warn("THREE.WebGLProgram: Program Info Log:",i):(""===n||""===s)&&(l=!1);l&&(t.diagnostics={runnable:o,programLog:i,vertexShader:{log:n,prefix:r},fragmentShader:{log:s,prefix:a}})}c.deleteShader(L),c.deleteShader(N),s=new nW(c,A),o=function(e,t){let i={},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){let n=e.getActiveAttrib(t,r),a=n.name,s=1;n.type===e.FLOAT_MAT2&&(s=2),n.type===e.FLOAT_MAT3&&(s=3),n.type===e.FLOAT_MAT4&&(s=4),i[a]={type:n.type,location:e.getAttribLocation(t,a),locationSize:s}}return i}(c,A)}c.attachShader(A,L),c.attachShader(A,N),void 0!==i.index0AttributeName?c.bindAttribLocation(A,0,i.index0AttributeName):!0===i.morphTargets&&c.bindAttribLocation(A,0,"position"),c.linkProgram(A),this.getUniforms=function(){return void 0===s&&I(this),s},this.getAttributes=function(){return void 0===o&&I(this),o};let U=!1===i.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===U&&(U=c.getProgramParameter(A,37297)),U},this.destroy=function(){n.releaseStatesOfProgram(this),c.deleteProgram(A),this.program=void 0},this.type=i.shaderType,this.name=i.shaderName,this.id=nq++,this.cacheKey=t,this.usedTimes=1,this.program=A,this.vertexShader=L,this.fragmentShader=N,this}let n6=0;class n7{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return!1===a.has(n)&&(a.add(n),n.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(e){for(let t of this.materialCache.get(e))t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,i=t.get(e);return void 0===i&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){let t=this.shaderCache,i=t.get(e);return void 0===i&&(i=new n8(e),t.set(e,i)),i}}class n8{constructor(e){this.id=n6++,this.code=e,this.usedTimes=0}}function n9(e,t,i,n,r,a,s){let o=new eq,h=new n7,c=new Set,u=[],d=r.logarithmicDepthBuffer,p=r.vertexTextures,m=r.precision,g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(e){return(c.add(e),0===e)?"uv":`uv${e}`}return{getParameters:function(a,o,u,_,x){let b,M,w,S;let E=_.fog,T=x.geometry,A=a.isMeshStandardMaterial?_.environment:null,C=(a.isMeshStandardMaterial?i:t).get(a.envMap||A),R=C&&306===C.mapping?C.image.height:null,P=g[a.type];null!==a.precision&&(m=r.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",m,"instead.");let L=T.morphAttributes.position||T.morphAttributes.normal||T.morphAttributes.color,N=void 0!==L?L.length:0,I=0;if(void 0!==T.morphAttributes.position&&(I=1),void 0!==T.morphAttributes.normal&&(I=2),void 0!==T.morphAttributes.color&&(I=3),P){let e=ig[P];b=e.vertexShader,M=e.fragmentShader}else b=a.vertexShader,M=a.fragmentShader,h.update(a),w=h.getVertexShaderID(a),S=h.getFragmentShaderID(a);let U=e.getRenderTarget(),O=!0===x.isInstancedMesh,D=!0===x.isBatchedMesh,F=!!a.map,z=!!a.matcap,B=!!C,k=!!a.aoMap,V=!!a.lightMap,H=!!a.bumpMap,G=!!a.normalMap,W=!!a.displacementMap,q=!!a.emissiveMap,X=!!a.metalnessMap,Y=!!a.roughnessMap,J=a.anisotropy>0,Z=a.clearcoat>0,K=a.dispersion>0,Q=a.iridescence>0,$=a.sheen>0,ee=a.transmission>0,et=J&&!!a.anisotropyMap,ei=Z&&!!a.clearcoatMap,en=Z&&!!a.clearcoatNormalMap,er=Z&&!!a.clearcoatRoughnessMap,ea=Q&&!!a.iridescenceMap,es=Q&&!!a.iridescenceThicknessMap,eo=$&&!!a.sheenColorMap,el=$&&!!a.sheenRoughnessMap,eh=!!a.specularMap,ec=!!a.specularColorMap,eu=!!a.specularIntensityMap,ed=ee&&!!a.transmissionMap,ep=ee&&!!a.thicknessMap,ef=!!a.gradientMap,em=!!a.alphaMap,eg=a.alphaTest>0,ev=!!a.alphaHash,ey=!!a.extensions,e_=0;a.toneMapped&&(null===U||!0===U.isXRRenderTarget)&&(e_=e.toneMapping);let ex={shaderID:P,shaderType:a.type,shaderName:a.name,vertexShader:b,fragmentShader:M,defines:a.defines,customVertexShaderID:w,customFragmentShaderID:S,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:m,batching:D,batchingColor:D&&null!==x._colorsTexture,instancing:O,instancingColor:O&&null!==x.instanceColor,instancingMorph:O&&null!==x.morphTexture,supportsVertexTextures:p,outputColorSpace:null===U?e.outputColorSpace:!0===U.isXRRenderTarget?U.texture.colorSpace:f,alphaToCoverage:!!a.alphaToCoverage,map:F,matcap:z,envMap:B,envMapMode:B&&C.mapping,envMapCubeUVHeight:R,aoMap:k,lightMap:V,bumpMap:H,normalMap:G,displacementMap:p&&W,emissiveMap:q,normalMapObjectSpace:G&&1===a.normalMapType,normalMapTangentSpace:G&&0===a.normalMapType,metalnessMap:X,roughnessMap:Y,anisotropy:J,anisotropyMap:et,clearcoat:Z,clearcoatMap:ei,clearcoatNormalMap:en,clearcoatRoughnessMap:er,dispersion:K,iridescence:Q,iridescenceMap:ea,iridescenceThicknessMap:es,sheen:$,sheenColorMap:eo,sheenRoughnessMap:el,specularMap:eh,specularColorMap:ec,specularIntensityMap:eu,transmission:ee,transmissionMap:ed,thicknessMap:ep,gradientMap:ef,opaque:!1===a.transparent&&1===a.blending&&!1===a.alphaToCoverage,alphaMap:em,alphaTest:eg,alphaHash:ev,combine:a.combine,mapUv:F&&v(a.map.channel),aoMapUv:k&&v(a.aoMap.channel),lightMapUv:V&&v(a.lightMap.channel),bumpMapUv:H&&v(a.bumpMap.channel),normalMapUv:G&&v(a.normalMap.channel),displacementMapUv:W&&v(a.displacementMap.channel),emissiveMapUv:q&&v(a.emissiveMap.channel),metalnessMapUv:X&&v(a.metalnessMap.channel),roughnessMapUv:Y&&v(a.roughnessMap.channel),anisotropyMapUv:et&&v(a.anisotropyMap.channel),clearcoatMapUv:ei&&v(a.clearcoatMap.channel),clearcoatNormalMapUv:en&&v(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:er&&v(a.clearcoatRoughnessMap.channel),iridescenceMapUv:ea&&v(a.iridescenceMap.channel),iridescenceThicknessMapUv:es&&v(a.iridescenceThicknessMap.channel),sheenColorMapUv:eo&&v(a.sheenColorMap.channel),sheenRoughnessMapUv:el&&v(a.sheenRoughnessMap.channel),specularMapUv:eh&&v(a.specularMap.channel),specularColorMapUv:ec&&v(a.specularColorMap.channel),specularIntensityMapUv:eu&&v(a.specularIntensityMap.channel),transmissionMapUv:ed&&v(a.transmissionMap.channel),thicknessMapUv:ep&&v(a.thicknessMap.channel),alphaMapUv:em&&v(a.alphaMap.channel),vertexTangents:!!T.attributes.tangent&&(G||J),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!T.attributes.color&&4===T.attributes.color.itemSize,pointsUvs:!0===x.isPoints&&!!T.attributes.uv&&(F||em),fog:!!E,useFog:!0===a.fog,fogExp2:!!E&&E.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===x.isSkinnedMesh,morphTargets:void 0!==T.morphAttributes.position,morphNormals:void 0!==T.morphAttributes.normal,morphColors:void 0!==T.morphAttributes.color,morphTargetsCount:N,morphTextureStride:I,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:e_,decodeVideoTexture:F&&!0===a.map.isVideoTexture&&j.getTransfer(a.map.colorSpace)===y,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===l,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionClipCullDistance:ey&&!0===a.extensions.clipCullDistance&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ey&&!0===a.extensions.multiDraw||D)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()};return ex.vertexUv1s=c.has(1),ex.vertexUv2s=c.has(2),ex.vertexUv3s=c.has(3),c.clear(),ex},getProgramCacheKey:function(t){let i=[];if(t.shaderID?i.push(t.shaderID):(i.push(t.customVertexShaderID),i.push(t.customFragmentShaderID)),void 0!==t.defines)for(let e in t.defines)i.push(e),i.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(i.push(t.precision),i.push(t.outputColorSpace),i.push(t.envMapMode),i.push(t.envMapCubeUVHeight),i.push(t.mapUv),i.push(t.alphaMapUv),i.push(t.lightMapUv),i.push(t.aoMapUv),i.push(t.bumpMapUv),i.push(t.normalMapUv),i.push(t.displacementMapUv),i.push(t.emissiveMapUv),i.push(t.metalnessMapUv),i.push(t.roughnessMapUv),i.push(t.anisotropyMapUv),i.push(t.clearcoatMapUv),i.push(t.clearcoatNormalMapUv),i.push(t.clearcoatRoughnessMapUv),i.push(t.iridescenceMapUv),i.push(t.iridescenceThicknessMapUv),i.push(t.sheenColorMapUv),i.push(t.sheenRoughnessMapUv),i.push(t.specularMapUv),i.push(t.specularColorMapUv),i.push(t.specularIntensityMapUv),i.push(t.transmissionMapUv),i.push(t.thicknessMapUv),i.push(t.combine),i.push(t.fogExp2),i.push(t.sizeAttenuation),i.push(t.morphTargetsCount),i.push(t.morphAttributeCount),i.push(t.numDirLights),i.push(t.numPointLights),i.push(t.numSpotLights),i.push(t.numSpotLightMaps),i.push(t.numHemiLights),i.push(t.numRectAreaLights),i.push(t.numDirLightShadows),i.push(t.numPointLightShadows),i.push(t.numSpotLightShadows),i.push(t.numSpotLightShadowsWithMaps),i.push(t.numLightProbes),i.push(t.shadowMapType),i.push(t.toneMapping),i.push(t.numClippingPlanes),i.push(t.numClipIntersection),i.push(t.depthPacking),o.disableAll(),t.supportsVertexTextures&&o.enable(0),t.instancing&&o.enable(1),t.instancingColor&&o.enable(2),t.instancingMorph&&o.enable(3),t.matcap&&o.enable(4),t.envMap&&o.enable(5),t.normalMapObjectSpace&&o.enable(6),t.normalMapTangentSpace&&o.enable(7),t.clearcoat&&o.enable(8),t.iridescence&&o.enable(9),t.alphaTest&&o.enable(10),t.vertexColors&&o.enable(11),t.vertexAlphas&&o.enable(12),t.vertexUv1s&&o.enable(13),t.vertexUv2s&&o.enable(14),t.vertexUv3s&&o.enable(15),t.vertexTangents&&o.enable(16),t.anisotropy&&o.enable(17),t.alphaHash&&o.enable(18),t.batching&&o.enable(19),t.dispersion&&o.enable(20),t.batchingColor&&o.enable(21),i.push(o.mask),o.disableAll(),t.fog&&o.enable(0),t.useFog&&o.enable(1),t.flatShading&&o.enable(2),t.logarithmicDepthBuffer&&o.enable(3),t.skinning&&o.enable(4),t.morphTargets&&o.enable(5),t.morphNormals&&o.enable(6),t.morphColors&&o.enable(7),t.premultipliedAlpha&&o.enable(8),t.shadowMapEnabled&&o.enable(9),t.doubleSided&&o.enable(10),t.flipSided&&o.enable(11),t.useDepthPacking&&o.enable(12),t.dithering&&o.enable(13),t.transmission&&o.enable(14),t.sheen&&o.enable(15),t.opaque&&o.enable(16),t.pointsUvs&&o.enable(17),t.decodeVideoTexture&&o.enable(18),t.alphaToCoverage&&o.enable(19),i.push(o.mask),i.push(e.outputColorSpace)),i.push(t.customProgramCacheKey),i.join()},getUniforms:function(e){let t;let i=g[e.type];if(i){let e=ig[i];t=t2.clone(e.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,i){let n;for(let e=0,t=u.length;e<t;e++){let t=u[e];if(t.cacheKey===i){n=t,++n.usedTimes;break}}return void 0===n&&(n=new n5(e,i,t,a),u.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){let t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){h.remove(e)},programs:u,dispose:function(){h.dispose()}}}function re(){let e=new WeakMap;return{get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,n){e.get(t)[i]=n},dispose:function(){e=new WeakMap}}}function rt(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function ri(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function rn(){let e=[],t=0,i=[],n=[],r=[];function a(i,n,r,a,s,o){let l=e[t];return void 0===l?(l={id:i.id,object:i,geometry:n,material:r,groupOrder:a,renderOrder:i.renderOrder,z:s,group:o},e[t]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=r,l.groupOrder=a,l.renderOrder=i.renderOrder,l.z=s,l.group=o),t++,l}return{opaque:i,transmissive:n,transparent:r,init:function(){t=0,i.length=0,n.length=0,r.length=0},push:function(e,t,s,o,l,h){let c=a(e,t,s,o,l,h);s.transmission>0?n.push(c):!0===s.transparent?r.push(c):i.push(c)},unshift:function(e,t,s,o,l,h){let c=a(e,t,s,o,l,h);s.transmission>0?n.unshift(c):!0===s.transparent?r.unshift(c):i.unshift(c)},finish:function(){for(let i=t,n=e.length;i<n;i++){let t=e[i];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){i.length>1&&i.sort(e||rt),n.length>1&&n.sort(t||ri),r.length>1&&r.sort(t||ri)}}}function rr(){let e=new WeakMap;return{get:function(t,i){let n;let r=e.get(t);return void 0===r?(n=new rn,e.set(t,[n])):i>=r.length?(n=new rn,r.push(n)):n=r[i],n},dispose:function(){e=new WeakMap}}}function ra(){let e={};return{get:function(t){let i;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":i={direction:new ea,color:new tf};break;case"SpotLight":i={position:new ea,direction:new ea,color:new tf,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new ea,color:new tf,distance:0,decay:0};break;case"HemisphereLight":i={direction:new ea,skyColor:new tf,groundColor:new tf};break;case"RectAreaLight":i={color:new tf,position:new ea,halfWidth:new ea,halfHeight:new ea}}return e[t.id]=i,i}}}let rs=0;function ro(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function rl(e){let t=new ra,i=function(){let e={};return{get:function(t){let i;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new U};break;case"PointLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new U,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)n.probe.push(new ea);let r=new ea,a=new eO,s=new eO;return{setup:function(r){let a=0,s=0,o=0;for(let e=0;e<9;e++)n.probe[e].set(0,0,0);let l=0,h=0,c=0,u=0,d=0,p=0,f=0,m=0,g=0,v=0,y=0;r.sort(ro);for(let e=0,_=r.length;e<_;e++){let _=r[e],x=_.color,b=_.intensity,M=_.distance,w=_.shadow&&_.shadow.map?_.shadow.map.texture:null;if(_.isAmbientLight)a+=x.r*b,s+=x.g*b,o+=x.b*b;else if(_.isLightProbe){for(let e=0;e<9;e++)n.probe[e].addScaledVector(_.sh.coefficients[e],b);y++}else if(_.isDirectionalLight){let e=t.get(_);if(e.color.copy(_.color).multiplyScalar(_.intensity),_.castShadow){let e=_.shadow,t=i.get(_);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,n.directionalShadow[l]=t,n.directionalShadowMap[l]=w,n.directionalShadowMatrix[l]=_.shadow.matrix,p++}n.directional[l]=e,l++}else if(_.isSpotLight){let e=t.get(_);e.position.setFromMatrixPosition(_.matrixWorld),e.color.copy(x).multiplyScalar(b),e.distance=M,e.coneCos=Math.cos(_.angle),e.penumbraCos=Math.cos(_.angle*(1-_.penumbra)),e.decay=_.decay,n.spot[c]=e;let r=_.shadow;if(_.map&&(n.spotLightMap[g]=_.map,g++,r.updateMatrices(_),_.castShadow&&v++),n.spotLightMatrix[c]=r.matrix,_.castShadow){let e=i.get(_);e.shadowIntensity=r.intensity,e.shadowBias=r.bias,e.shadowNormalBias=r.normalBias,e.shadowRadius=r.radius,e.shadowMapSize=r.mapSize,n.spotShadow[c]=e,n.spotShadowMap[c]=w,m++}c++}else if(_.isRectAreaLight){let e=t.get(_);e.color.copy(x).multiplyScalar(b),e.halfWidth.set(.5*_.width,0,0),e.halfHeight.set(0,.5*_.height,0),n.rectArea[u]=e,u++}else if(_.isPointLight){let e=t.get(_);if(e.color.copy(_.color).multiplyScalar(_.intensity),e.distance=_.distance,e.decay=_.decay,_.castShadow){let e=_.shadow,t=i.get(_);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,t.shadowCameraNear=e.camera.near,t.shadowCameraFar=e.camera.far,n.pointShadow[h]=t,n.pointShadowMap[h]=w,n.pointShadowMatrix[h]=_.shadow.matrix,f++}n.point[h]=e,h++}else if(_.isHemisphereLight){let e=t.get(_);e.skyColor.copy(_.color).multiplyScalar(b),e.groundColor.copy(_.groundColor).multiplyScalar(b),n.hemi[d]=e,d++}}u>0&&(!0===e.has("OES_texture_float_linear")?(n.rectAreaLTC1=im.LTC_FLOAT_1,n.rectAreaLTC2=im.LTC_FLOAT_2):(n.rectAreaLTC1=im.LTC_HALF_1,n.rectAreaLTC2=im.LTC_HALF_2)),n.ambient[0]=a,n.ambient[1]=s,n.ambient[2]=o;let _=n.hash;(_.directionalLength!==l||_.pointLength!==h||_.spotLength!==c||_.rectAreaLength!==u||_.hemiLength!==d||_.numDirectionalShadows!==p||_.numPointShadows!==f||_.numSpotShadows!==m||_.numSpotMaps!==g||_.numLightProbes!==y)&&(n.directional.length=l,n.spot.length=c,n.rectArea.length=u,n.point.length=h,n.hemi.length=d,n.directionalShadow.length=p,n.directionalShadowMap.length=p,n.pointShadow.length=f,n.pointShadowMap.length=f,n.spotShadow.length=m,n.spotShadowMap.length=m,n.directionalShadowMatrix.length=p,n.pointShadowMatrix.length=f,n.spotLightMatrix.length=m+g-v,n.spotLightMap.length=g,n.numSpotLightShadowsWithMaps=v,n.numLightProbes=y,_.directionalLength=l,_.pointLength=h,_.spotLength=c,_.rectAreaLength=u,_.hemiLength=d,_.numDirectionalShadows=p,_.numPointShadows=f,_.numSpotShadows=m,_.numSpotMaps=g,_.numLightProbes=y,n.version=rs++)},setupView:function(e,t){let i=0,o=0,l=0,h=0,c=0,u=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){let d=e[t];if(d.isDirectionalLight){let e=n.directional[i];e.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(u),i++}else if(d.isSpotLight){let e=n.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),e.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(u),l++}else if(d.isRectAreaLight){let e=n.rectArea[h];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),s.identity(),a.copy(d.matrixWorld),a.premultiply(u),s.extractRotation(a),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),h++}else if(d.isPointLight){let e=n.point[o];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),o++}else if(d.isHemisphereLight){let e=n.hemi[c];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(u),c++}}},state:n}}function rh(e){let t=new rl(e),i=[],n=[],r={lightsArray:i,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:function(e){r.camera=e,i.length=0,n.length=0},state:r,setupLights:function(){t.setup(i)},setupLightsView:function(e){t.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){n.push(e)}}}function rc(e){let t=new WeakMap;return{get:function(i,n=0){let r;let a=t.get(i);return void 0===a?(r=new rh(e),t.set(i,[r])):n>=a.length?(r=new rh(e),a.push(r)):r=a[n],r},dispose:function(){t=new WeakMap}}}class ru extends tv{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class rd extends tv{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function rp(e,t,i){let n=new ih,r=new U,a=new U,s=new ee,h=new ru({depthPacking:3201}),c=new rd,u={},d=i.maxTextureSize,p={[o]:1,1:o,[l]:l},f=new t3({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new U},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),m=f.clone();m.defines.HORIZONTAL_PASS=1;let g=new tN;g.setAttribute("position",new tb(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let v=new tZ(g,f),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let _=this.type;function x(t,i,n,r){let a=null,s=!0===n.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==s)a=s;else if(a=!0===n.isPointLight?c:h,e.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0||i.map&&i.alphaTest>0){let e=a.uuid,t=i.uuid,n=u[e];void 0===n&&(n={},u[e]=n);let r=n[t];void 0===r&&(r=a.clone(),n[t]=r,i.addEventListener("dispose",b)),a=r}return a.visible=i.visible,a.wireframe=i.wireframe,3===r?a.side=null!==i.shadowSide?i.shadowSide:i.side:a.side=null!==i.shadowSide?i.shadowSide:p[i.side],a.alphaMap=i.alphaMap,a.alphaTest=i.alphaTest,a.map=i.map,a.clipShadows=i.clipShadows,a.clippingPlanes=i.clippingPlanes,a.clipIntersection=i.clipIntersection,a.displacementMap=i.displacementMap,a.displacementScale=i.displacementScale,a.displacementBias=i.displacementBias,a.wireframeLinewidth=i.wireframeLinewidth,a.linewidth=i.linewidth,!0===n.isPointLight&&!0===a.isMeshDistanceMaterial&&(e.properties.get(a).light=n),a}function b(e){for(let t in e.target.removeEventListener("dispose",b),u){let i=u[t],n=e.target.uuid;n in i&&(i[n].dispose(),delete i[n])}}this.render=function(i,o,l){if(!1===y.enabled||!1===y.autoUpdate&&!1===y.needsUpdate||0===i.length)return;let h=e.getRenderTarget(),c=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),p=e.state;p.setBlending(0),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);let g=3!==_&&3===this.type,b=3===_&&3!==this.type;for(let h=0,c=i.length;h<c;h++){let c=i[h],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);let y=u.getFrameExtents();if(r.multiply(y),a.copy(u.mapSize),(r.x>d||r.y>d)&&(r.x>d&&(a.x=Math.floor(d/y.x),r.x=a.x*y.x,u.mapSize.x=a.x),r.y>d&&(a.y=Math.floor(d/y.y),r.y=a.y*y.y,u.mapSize.y=a.y)),null===u.map||!0===g||!0===b){let e=3!==this.type?{minFilter:1003,magFilter:1003}:{};null!==u.map&&u.map.dispose(),u.map=new ei(r.x,r.y,e),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();let _=u.getViewportCount();for(let i=0;i<_;i++){let r=u.getViewport(i);s.set(a.x*r.x,a.y*r.y,a.x*r.z,a.y*r.w),p.viewport(s),u.updateMatrices(c,i),n=u.getFrustum(),function i(r,a,s,o,l){if(!1===r.visible)return;if(r.layers.test(a.layers)&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&3===l)&&(!r.frustumCulled||n.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,r.matrixWorld);let i=t.update(r),n=r.material;if(Array.isArray(n)){let t=i.groups;for(let h=0,c=t.length;h<c;h++){let c=t[h],u=n[c.materialIndex];if(u&&u.visible){let t=x(r,u,o,l);r.onBeforeShadow(e,r,a,s,i,t,c),e.renderBufferDirect(s,null,i,t,r,c),r.onAfterShadow(e,r,a,s,i,t,c)}}}else if(n.visible){let t=x(r,n,o,l);r.onBeforeShadow(e,r,a,s,i,t,null),e.renderBufferDirect(s,null,i,t,r,null),r.onAfterShadow(e,r,a,s,i,t,null)}}let h=r.children;for(let e=0,t=h.length;e<t;e++)i(h[e],a,s,o,l)}(o,l,u.camera,c,this.type)}!0!==u.isPointLightShadow&&3===this.type&&function(i,n){let a=t.update(v);f.defines.VSM_SAMPLES!==i.blurSamples&&(f.defines.VSM_SAMPLES=i.blurSamples,m.defines.VSM_SAMPLES=i.blurSamples,f.needsUpdate=!0,m.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new ei(r.x,r.y)),f.uniforms.shadow_pass.value=i.map.texture,f.uniforms.resolution.value=i.mapSize,f.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(n,null,a,f,v,null),m.uniforms.shadow_pass.value=i.mapPass.texture,m.uniforms.resolution.value=i.mapSize,m.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(n,null,a,m,v,null)}(u,l),u.needsUpdate=!1}_=this.type,y.needsUpdate=!1,e.setRenderTarget(h,c,u)}}function rf(e){let t=new function(){let t=!1,i=new ee,n=null,r=new ee(0,0,0,0);return{setMask:function(i){n===i||t||(e.colorMask(i,i,i,i),n=i)},setLocked:function(e){t=e},setClear:function(t,n,a,s,o){!0===o&&(t*=s,n*=s,a*=s),i.set(t,n,a,s),!1===r.equals(i)&&(e.clearColor(t,n,a,s),r.copy(i))},reset:function(){t=!1,n=null,r.set(-1,0,0,0)}}},i=new function(){let t=!1,i=null,n=null,r=null;return{setTest:function(t){t?B(e.DEPTH_TEST):k(e.DEPTH_TEST)},setMask:function(n){i===n||t||(e.depthMask(n),i=n)},setFunc:function(t){if(n!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}n=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,i=null,n=null,r=null}}},n=new function(){let t=!1,i=null,n=null,r=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(i){t||(i?B(e.STENCIL_TEST):k(e.STENCIL_TEST))},setMask:function(n){i===n||t||(e.stencilMask(n),i=n)},setFunc:function(t,i,s){(n!==t||r!==i||a!==s)&&(e.stencilFunc(t,i,s),n=t,r=i,a=s)},setOp:function(t,i,n){(s!==t||o!==i||l!==n)&&(e.stencilOp(t,i,n),s=t,o=i,l=n)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,i=null,n=null,r=null,a=null,s=null,o=null,l=null,h=null}}},r=new WeakMap,a=new WeakMap,s={},o={},h=new WeakMap,c=[],u=null,d=!1,p=null,f=null,m=null,g=null,v=null,y=null,_=null,x=new tf(0,0,0),b=0,M=!1,w=null,S=null,E=null,T=null,A=null,C=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),R=!1,P=e.getParameter(e.VERSION);-1!==P.indexOf("WebGL")?R=parseFloat(/^WebGL (\d)/.exec(P)[1])>=1:-1!==P.indexOf("OpenGL ES")&&(R=parseFloat(/^OpenGL ES (\d)/.exec(P)[1])>=2);let L=null,N={},I=e.getParameter(e.SCISSOR_BOX),U=e.getParameter(e.VIEWPORT),O=new ee().fromArray(I),D=new ee().fromArray(U);function F(t,i,n,r){let a=new Uint8Array(4),s=e.createTexture();e.bindTexture(t,s),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let s=0;s<n;s++)t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY?e.texImage3D(i,0,e.RGBA,1,1,r,0,e.RGBA,e.UNSIGNED_BYTE,a):e.texImage2D(i+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,a);return s}let z={};function B(t){!0!==s[t]&&(e.enable(t),s[t]=!0)}function k(t){!1!==s[t]&&(e.disable(t),s[t]=!1)}z[e.TEXTURE_2D]=F(e.TEXTURE_2D,e.TEXTURE_2D,1),z[e.TEXTURE_CUBE_MAP]=F(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),z[e.TEXTURE_2D_ARRAY]=F(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),z[e.TEXTURE_3D]=F(e.TEXTURE_3D,e.TEXTURE_3D,1,1),t.setClear(0,0,0,1),i.setClear(1),n.setClear(0),B(e.DEPTH_TEST),i.setFunc(3),W(!1),j(1),B(e.CULL_FACE),G(0);let V={100:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};V[103]=e.MIN,V[104]=e.MAX;let H={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA,211:e.CONSTANT_COLOR,212:e.ONE_MINUS_CONSTANT_COLOR,213:e.CONSTANT_ALPHA,214:e.ONE_MINUS_CONSTANT_ALPHA};function G(t,i,n,r,a,s,o,l,h,c){if(0===t){!0===d&&(k(e.BLEND),d=!1);return}if(!1===d&&(B(e.BLEND),d=!0),5!==t){if(t!==p||c!==M){if((100!==f||100!==v)&&(e.blendEquation(e.FUNC_ADD),f=100,v=100),c)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}m=null,g=null,y=null,_=null,x.set(0,0,0),b=0,p=t,M=c}return}a=a||i,s=s||n,o=o||r,(i!==f||a!==v)&&(e.blendEquationSeparate(V[i],V[a]),f=i,v=a),(n!==m||r!==g||s!==y||o!==_)&&(e.blendFuncSeparate(H[n],H[r],H[s],H[o]),m=n,g=r,y=s,_=o),(!1===l.equals(x)||h!==b)&&(e.blendColor(l.r,l.g,l.b,h),x.copy(l),b=h),p=t,M=!1}function W(t){w!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),w=t)}function j(t){0!==t?(B(e.CULL_FACE),t!==S&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):k(e.CULL_FACE),S=t}function q(t,i,n){t?(B(e.POLYGON_OFFSET_FILL),(T!==i||A!==n)&&(e.polygonOffset(i,n),T=i,A=n)):k(e.POLYGON_OFFSET_FILL)}return{buffers:{color:t,depth:i,stencil:n},enable:B,disable:k,bindFramebuffer:function(t,i){return o[t]!==i&&(e.bindFramebuffer(t,i),o[t]=i,t===e.DRAW_FRAMEBUFFER&&(o[e.FRAMEBUFFER]=i),t===e.FRAMEBUFFER&&(o[e.DRAW_FRAMEBUFFER]=i),!0)},drawBuffers:function(t,i){let n=c,r=!1;if(t){void 0===(n=h.get(i))&&(n=[],h.set(i,n));let a=t.textures;if(n.length!==a.length||n[0]!==e.COLOR_ATTACHMENT0){for(let t=0,i=a.length;t<i;t++)n[t]=e.COLOR_ATTACHMENT0+t;n.length=a.length,r=!0}}else n[0]!==e.BACK&&(n[0]=e.BACK,r=!0);r&&e.drawBuffers(n)},useProgram:function(t){return u!==t&&(e.useProgram(t),u=t,!0)},setBlending:G,setMaterial:function(r,a){r.side===l?k(e.CULL_FACE):B(e.CULL_FACE);let s=1===r.side;a&&(s=!s),W(s),1===r.blending&&!1===r.transparent?G(0):G(r.blending,r.blendEquation,r.blendSrc,r.blendDst,r.blendEquationAlpha,r.blendSrcAlpha,r.blendDstAlpha,r.blendColor,r.blendAlpha,r.premultipliedAlpha),i.setFunc(r.depthFunc),i.setTest(r.depthTest),i.setMask(r.depthWrite),t.setMask(r.colorWrite);let o=r.stencilWrite;n.setTest(o),o&&(n.setMask(r.stencilWriteMask),n.setFunc(r.stencilFunc,r.stencilRef,r.stencilFuncMask),n.setOp(r.stencilFail,r.stencilZFail,r.stencilZPass)),q(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),!0===r.alphaToCoverage?B(e.SAMPLE_ALPHA_TO_COVERAGE):k(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:W,setCullFace:j,setLineWidth:function(t){t!==E&&(R&&e.lineWidth(t),E=t)},setPolygonOffset:q,setScissorTest:function(t){t?B(e.SCISSOR_TEST):k(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+C-1),L!==t&&(e.activeTexture(t),L=t)},bindTexture:function(t,i,n){void 0===n&&(n=null===L?e.TEXTURE0+C-1:L);let r=N[n];void 0===r&&(r={type:void 0,texture:void 0},N[n]=r),(r.type!==t||r.texture!==i)&&(L!==n&&(e.activeTexture(n),L=n),e.bindTexture(t,i||z[t]),r.type=t,r.texture=i)},unbindTexture:function(){let t=N[L];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,i){let n=a.get(i);void 0===n&&(n=new WeakMap,a.set(i,n));let r=n.get(t);void 0===r&&(r=e.getUniformBlockIndex(i,t.name),n.set(t,r))},uniformBlockBinding:function(t,i){let n=a.get(i).get(t);r.get(i)!==n&&(e.uniformBlockBinding(i,n,t.__bindingPointIndex),r.set(i,n))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===O.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),O.copy(t))},viewport:function(t){!1===D.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),D.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),s={},L=null,N={},o={},h=new WeakMap,c=[],u=null,d=!1,p=null,f=null,m=null,g=null,v=null,y=null,_=null,x=new tf(0,0,0),b=0,M=!1,w=null,S=null,E=null,T=null,A=null,O.set(0,0,e.canvas.width,e.canvas.height),D.set(0,0,e.canvas.width,e.canvas.height),t.reset(),i.reset(),n.reset()}}}function rm(e,t,i,n){let r=function(e){switch(e){case 1009:case 1010:return{byteLength:1,components:1};case 1012:case 1011:case 1016:return{byteLength:2,components:1};case 1017:case 1018:return{byteLength:2,components:4};case 1014:case 1013:case 1015:return{byteLength:4,components:1};case 35902:return{byteLength:4,components:3}}throw Error(`Unknown texture type ${e}.`)}(n);switch(i){case 1021:case 1024:return e*t;case 1025:return e*t*2;case 1028:case 1029:return e*t/r.components*r.byteLength;case 1030:case 1031:return e*t*2/r.components*r.byteLength;case 1022:return e*t*3/r.components*r.byteLength;case 1023:case 1033:return e*t*4/r.components*r.byteLength;case 33776:case 33777:case 36196:case 37492:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*8;case 33778:case 33779:case 37496:case 37808:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*16;case 35841:case 35843:return Math.max(e,16)*Math.max(t,8)/4;case 35840:case 35842:return Math.max(e,8)*Math.max(t,8)/2;case 37809:return Math.floor((e+4)/5)*Math.floor((t+3)/4)*16;case 37810:return Math.floor((e+4)/5)*Math.floor((t+4)/5)*16;case 37811:return Math.floor((e+5)/6)*Math.floor((t+4)/5)*16;case 37812:return Math.floor((e+5)/6)*Math.floor((t+5)/6)*16;case 37813:return Math.floor((e+7)/8)*Math.floor((t+4)/5)*16;case 37814:return Math.floor((e+7)/8)*Math.floor((t+5)/6)*16;case 37815:return Math.floor((e+7)/8)*Math.floor((t+7)/8)*16;case 37816:return Math.floor((e+9)/10)*Math.floor((t+4)/5)*16;case 37817:return Math.floor((e+9)/10)*Math.floor((t+5)/6)*16;case 37818:return Math.floor((e+9)/10)*Math.floor((t+7)/8)*16;case 37819:return Math.floor((e+9)/10)*Math.floor((t+9)/10)*16;case 37820:return Math.floor((e+11)/12)*Math.floor((t+9)/10)*16;case 37821:return Math.floor((e+11)/12)*Math.floor((t+11)/12)*16;case 36492:case 36494:case 36495:case 36285:case 36286:return Math.ceil(e/4)*Math.ceil(t/4)*16;case 36283:case 36284:return Math.ceil(e/4)*Math.ceil(t/4)*8}throw Error(`Unable to determine texture byte length for ${i} format.`)}function rg(e,t,i,n,r,a,s){let o;let l=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),p=new U,m=new WeakMap,g=new WeakMap,_=!1;try{_="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function x(e,t){return _?new OffscreenCanvas(e,t):z("canvas")}function b(e,t,i){let n=1,r=J(e);if((r.width>i||r.height>i)&&(n=i/Math.max(r.width,r.height)),n<1){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&e instanceof VideoFrame){let i=Math.floor(n*r.width),a=Math.floor(n*r.height);void 0===o&&(o=x(i,a));let s=t?x(i,a):o;return s.width=i,s.height=a,s.getContext("2d").drawImage(e,0,0,i,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+r.width+"x"+r.height+") to ("+i+"x"+a+")."),s}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+r.width+"x"+r.height+").")}return e}function M(e){return e.generateMipmaps&&1003!==e.minFilter&&1006!==e.minFilter}function w(t){e.generateMipmap(t)}function S(i,n,r,a,s=!1){if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let o=n;if(n===e.RED&&(r===e.FLOAT&&(o=e.R32F),r===e.HALF_FLOAT&&(o=e.R16F),r===e.UNSIGNED_BYTE&&(o=e.R8)),n===e.RED_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.R8UI),r===e.UNSIGNED_SHORT&&(o=e.R16UI),r===e.UNSIGNED_INT&&(o=e.R32UI),r===e.BYTE&&(o=e.R8I),r===e.SHORT&&(o=e.R16I),r===e.INT&&(o=e.R32I)),n===e.RG&&(r===e.FLOAT&&(o=e.RG32F),r===e.HALF_FLOAT&&(o=e.RG16F),r===e.UNSIGNED_BYTE&&(o=e.RG8)),n===e.RG_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RG8UI),r===e.UNSIGNED_SHORT&&(o=e.RG16UI),r===e.UNSIGNED_INT&&(o=e.RG32UI),r===e.BYTE&&(o=e.RG8I),r===e.SHORT&&(o=e.RG16I),r===e.INT&&(o=e.RG32I)),n===e.RGB&&r===e.UNSIGNED_INT_5_9_9_9_REV&&(o=e.RGB9_E5),n===e.RGBA){let t=s?v:j.getTransfer(a);r===e.FLOAT&&(o=e.RGBA32F),r===e.HALF_FLOAT&&(o=e.RGBA16F),r===e.UNSIGNED_BYTE&&(o=t===y?e.SRGB8_ALPHA8:e.RGBA8),r===e.UNSIGNED_SHORT_4_4_4_4&&(o=e.RGBA4),r===e.UNSIGNED_SHORT_5_5_5_1&&(o=e.RGB5_A1)}return(o===e.R16F||o===e.R32F||o===e.RG16F||o===e.RG32F||o===e.RGBA16F||o===e.RGBA32F)&&t.get("EXT_color_buffer_float"),o}function E(t,i){let n;return t?null===i||1014===i||1020===i?n=e.DEPTH24_STENCIL8:1015===i?n=e.DEPTH32F_STENCIL8:1012===i&&(n=e.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===i||1014===i||1020===i?n=e.DEPTH_COMPONENT24:1015===i?n=e.DEPTH_COMPONENT32F:1012===i&&(n=e.DEPTH_COMPONENT16),n}function T(e,t){return!0===M(e)||e.isFramebufferTexture&&1003!==e.minFilter&&1006!==e.minFilter?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function A(e){let t=e.target;t.removeEventListener("dispose",A),function(e){let t=n.get(e);if(void 0===t.__webglInit)return;let i=e.source,r=g.get(i);if(r){let n=r[t.__cacheKey];n.usedTimes--,0===n.usedTimes&&R(e),0===Object.keys(r).length&&g.delete(i)}n.remove(e)}(t),t.isVideoTexture&&m.delete(t)}function C(t){let i=t.target;i.removeEventListener("dispose",C),function(t){let i=n.get(t);if(t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++){if(Array.isArray(i.__webglFramebuffer[t]))for(let n=0;n<i.__webglFramebuffer[t].length;n++)e.deleteFramebuffer(i.__webglFramebuffer[t][n]);else e.deleteFramebuffer(i.__webglFramebuffer[t]);i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[t])}else{if(Array.isArray(i.__webglFramebuffer))for(let t=0;t<i.__webglFramebuffer.length;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]);else e.deleteFramebuffer(i.__webglFramebuffer);if(i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let t=0;t<i.__webglColorRenderbuffer.length;t++)i.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(i.__webglColorRenderbuffer[t]);i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer)}let r=t.textures;for(let t=0,i=r.length;t<i;t++){let i=n.get(r[t]);i.__webglTexture&&(e.deleteTexture(i.__webglTexture),s.memory.textures--),n.remove(r[t])}n.remove(t)}(i)}function R(t){let i=n.get(t);e.deleteTexture(i.__webglTexture);let r=t.source,a=g.get(r);delete a[i.__cacheKey],s.memory.textures--}let P=0;function L(t,r){let a=n.get(t);if(t.isVideoTexture&&function(e){let t=s.render.frame;m.get(e)!==t&&(m.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){let e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===e.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{B(a,t,r);return}}i.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+r)}let N={[c]:e.REPEAT,[u]:e.CLAMP_TO_EDGE,1002:e.MIRRORED_REPEAT},I={1003:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,1005:e.NEAREST_MIPMAP_LINEAR,1006:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,[d]:e.LINEAR_MIPMAP_LINEAR},O={512:e.NEVER,519:e.ALWAYS,513:e.LESS,515:e.LEQUAL,514:e.EQUAL,518:e.GEQUAL,516:e.GREATER,517:e.NOTEQUAL};function D(i,a){if(1015===a.type&&!1===t.has("OES_texture_float_linear")&&(1006===a.magFilter||1007===a.magFilter||1005===a.magFilter||a.magFilter===d||1006===a.minFilter||1007===a.minFilter||1005===a.minFilter||a.minFilter===d)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),e.texParameteri(i,e.TEXTURE_WRAP_S,N[a.wrapS]),e.texParameteri(i,e.TEXTURE_WRAP_T,N[a.wrapT]),(i===e.TEXTURE_3D||i===e.TEXTURE_2D_ARRAY)&&e.texParameteri(i,e.TEXTURE_WRAP_R,N[a.wrapR]),e.texParameteri(i,e.TEXTURE_MAG_FILTER,I[a.magFilter]),e.texParameteri(i,e.TEXTURE_MIN_FILTER,I[a.minFilter]),a.compareFunction&&(e.texParameteri(i,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(i,e.TEXTURE_COMPARE_FUNC,O[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")&&1003!==a.magFilter&&(1005===a.minFilter||a.minFilter===d)&&(1015!==a.type||!1!==t.has("OES_texture_float_linear"))&&(a.anisotropy>1||n.get(a).__currentAnisotropy)){let s=t.get("EXT_texture_filter_anisotropic");e.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),n.get(a).__currentAnisotropy=a.anisotropy}}function F(t,i){let n=!1;void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",A));let r=i.source,a=g.get(r);void 0===a&&(a={},g.set(r,a));let o=function(e){let t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(i);if(o!==t.__cacheKey){void 0===a[o]&&(a[o]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,n=!0),a[o].usedTimes++;let r=a[t.__cacheKey];void 0!==r&&(a[t.__cacheKey].usedTimes--,0===r.usedTimes&&R(i)),t.__cacheKey=o,t.__webglTexture=a[o].texture}return n}function B(t,s,o){let l=e.TEXTURE_2D;(s.isDataArrayTexture||s.isCompressedArrayTexture)&&(l=e.TEXTURE_2D_ARRAY),s.isData3DTexture&&(l=e.TEXTURE_3D);let h=F(t,s),c=s.source;i.bindTexture(l,t.__webglTexture,e.TEXTURE0+o);let u=n.get(c);if(c.version!==u.__version||!0===h){let t;i.activeTexture(e.TEXTURE0+o);let n=j.getPrimaries(j.workingColorSpace),d=""===s.colorSpace?null:j.getPrimaries(s.colorSpace),p=""===s.colorSpace||n===d?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,s.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,s.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,p);let f=b(s.image,!1,r.maxTextureSize);f=Y(s,f);let m=a.convert(s.format,s.colorSpace),g=a.convert(s.type),v=S(s.internalFormat,m,g,s.colorSpace,s.isVideoTexture);D(l,s);let y=s.mipmaps,_=!0!==s.isVideoTexture,x=void 0===u.__version||!0===h,A=c.dataReady,C=T(s,f);if(s.isDepthTexture)v=E(1027===s.format,s.type),x&&(_?i.texStorage2D(e.TEXTURE_2D,1,v,f.width,f.height):i.texImage2D(e.TEXTURE_2D,0,v,f.width,f.height,0,m,g,null));else if(s.isDataTexture){if(y.length>0){_&&x&&i.texStorage2D(e.TEXTURE_2D,C,v,y[0].width,y[0].height);for(let n=0,r=y.length;n<r;n++)t=y[n],_?A&&i.texSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,m,g,t.data):i.texImage2D(e.TEXTURE_2D,n,v,t.width,t.height,0,m,g,t.data);s.generateMipmaps=!1}else _?(x&&i.texStorage2D(e.TEXTURE_2D,C,v,f.width,f.height),A&&i.texSubImage2D(e.TEXTURE_2D,0,0,0,f.width,f.height,m,g,f.data)):i.texImage2D(e.TEXTURE_2D,0,v,f.width,f.height,0,m,g,f.data)}else if(s.isCompressedTexture){if(s.isCompressedArrayTexture){_&&x&&i.texStorage3D(e.TEXTURE_2D_ARRAY,C,v,y[0].width,y[0].height,f.depth);for(let n=0,r=y.length;n<r;n++)if(t=y[n],1023!==s.format){if(null!==m){if(_){if(A){if(s.layerUpdates.size>0){let r=rm(t.width,t.height,s.format,s.type);for(let a of s.layerUpdates){let s=t.data.subarray(a*r/t.data.BYTES_PER_ELEMENT,(a+1)*r/t.data.BYTES_PER_ELEMENT);i.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,n,0,0,a,t.width,t.height,1,m,s,0,0)}s.clearLayerUpdates()}else i.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,n,0,0,0,t.width,t.height,f.depth,m,t.data,0,0)}}else i.compressedTexImage3D(e.TEXTURE_2D_ARRAY,n,v,t.width,t.height,f.depth,0,t.data,0,0)}else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")}else _?A&&i.texSubImage3D(e.TEXTURE_2D_ARRAY,n,0,0,0,t.width,t.height,f.depth,m,g,t.data):i.texImage3D(e.TEXTURE_2D_ARRAY,n,v,t.width,t.height,f.depth,0,m,g,t.data)}else{_&&x&&i.texStorage2D(e.TEXTURE_2D,C,v,y[0].width,y[0].height);for(let n=0,r=y.length;n<r;n++)t=y[n],1023!==s.format?null!==m?_?A&&i.compressedTexSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,m,t.data):i.compressedTexImage2D(e.TEXTURE_2D,n,v,t.width,t.height,0,t.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_?A&&i.texSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,m,g,t.data):i.texImage2D(e.TEXTURE_2D,n,v,t.width,t.height,0,m,g,t.data)}}else if(s.isDataArrayTexture){if(_){if(x&&i.texStorage3D(e.TEXTURE_2D_ARRAY,C,v,f.width,f.height,f.depth),A){if(s.layerUpdates.size>0){let t=rm(f.width,f.height,s.format,s.type);for(let n of s.layerUpdates){let r=f.data.subarray(n*t/f.data.BYTES_PER_ELEMENT,(n+1)*t/f.data.BYTES_PER_ELEMENT);i.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,n,f.width,f.height,1,m,g,r)}s.clearLayerUpdates()}else i.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,f.width,f.height,f.depth,m,g,f.data)}}else i.texImage3D(e.TEXTURE_2D_ARRAY,0,v,f.width,f.height,f.depth,0,m,g,f.data)}else if(s.isData3DTexture)_?(x&&i.texStorage3D(e.TEXTURE_3D,C,v,f.width,f.height,f.depth),A&&i.texSubImage3D(e.TEXTURE_3D,0,0,0,0,f.width,f.height,f.depth,m,g,f.data)):i.texImage3D(e.TEXTURE_3D,0,v,f.width,f.height,f.depth,0,m,g,f.data);else if(s.isFramebufferTexture){if(x){if(_)i.texStorage2D(e.TEXTURE_2D,C,v,f.width,f.height);else{let t=f.width,n=f.height;for(let r=0;r<C;r++)i.texImage2D(e.TEXTURE_2D,r,v,t,n,0,m,g,null),t>>=1,n>>=1}}}else if(y.length>0){if(_&&x){let t=J(y[0]);i.texStorage2D(e.TEXTURE_2D,C,v,t.width,t.height)}for(let n=0,r=y.length;n<r;n++)t=y[n],_?A&&i.texSubImage2D(e.TEXTURE_2D,n,0,0,m,g,t):i.texImage2D(e.TEXTURE_2D,n,v,m,g,t);s.generateMipmaps=!1}else if(_){if(x){let t=J(f);i.texStorage2D(e.TEXTURE_2D,C,v,t.width,t.height)}A&&i.texSubImage2D(e.TEXTURE_2D,0,0,0,m,g,f)}else i.texImage2D(e.TEXTURE_2D,0,v,m,g,f);M(s)&&w(l),u.__version=c.version,s.onUpdate&&s.onUpdate(s)}t.__version=s.version}function k(t,r,s,o,h,c){let u=a.convert(s.format,s.colorSpace),d=a.convert(s.type),p=S(s.internalFormat,u,d,s.colorSpace);if(!n.get(r).__hasExternalTextures){let t=Math.max(1,r.width>>c),n=Math.max(1,r.height>>c);h===e.TEXTURE_3D||h===e.TEXTURE_2D_ARRAY?i.texImage3D(h,c,p,t,n,r.depth,0,u,d,null):i.texImage2D(h,c,p,t,n,0,u,d,null)}i.bindFramebuffer(e.FRAMEBUFFER,t),X(r)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,o,h,n.get(s).__webglTexture,0,q(r)):(h===e.TEXTURE_2D||h>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&h<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,o,h,n.get(s).__webglTexture,c),i.bindFramebuffer(e.FRAMEBUFFER,null)}function V(t,i,n){if(e.bindRenderbuffer(e.RENDERBUFFER,t),i.depthBuffer){let r=i.depthTexture,a=r&&r.isDepthTexture?r.type:null,s=E(i.stencilBuffer,a),o=i.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,h=q(i);X(i)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,h,s,i.width,i.height):n?e.renderbufferStorageMultisample(e.RENDERBUFFER,h,s,i.width,i.height):e.renderbufferStorage(e.RENDERBUFFER,s,i.width,i.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,o,e.RENDERBUFFER,t)}else{let t=i.textures;for(let r=0;r<t.length;r++){let s=t[r],o=a.convert(s.format,s.colorSpace),h=a.convert(s.type),c=S(s.internalFormat,o,h,s.colorSpace),u=q(i);n&&!1===X(i)?e.renderbufferStorageMultisample(e.RENDERBUFFER,u,c,i.width,i.height):X(i)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,c,i.width,i.height):e.renderbufferStorage(e.RENDERBUFFER,c,i.width,i.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function H(t){let r=n.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(e.FRAMEBUFFER,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),L(r.depthTexture,0);let a=n.get(r.depthTexture).__webglTexture,s=q(r);if(1026===r.depthTexture.format)X(r)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,s):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else if(1027===r.depthTexture.format)X(r)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,s):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0);else throw Error("Unknown depthTexture format")}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let n=0;n<6;n++)i.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[n]),r.__webglDepthbuffer[n]=e.createRenderbuffer(),V(r.__webglDepthbuffer[n],t,!1)}else i.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),V(r.__webglDepthbuffer,t,!1);i.bindFramebuffer(e.FRAMEBUFFER,null)}let G=[],W=[];function q(e){return Math.min(r.maxSamples,e.samples)}function X(e){let i=n.get(e);return e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function Y(e,t){let i=e.colorSpace,n=e.format,r=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||i!==f&&""!==i&&(j.getTransfer(i)===y?(1023!==n||1009!==r)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",i)),t}function J(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement?(p.width=e.naturalWidth||e.width,p.height=e.naturalHeight||e.height):"undefined"!=typeof VideoFrame&&e instanceof VideoFrame?(p.width=e.displayWidth,p.height=e.displayHeight):(p.width=e.width,p.height=e.height),p}this.allocateTextureUnit=function(){let e=P;return e>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+r.maxTextures),P+=1,e},this.resetTextureUnits=function(){P=0},this.setTexture2D=L,this.setTexture2DArray=function(t,r){let a=n.get(t);if(t.version>0&&a.__version!==t.version){B(a,t,r);return}i.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+r)},this.setTexture3D=function(t,r){let a=n.get(t);if(t.version>0&&a.__version!==t.version){B(a,t,r);return}i.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+r)},this.setTextureCube=function(t,s){let o=n.get(t);if(t.version>0&&o.__version!==t.version){(function(t,s,o){if(6!==s.image.length)return;let l=F(t,s),h=s.source;i.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+o);let c=n.get(h);if(h.version!==c.__version||!0===l){let t;i.activeTexture(e.TEXTURE0+o);let n=j.getPrimaries(j.workingColorSpace),u=""===s.colorSpace?null:j.getPrimaries(s.colorSpace),d=""===s.colorSpace||n===u?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,s.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,s.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=s.isCompressedTexture||s.image[0].isCompressedTexture,f=s.image[0]&&s.image[0].isDataTexture,m=[];for(let e=0;e<6;e++)p||f?m[e]=f?s.image[e].image:s.image[e]:m[e]=b(s.image[e],!0,r.maxCubemapSize),m[e]=Y(s,m[e]);let g=m[0],v=a.convert(s.format,s.colorSpace),y=a.convert(s.type),_=S(s.internalFormat,v,y,s.colorSpace),x=!0!==s.isVideoTexture,E=void 0===c.__version||!0===l,A=h.dataReady,C=T(s,g);if(D(e.TEXTURE_CUBE_MAP,s),p){x&&E&&i.texStorage2D(e.TEXTURE_CUBE_MAP,C,_,g.width,g.height);for(let n=0;n<6;n++){t=m[n].mipmaps;for(let r=0;r<t.length;r++){let a=t[r];1023!==s.format?null!==v?x?A&&i.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r,0,0,a.width,a.height,v,a.data):i.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r,_,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):x?A&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r,0,0,a.width,a.height,v,y,a.data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r,_,a.width,a.height,0,v,y,a.data)}}}else{if(t=s.mipmaps,x&&E){t.length>0&&C++;let n=J(m[0]);i.texStorage2D(e.TEXTURE_CUBE_MAP,C,_,n.width,n.height)}for(let n=0;n<6;n++)if(f){x?A&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,0,0,m[n].width,m[n].height,v,y,m[n].data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,_,m[n].width,m[n].height,0,v,y,m[n].data);for(let r=0;r<t.length;r++){let a=t[r].image[n].image;x?A&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r+1,0,0,a.width,a.height,v,y,a.data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r+1,_,a.width,a.height,0,v,y,a.data)}}else{x?A&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,0,0,v,y,m[n]):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,_,v,y,m[n]);for(let r=0;r<t.length;r++){let a=t[r];x?A&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r+1,0,0,v,y,a.image[n]):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r+1,_,v,y,a.image[n])}}}M(s)&&w(e.TEXTURE_CUBE_MAP),c.__version=h.version,s.onUpdate&&s.onUpdate(s)}t.__version=s.version})(o,t,s);return}i.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture,e.TEXTURE0+s)},this.rebindTextures=function(t,i,r){let a=n.get(t);void 0!==i&&k(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==r&&H(t)},this.setupRenderTarget=function(t){let r=t.texture,o=n.get(t),l=n.get(r);t.addEventListener("dispose",C);let h=t.textures,c=!0===t.isWebGLCubeRenderTarget,u=h.length>1;if(!u&&(void 0===l.__webglTexture&&(l.__webglTexture=e.createTexture()),l.__version=r.version,s.memory.textures++),c){o.__webglFramebuffer=[];for(let t=0;t<6;t++)if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer[t]=[];for(let i=0;i<r.mipmaps.length;i++)o.__webglFramebuffer[t][i]=e.createFramebuffer()}else o.__webglFramebuffer[t]=e.createFramebuffer()}else{if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer=[];for(let t=0;t<r.mipmaps.length;t++)o.__webglFramebuffer[t]=e.createFramebuffer()}else o.__webglFramebuffer=e.createFramebuffer();if(u)for(let t=0,i=h.length;t<i;t++){let i=n.get(h[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),s.memory.textures++)}if(t.samples>0&&!1===X(t)){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=[],i.bindFramebuffer(e.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let i=0;i<h.length;i++){let n=h[i];o.__webglColorRenderbuffer[i]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,o.__webglColorRenderbuffer[i]);let r=a.convert(n.format,n.colorSpace),s=a.convert(n.type),l=S(n.internalFormat,r,s,n.colorSpace,!0===t.isXRRenderTarget),c=q(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,c,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+i,e.RENDERBUFFER,o.__webglColorRenderbuffer[i])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),V(o.__webglDepthRenderbuffer,t,!0)),i.bindFramebuffer(e.FRAMEBUFFER,null)}}if(c){i.bindTexture(e.TEXTURE_CUBE_MAP,l.__webglTexture),D(e.TEXTURE_CUBE_MAP,r);for(let i=0;i<6;i++)if(r.mipmaps&&r.mipmaps.length>0)for(let n=0;n<r.mipmaps.length;n++)k(o.__webglFramebuffer[i][n],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+i,n);else k(o.__webglFramebuffer[i],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+i,0);M(r)&&w(e.TEXTURE_CUBE_MAP),i.unbindTexture()}else if(u){for(let r=0,a=h.length;r<a;r++){let a=h[r],s=n.get(a);i.bindTexture(e.TEXTURE_2D,s.__webglTexture),D(e.TEXTURE_2D,a),k(o.__webglFramebuffer,t,a,e.COLOR_ATTACHMENT0+r,e.TEXTURE_2D,0),M(a)&&w(e.TEXTURE_2D)}i.unbindTexture()}else{let n=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(n=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY),i.bindTexture(n,l.__webglTexture),D(n,r),r.mipmaps&&r.mipmaps.length>0)for(let i=0;i<r.mipmaps.length;i++)k(o.__webglFramebuffer[i],t,r,e.COLOR_ATTACHMENT0,n,i);else k(o.__webglFramebuffer,t,r,e.COLOR_ATTACHMENT0,n,0);M(r)&&w(n),i.unbindTexture()}t.depthBuffer&&H(t)},this.updateRenderTargetMipmap=function(t){let r=t.textures;for(let a=0,s=r.length;a<s;a++){let s=r[a];if(M(s)){let r=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=n.get(s).__webglTexture;i.bindTexture(r,a),w(r),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.samples>0){if(!1===X(t)){let r=t.textures,a=t.width,s=t.height,o=e.COLOR_BUFFER_BIT,l=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,c=n.get(t),u=r.length>1;if(u)for(let t=0;t<r.length;t++)i.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),i.bindFramebuffer(e.FRAMEBUFFER,c.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);i.bindFramebuffer(e.READ_FRAMEBUFFER,c.__webglMultisampledFramebuffer),i.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglFramebuffer);for(let i=0;i<r.length;i++){if(t.resolveDepthBuffer&&(t.depthBuffer&&(o|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&t.resolveStencilBuffer&&(o|=e.STENCIL_BUFFER_BIT)),u){e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,c.__webglColorRenderbuffer[i]);let t=n.get(r[i]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,s,0,0,a,s,o,e.NEAREST),!0===h&&(G.length=0,W.length=0,G.push(e.COLOR_ATTACHMENT0+i),t.depthBuffer&&!1===t.resolveDepthBuffer&&(G.push(l),W.push(l),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,W)),e.invalidateFramebuffer(e.READ_FRAMEBUFFER,G))}if(i.bindFramebuffer(e.READ_FRAMEBUFFER,null),i.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),u)for(let t=0;t<r.length;t++){i.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,c.__webglColorRenderbuffer[t]);let a=n.get(r[t]).__webglTexture;i.bindFramebuffer(e.FRAMEBUFFER,c.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}i.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglMultisampledFramebuffer)}else if(t.depthBuffer&&!1===t.resolveDepthBuffer&&h){let i=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[i])}}},this.setupDepthRenderbuffer=H,this.setupFrameBufferTexture=k,this.useMultisampledRTT=X}function rv(e,t){return{convert:function(i,n=""){let r;let a=j.getTransfer(n);if(1009===i)return e.UNSIGNED_BYTE;if(1017===i)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===i)return e.UNSIGNED_SHORT_5_5_5_1;if(35902===i)return e.UNSIGNED_INT_5_9_9_9_REV;if(1010===i)return e.BYTE;if(1011===i)return e.SHORT;if(1012===i)return e.UNSIGNED_SHORT;if(1013===i)return e.INT;if(1014===i)return e.UNSIGNED_INT;if(1015===i)return e.FLOAT;if(1016===i)return e.HALF_FLOAT;if(1021===i)return e.ALPHA;if(1022===i)return e.RGB;if(1023===i)return e.RGBA;if(1024===i)return e.LUMINANCE;if(1025===i)return e.LUMINANCE_ALPHA;if(1026===i)return e.DEPTH_COMPONENT;if(1027===i)return e.DEPTH_STENCIL;if(1028===i)return e.RED;if(1029===i)return e.RED_INTEGER;if(1030===i)return e.RG;if(1031===i)return e.RG_INTEGER;if(1033===i)return e.RGBA_INTEGER;if(33776===i||33777===i||33778===i||33779===i){if(a===y){if(null===(r=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===i)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===i)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===i)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===i)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(r=t.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===i)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===i)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===i)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===i)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(35840===i||35841===i||35842===i||35843===i){if(null===(r=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===i)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===i)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===i)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===i)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===i||37492===i||37496===i){if(null===(r=t.get("WEBGL_compressed_texture_etc")))return null;if(36196===i||37492===i)return a===y?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(37496===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(37808===i||37809===i||37810===i||37811===i||37812===i||37813===i||37814===i||37815===i||37816===i||37817===i||37818===i||37819===i||37820===i||37821===i){if(null===(r=t.get("WEBGL_compressed_texture_astc")))return null;if(37808===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===i)return a===y?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===i||36494===i||36495===i){if(null===(r=t.get("EXT_texture_compression_bptc")))return null;if(36492===i)return a===y?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===i)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===i)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===i||36284===i||36285===i||36286===i){if(null===(r=t.get("EXT_texture_compression_rgtc")))return null;if(36492===i)return r.COMPRESSED_RED_RGTC1_EXT;if(36284===i)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===i)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===i)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return 1020===i?e.UNSIGNED_INT_24_8:void 0!==e[i]?e[i]:null}}}class ry extends t8{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class r_ extends e8{constructor(){super(),this.isGroup=!0,this.type="Group"}}let rx={type:"move"};class rb{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new r_,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new r_,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ea,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ea),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new r_,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ea,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ea),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){let t=this._hand;if(t)for(let i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){for(let n of(a=!0,e.hand.values())){let e=t.getJointPose(n,i),r=this._getHandJoint(l,n);null!==e&&(r.matrix.fromArray(e.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,r.jointRadius=e.radius),r.visible=null!==e}let n=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],s=n.position.distanceTo(r.position);l.inputState.pinching&&s>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&s<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,i))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1);null!==s&&(null===(n=t.getPose(e.targetRaySpace,i))&&null!==r&&(n=r),null!==n&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,n.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(n.linearVelocity)):s.hasLinearVelocity=!1,n.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(n.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(rx)))}return null!==s&&(s.visible=null!==n),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){let i=new r_;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}let rM=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,rw=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class rS{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(null===this.texture){let n=new $;e.properties.get(n).__webglTexture=t.texture,(t.depthNear!=i.depthNear||t.depthFar!=i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(null!==this.texture&&null===this.mesh){let t=e.cameras[0].viewport,i=new t3({vertexShader:rM,fragmentShader:rw,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new tZ(new id(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class rE extends M{constructor(e,t){super();let i=this,n=null,r=1,a=null,s="local-floor",o=1,l=null,h=null,c=null,u=null,d=null,p=null,f=new rS,m=t.getContextAttributes(),g=null,v=null,y=[],_=[],x=new U,b=null,M=new t8;M.layers.enable(1),M.viewport=new ee;let w=new t8;w.layers.enable(2),w.viewport=new ee;let S=[M,w],E=new ry;E.layers.enable(1),E.layers.enable(2);let A=null,C=null;function R(e){let t=_.indexOf(e.inputSource);if(-1===t)return;let i=y[t];void 0!==i&&(i.update(e.inputSource,e.frame,l||a),i.dispatchEvent({type:e.type,data:e.inputSource}))}function P(){n.removeEventListener("select",R),n.removeEventListener("selectstart",R),n.removeEventListener("selectend",R),n.removeEventListener("squeeze",R),n.removeEventListener("squeezestart",R),n.removeEventListener("squeezeend",R),n.removeEventListener("end",P),n.removeEventListener("inputsourceschange",L);for(let e=0;e<y.length;e++){let t=_[e];null!==t&&(_[e]=null,y[e].disconnect(t))}A=null,C=null,f.reset(),e.setRenderTarget(g),d=null,u=null,c=null,n=null,v=null,F.stop(),i.isPresenting=!1,e.setPixelRatio(b),e.setSize(x.width,x.height,!1),i.dispatchEvent({type:"sessionend"})}function L(e){for(let t=0;t<e.removed.length;t++){let i=e.removed[t],n=_.indexOf(i);n>=0&&(_[n]=null,y[n].disconnect(i))}for(let t=0;t<e.added.length;t++){let i=e.added[t],n=_.indexOf(i);if(-1===n){for(let e=0;e<y.length;e++){if(e>=_.length){_.push(i),n=e;break}if(null===_[e]){_[e]=i,n=e;break}}if(-1===n)break}let r=y[n];r&&r.connect(i)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=y[e];return void 0===t&&(t=new rb,y[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=y[e];return void 0===t&&(t=new rb,y[e]=t),t.getGripSpace()},this.getHand=function(e){let t=y[e];return void 0===t&&(t=new rb,y[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==u?u:d},this.getBinding=function(){return c},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(h){if(null!==(n=h)){if(g=e.getRenderTarget(),n.addEventListener("select",R),n.addEventListener("selectstart",R),n.addEventListener("selectend",R),n.addEventListener("squeeze",R),n.addEventListener("squeezestart",R),n.addEventListener("squeezeend",R),n.addEventListener("end",P),n.addEventListener("inputsourceschange",L),!0!==m.xrCompatible&&await t.makeXRCompatible(),b=e.getPixelRatio(),e.getSize(x),void 0===n.renderState.layers){let i={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(n,t,i),n.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),v=new ei(d.framebufferWidth,d.framebufferHeight,{format:1023,type:1009,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}else{let i=null,a=null,s=null;m.depth&&(s=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,i=m.stencil?1027:1026,a=m.stencil?1020:1014);let o={colorFormat:t.RGBA8,depthFormat:s,scaleFactor:r};u=(c=new XRWebGLBinding(n,t)).createProjectionLayer(o),n.updateRenderState({layers:[u]}),e.setPixelRatio(1),e.setSize(u.textureWidth,u.textureHeight,!1),v=new ei(u.textureWidth,u.textureHeight,{format:1023,type:1009,depthTexture:new iZ(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:!1===u.ignoreDepthValues})}v.isXRRenderTarget=!0,this.setFoveation(o),l=null,a=await n.requestReferenceSpace(s),F.setContext(n),F.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==n)return n.environmentBlendMode},this.getDepthTexture=function(){return f.getDepthTexture()};let N=new ea,I=new ea;function O(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===n)return;null!==f.texture&&(e.near=f.depthNear,e.far=f.depthFar),E.near=w.near=M.near=e.near,E.far=w.far=M.far=e.far,(A!==E.near||C!==E.far)&&(n.updateRenderState({depthNear:E.near,depthFar:E.far}),A=E.near,C=E.far,M.near=A,M.far=C,w.near=A,w.far=C,M.updateProjectionMatrix(),w.updateProjectionMatrix(),e.updateProjectionMatrix());let t=e.parent,i=E.cameras;O(E,t);for(let e=0;e<i.length;e++)O(i[e],t);2===i.length?function(e,t,i){N.setFromMatrixPosition(t.matrixWorld),I.setFromMatrixPosition(i.matrixWorld);let n=N.distanceTo(I),r=t.projectionMatrix.elements,a=i.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],h=(r[9]-1)/r[5],c=(r[8]-1)/r[0],u=(a[8]+1)/a[0],d=n/(-c+u),p=-(d*c);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let f=s+d,m=o+d;e.projectionMatrix.makePerspective(s*c-p,s*u+(n-p),l*o/m*f,h*o/m*f,f,m),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(E,M,w):E.projectionMatrix.copy(M.projectionMatrix),null===t?e.matrix.copy(E.matrixWorld):(e.matrix.copy(t.matrixWorld),e.matrix.invert(),e.matrix.multiply(E.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(E.projectionMatrix),e.projectionMatrixInverse.copy(E.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*T*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)},this.getCamera=function(){return E},this.getFoveation=function(){if(null!==u||null!==d)return o},this.setFoveation=function(e){o=e,null!==u&&(u.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)},this.hasDepthSensing=function(){return null!==f.texture},this.getDepthSensingMesh=function(){return f.getMesh(E)};let D=null,F=new ic;F.setAnimationLoop(function(t,r){if(h=r.getViewerPose(l||a),p=r,null!==h){let t=h.views;null!==d&&(e.setRenderTargetFramebuffer(v,d.framebuffer),e.setRenderTarget(v));let i=!1;t.length!==E.cameras.length&&(E.cameras.length=0,i=!0);for(let n=0;n<t.length;n++){let r=t[n],a=null;if(null!==d)a=d.getViewport(r);else{let t=c.getViewSubImage(u,r);a=t.viewport,0===n&&(e.setRenderTargetTextures(v,t.colorTexture,u.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(v))}let s=S[n];void 0===s&&((s=new t8).layers.enable(n),s.viewport=new ee,S[n]=s),s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.quaternion,s.scale),s.projectionMatrix.fromArray(r.projectionMatrix),s.projectionMatrixInverse.copy(s.projectionMatrix).invert(),s.viewport.set(a.x,a.y,a.width,a.height),0===n&&(E.matrix.copy(s.matrix),E.matrix.decompose(E.position,E.quaternion,E.scale)),!0===i&&E.cameras.push(s)}let r=n.enabledFeatures;if(r&&r.includes("depth-sensing")){let i=c.getDepthInformation(t[0]);i&&i.isValid&&i.texture&&f.init(e,i,n.renderState)}}for(let e=0;e<y.length;e++){let t=_[e],i=y[e];null!==t&&void 0!==i&&i.update(t,r,l||a)}D&&D(t,r),r.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:r}),p=null}),this.setAnimationLoop=function(e){D=e},this.dispose=function(){}}}let rT=new ej,rA=new eO;function rC(e,t){function i(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function n(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map,i(n.map,e.mapTransform)),n.alphaMap&&(e.alphaMap.value=n.alphaMap,i(n.alphaMap,e.alphaMapTransform)),n.bumpMap&&(e.bumpMap.value=n.bumpMap,i(n.bumpMap,e.bumpMapTransform),e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,i(n.normalMap,e.normalMapTransform),e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,i(n.displacementMap,e.displacementMapTransform),e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap,i(n.emissiveMap,e.emissiveMapTransform)),n.specularMap&&(e.specularMap.value=n.specularMap,i(n.specularMap,e.specularMapTransform)),n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);let r=t.get(n),a=r.envMap,s=r.envMapRotation;a&&(e.envMap.value=a,rT.copy(s),rT.x*=-1,rT.y*=-1,rT.z*=-1,a.isCubeTexture&&!1===a.isRenderTargetTexture&&(rT.y*=-1,rT.z*=-1),e.envMapRotation.value.setFromMatrix4(rA.makeRotationFromEuler(rT)),e.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,e.reflectivity.value=n.reflectivity,e.ior.value=n.ior,e.refractionRatio.value=n.refractionRatio),n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity,i(n.lightMap,e.lightMapTransform)),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity,i(n.aoMap,e.aoMapTransform))}return{refreshFogUniforms:function(t,i){i.color.getRGB(t.fogColor.value,t1(e)),i.isFog?(t.fogNear.value=i.near,t.fogFar.value=i.far):i.isFogExp2&&(t.fogDensity.value=i.density)},refreshMaterialUniforms:function(e,r,a,s,o){r.isMeshBasicMaterial?n(e,r):r.isMeshLambertMaterial?n(e,r):r.isMeshToonMaterial?(n(e,r),r.gradientMap&&(e.gradientMap.value=r.gradientMap)):r.isMeshPhongMaterial?(n(e,r),e.specular.value.copy(r.specular),e.shininess.value=Math.max(r.shininess,1e-4)):r.isMeshStandardMaterial?(n(e,r),e.metalness.value=r.metalness,r.metalnessMap&&(e.metalnessMap.value=r.metalnessMap,i(r.metalnessMap,e.metalnessMapTransform)),e.roughness.value=r.roughness,r.roughnessMap&&(e.roughnessMap.value=r.roughnessMap,i(r.roughnessMap,e.roughnessMapTransform)),r.envMap&&(e.envMapIntensity.value=r.envMapIntensity),r.isMeshPhysicalMaterial&&(e.ior.value=r.ior,r.sheen>0&&(e.sheenColor.value.copy(r.sheenColor).multiplyScalar(r.sheen),e.sheenRoughness.value=r.sheenRoughness,r.sheenColorMap&&(e.sheenColorMap.value=r.sheenColorMap,i(r.sheenColorMap,e.sheenColorMapTransform)),r.sheenRoughnessMap&&(e.sheenRoughnessMap.value=r.sheenRoughnessMap,i(r.sheenRoughnessMap,e.sheenRoughnessMapTransform))),r.clearcoat>0&&(e.clearcoat.value=r.clearcoat,e.clearcoatRoughness.value=r.clearcoatRoughness,r.clearcoatMap&&(e.clearcoatMap.value=r.clearcoatMap,i(r.clearcoatMap,e.clearcoatMapTransform)),r.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=r.clearcoatRoughnessMap,i(r.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),r.clearcoatNormalMap&&(e.clearcoatNormalMap.value=r.clearcoatNormalMap,i(r.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(r.clearcoatNormalScale),1===r.side&&e.clearcoatNormalScale.value.negate())),r.dispersion>0&&(e.dispersion.value=r.dispersion),r.iridescence>0&&(e.iridescence.value=r.iridescence,e.iridescenceIOR.value=r.iridescenceIOR,e.iridescenceThicknessMinimum.value=r.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=r.iridescenceThicknessRange[1],r.iridescenceMap&&(e.iridescenceMap.value=r.iridescenceMap,i(r.iridescenceMap,e.iridescenceMapTransform)),r.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=r.iridescenceThicknessMap,i(r.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),r.transmission>0&&(e.transmission.value=r.transmission,e.transmissionSamplerMap.value=o.texture,e.transmissionSamplerSize.value.set(o.width,o.height),r.transmissionMap&&(e.transmissionMap.value=r.transmissionMap,i(r.transmissionMap,e.transmissionMapTransform)),e.thickness.value=r.thickness,r.thicknessMap&&(e.thicknessMap.value=r.thicknessMap,i(r.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=r.attenuationDistance,e.attenuationColor.value.copy(r.attenuationColor)),r.anisotropy>0&&(e.anisotropyVector.value.set(r.anisotropy*Math.cos(r.anisotropyRotation),r.anisotropy*Math.sin(r.anisotropyRotation)),r.anisotropyMap&&(e.anisotropyMap.value=r.anisotropyMap,i(r.anisotropyMap,e.anisotropyMapTransform))),e.specularIntensity.value=r.specularIntensity,e.specularColor.value.copy(r.specularColor),r.specularColorMap&&(e.specularColorMap.value=r.specularColorMap,i(r.specularColorMap,e.specularColorMapTransform)),r.specularIntensityMap&&(e.specularIntensityMap.value=r.specularIntensityMap,i(r.specularIntensityMap,e.specularIntensityMapTransform)))):r.isMeshMatcapMaterial?(n(e,r),r.matcap&&(e.matcap.value=r.matcap)):r.isMeshDepthMaterial?n(e,r):r.isMeshDistanceMaterial?(n(e,r),function(e,i){let n=t.get(i).light;e.referencePosition.value.setFromMatrixPosition(n.matrixWorld),e.nearDistance.value=n.shadow.camera.near,e.farDistance.value=n.shadow.camera.far}(e,r)):r.isMeshNormalMaterial?n(e,r):r.isLineBasicMaterial?(e.diffuse.value.copy(r.color),e.opacity.value=r.opacity,r.map&&(e.map.value=r.map,i(r.map,e.mapTransform)),r.isLineDashedMaterial&&(e.dashSize.value=r.dashSize,e.totalSize.value=r.dashSize+r.gapSize,e.scale.value=r.scale)):r.isPointsMaterial?(e.diffuse.value.copy(r.color),e.opacity.value=r.opacity,e.size.value=r.size*a,e.scale.value=.5*s,r.map&&(e.map.value=r.map,i(r.map,e.uvTransform)),r.alphaMap&&(e.alphaMap.value=r.alphaMap,i(r.alphaMap,e.alphaMapTransform)),r.alphaTest>0&&(e.alphaTest.value=r.alphaTest)):r.isSpriteMaterial?(e.diffuse.value.copy(r.color),e.opacity.value=r.opacity,e.rotation.value=r.rotation,r.map&&(e.map.value=r.map,i(r.map,e.mapTransform)),r.alphaMap&&(e.alphaMap.value=r.alphaMap,i(r.alphaMap,e.alphaMapTransform)),r.alphaTest>0&&(e.alphaTest.value=r.alphaTest)):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function rR(e,t,i,n){let r={},a={},s=[],o=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS);function l(e){let t={boundary:0,storage:0};return"number"==typeof e||"boolean"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function h(t){let i=t.target;i.removeEventListener("dispose",h);let n=s.indexOf(i.__bindingPointIndex);s.splice(n,1),e.deleteBuffer(r[i.id]),delete r[i.id],delete a[i.id]}return{bind:function(e,t){let i=t.program;n.uniformBlockBinding(e,i)},update:function(i,c){let u=r[i.id];void 0===u&&(function(e){let t=e.uniforms,i=0;for(let e=0,n=t.length;e<n;e++){let n=Array.isArray(t[e])?t[e]:[t[e]];for(let e=0,t=n.length;e<t;e++){let t=n[e],r=Array.isArray(t.value)?t.value:[t.value];for(let e=0,n=r.length;e<n;e++){let n=l(r[e]),a=i%16;0!==a&&16-a<n.boundary&&(i+=16-a),t.__data=new Float32Array(n.storage/Float32Array.BYTES_PER_ELEMENT),t.__offset=i,i+=n.storage}}}let n=i%16;n>0&&(i+=16-n),e.__size=i,e.__cache={}}(i),u=function(t){let i=function(){for(let e=0;e<o;e++)if(-1===s.indexOf(e))return s.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=i;let n=e.createBuffer(),r=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,n),e.bufferData(e.UNIFORM_BUFFER,r,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,i,n),n}(i),r[i.id]=u,i.addEventListener("dispose",h));let d=c.program;n.updateUBOMapping(i,d);let p=t.render.frame;a[i.id]!==p&&(function(t){let i=r[t.id],n=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,i);for(let t=0,i=n.length;t<i;t++){let i=Array.isArray(n[t])?n[t]:[n[t]];for(let n=0,r=i.length;n<r;n++){let r=i[n];if(!0===function(e,t,i,n){let r=e.value,a=t+"_"+i;if(void 0===n[a])return"number"==typeof r||"boolean"==typeof r?n[a]=r:n[a]=r.clone(),!0;{let e=n[a];if("number"==typeof r||"boolean"==typeof r){if(e!==r)return n[a]=r,!0}else if(!1===e.equals(r))return e.copy(r),!0}return!1}(r,t,n,a)){let t=r.__offset,i=Array.isArray(r.value)?r.value:[r.value],n=0;for(let a=0;a<i.length;a++){let s=i[a],o=l(s);"number"==typeof s||"boolean"==typeof s?(r.__data[0]=s,e.bufferSubData(e.UNIFORM_BUFFER,t+n,r.__data)):s.isMatrix3?(r.__data[0]=s.elements[0],r.__data[1]=s.elements[1],r.__data[2]=s.elements[2],r.__data[3]=0,r.__data[4]=s.elements[3],r.__data[5]=s.elements[4],r.__data[6]=s.elements[5],r.__data[7]=0,r.__data[8]=s.elements[6],r.__data[9]=s.elements[7],r.__data[10]=s.elements[8],r.__data[11]=0):(s.toArray(r.__data,n),n+=o.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,r.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(i),a[i.id]=p)},dispose:function(){for(let t in r)e.deleteBuffer(r[t]);s=[],r={},a={}}}}class rP{constructor(e={}){let t,i,n,r,a,s,h,c,u,m,g,v,y,_,x,b,M,w,S,E,T,A,C,R,P;let{canvas:L=function(){let e=z("canvas");return e.style.display="block",e}(),context:N=null,depth:I=!0,stencil:U=!1,alpha:O=!1,antialias:D=!1,premultipliedAlpha:F=!0,preserveDrawingBuffer:B=!1,powerPreference:k="default",failIfMajorPerformanceCaveat:V=!1}=e;if(this.isWebGLRenderer=!0,null!==N){if("undefined"!=typeof WebGLRenderingContext&&N instanceof WebGLRenderingContext)throw Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");t=N.getContextAttributes().alpha}else t=O;let H=new Uint32Array(4),G=new Int32Array(4),W=null,q=null,X=[],Y=[];this.domElement=L,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=p,this.toneMapping=0,this.toneMappingExposure=1;let J=this,Z=!1,K=0,Q=0,$=null,et=-1,en=null,er=new ee,es=new ee,eo=null,el=new tf(0),eh=0,ec=L.width,eu=L.height,ed=1,ep=null,ef=null,em=new ee(0,0,ec,eu),eg=new ee(0,0,ec,eu),ev=!1,ey=new ih,e_=!1,ex=!1,eb=new eO,eM=new ea,ew=new ee,eS={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0},eE=!1;function eT(){return null===$?ed:1}let eA=N;function eC(e,t){return L.getContext(e,t)}try{if("setAttribute"in L&&L.setAttribute("data-engine","three.js r166"),L.addEventListener("webglcontextlost",eL,!1),L.addEventListener("webglcontextrestored",eN,!1),L.addEventListener("webglcontextcreationerror",eI,!1),null===eA){let e="webgl2";if(eA=eC(e,{alpha:!0,depth:I,stencil:U,antialias:D,premultipliedAlpha:F,preserveDrawingBuffer:B,powerPreference:k,failIfMajorPerformanceCaveat:V}),null===eA){if(eC(e))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function eR(){(i=new iW(eA)).init(),C=new rv(eA,i),n=new iw(eA,i,e,C),r=new rf(eA),a=new iX(eA),s=new re,h=new rg(eA,i,r,s,n,C,a),c=new iE(J),u=new iG(J),m=new iu(eA),R=new ib(eA,m),g=new ij(eA,m,a,R),v=new iJ(eA,g,m,a),E=new iY(eA,n,h),M=new iS(s),y=new n9(J,c,u,i,n,R,M),_=new rC(J,s),x=new rr,b=new rc(i),S=new ix(J,c,u,r,v,t,F),w=new rp(J,v,n),P=new rR(eA,a,n,r),T=new iM(eA,i,a),A=new iq(eA,i,a),a.programs=y.programs,J.capabilities=n,J.extensions=i,J.properties=s,J.renderLists=x,J.shadowMap=w,J.state=r,J.info=a}eR();let eP=new rE(J,eA);function eL(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),Z=!0}function eN(){console.log("THREE.WebGLRenderer: Context Restored."),Z=!1;let e=a.autoReset,t=w.enabled,i=w.autoUpdate,n=w.needsUpdate,r=w.type;eR(),a.autoReset=e,w.enabled=t,w.autoUpdate=i,w.needsUpdate=n,w.type=r}function eI(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function eU(e){let t=e.target;t.removeEventListener("dispose",eU),function(e){let t=s.get(e).programs;void 0!==t&&(t.forEach(function(e){y.releaseProgram(e)}),e.isShaderMaterial&&y.releaseShaderCache(e))}(t),s.remove(t)}function eD(e,t,i){!0===e.transparent&&e.side===l&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,eq(e,t,i),e.side=o,e.needsUpdate=!0,eq(e,t,i),e.side=l):eq(e,t,i)}this.xr=eP,this.getContext=function(){return eA},this.getContextAttributes=function(){return eA.getContextAttributes()},this.forceContextLoss=function(){let e=i.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=i.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return ed},this.setPixelRatio=function(e){void 0!==e&&(ed=e,this.setSize(ec,eu,!1))},this.getSize=function(e){return e.set(ec,eu)},this.setSize=function(e,t,i=!0){if(eP.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ec=e,eu=t,L.width=Math.floor(e*ed),L.height=Math.floor(t*ed),!0===i&&(L.style.width=e+"px",L.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return e.set(ec*ed,eu*ed).floor()},this.setDrawingBufferSize=function(e,t,i){ec=e,eu=t,ed=i,L.width=Math.floor(e*i),L.height=Math.floor(t*i),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(er)},this.getViewport=function(e){return e.copy(em)},this.setViewport=function(e,t,i,n){e.isVector4?em.set(e.x,e.y,e.z,e.w):em.set(e,t,i,n),r.viewport(er.copy(em).multiplyScalar(ed).round())},this.getScissor=function(e){return e.copy(eg)},this.setScissor=function(e,t,i,n){e.isVector4?eg.set(e.x,e.y,e.z,e.w):eg.set(e,t,i,n),r.scissor(es.copy(eg).multiplyScalar(ed).round())},this.getScissorTest=function(){return ev},this.setScissorTest=function(e){r.setScissorTest(ev=e)},this.setOpaqueSort=function(e){ep=e},this.setTransparentSort=function(e){ef=e},this.getClearColor=function(e){return e.copy(S.getClearColor())},this.setClearColor=function(){S.setClearColor.apply(S,arguments)},this.getClearAlpha=function(){return S.getClearAlpha()},this.setClearAlpha=function(){S.setClearAlpha.apply(S,arguments)},this.clear=function(e=!0,t=!0,i=!0){let n=0;if(e){let e=!1;if(null!==$){let t=$.texture.format;e=1033===t||1031===t||1029===t}if(e){let e=$.texture.type,t=S.getClearColor(),i=S.getClearAlpha(),n=t.r,r=t.g,a=t.b;1009===e||1014===e||1012===e||1020===e||1017===e||1018===e?(H[0]=n,H[1]=r,H[2]=a,H[3]=i,eA.clearBufferuiv(eA.COLOR,0,H)):(G[0]=n,G[1]=r,G[2]=a,G[3]=i,eA.clearBufferiv(eA.COLOR,0,G))}else n|=eA.COLOR_BUFFER_BIT}t&&(n|=eA.DEPTH_BUFFER_BIT),i&&(n|=eA.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),eA.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){L.removeEventListener("webglcontextlost",eL,!1),L.removeEventListener("webglcontextrestored",eN,!1),L.removeEventListener("webglcontextcreationerror",eI,!1),x.dispose(),b.dispose(),s.dispose(),c.dispose(),u.dispose(),v.dispose(),R.dispose(),P.dispose(),y.dispose(),eP.dispose(),eP.removeEventListener("sessionstart",ez),eP.removeEventListener("sessionend",eB),ek.stop()},this.renderBufferDirect=function(e,t,a,o,l,d){let p;null===t&&(t=eS);let v=l.isMesh&&0>l.matrixWorld.determinant(),y=function(e,t,i,a,o){var l;!0!==t.isScene&&(t=eS),h.resetTextureUnits();let d=t.fog,p=a.isMeshStandardMaterial?t.environment:null,m=null===$?J.outputColorSpace:!0===$.isXRRenderTarget?$.texture.colorSpace:f,g=(a.isMeshStandardMaterial?u:c).get(a.envMap||p),v=!0===a.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,y=!!i.attributes.tangent&&(!!a.normalMap||a.anisotropy>0),x=!!i.morphAttributes.position,b=!!i.morphAttributes.normal,w=!!i.morphAttributes.color,S=0;a.toneMapped&&(null===$||!0===$.isXRRenderTarget)&&(S=J.toneMapping);let T=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,A=void 0!==T?T.length:0,C=s.get(a),R=q.state.lights;if(!0===e_&&(!0===ex||e!==en)){let t=e===en&&a.id===et;M.setState(a,e,t)}let L=!1;a.version===C.__version?C.needsLights&&C.lightsStateVersion!==R.state.version?L=!0:C.outputColorSpace!==m?L=!0:o.isBatchedMesh&&!1===C.batching?L=!0:o.isBatchedMesh||!0!==C.batching?o.isBatchedMesh&&!0===C.batchingColor&&null===o.colorTexture?L=!0:o.isBatchedMesh&&!1===C.batchingColor&&null!==o.colorTexture?L=!0:o.isInstancedMesh&&!1===C.instancing?L=!0:o.isInstancedMesh||!0!==C.instancing?o.isSkinnedMesh&&!1===C.skinning?L=!0:o.isSkinnedMesh||!0!==C.skinning?o.isInstancedMesh&&!0===C.instancingColor&&null===o.instanceColor?L=!0:o.isInstancedMesh&&!1===C.instancingColor&&null!==o.instanceColor?L=!0:o.isInstancedMesh&&!0===C.instancingMorph&&null===o.morphTexture?L=!0:o.isInstancedMesh&&!1===C.instancingMorph&&null!==o.morphTexture?L=!0:C.envMap!==g?L=!0:!0===a.fog&&C.fog!==d?L=!0:void 0!==C.numClippingPlanes&&(C.numClippingPlanes!==M.numPlanes||C.numIntersection!==M.numIntersection)?L=!0:C.vertexAlphas!==v?L=!0:C.vertexTangents!==y?L=!0:C.morphTargets!==x?L=!0:C.morphNormals!==b?L=!0:C.morphColors!==w?L=!0:C.toneMapping!==S?L=!0:C.morphTargetsCount!==A&&(L=!0):L=!0:L=!0:L=!0:(L=!0,C.__version=a.version);let N=C.currentProgram;!0===L&&(N=eq(a,t,o));let I=!1,U=!1,O=!1,D=N.getUniforms(),F=C.uniforms;if(r.useProgram(N.program)&&(I=!0,U=!0,O=!0),a.id!==et&&(et=a.id,U=!0),I||en!==e){D.setValue(eA,"projectionMatrix",e.projectionMatrix),D.setValue(eA,"viewMatrix",e.matrixWorldInverse);let t=D.map.cameraPosition;void 0!==t&&t.setValue(eA,eM.setFromMatrixPosition(e.matrixWorld)),n.logarithmicDepthBuffer&&D.setValue(eA,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&D.setValue(eA,"isOrthographic",!0===e.isOrthographicCamera),en!==e&&(en=e,U=!0,O=!0)}if(o.isSkinnedMesh){D.setOptional(eA,o,"bindMatrix"),D.setOptional(eA,o,"bindMatrixInverse");let e=o.skeleton;e&&(null===e.boneTexture&&e.computeBoneTexture(),D.setValue(eA,"boneTexture",e.boneTexture,h))}o.isBatchedMesh&&(D.setOptional(eA,o,"batchingTexture"),D.setValue(eA,"batchingTexture",o._matricesTexture,h),D.setOptional(eA,o,"batchingIdTexture"),D.setValue(eA,"batchingIdTexture",o._indirectTexture,h),D.setOptional(eA,o,"batchingColorTexture"),null!==o._colorsTexture&&D.setValue(eA,"batchingColorTexture",o._colorsTexture,h));let z=i.morphAttributes;if((void 0!==z.position||void 0!==z.normal||void 0!==z.color)&&E.update(o,i,N),(U||C.receiveShadow!==o.receiveShadow)&&(C.receiveShadow=o.receiveShadow,D.setValue(eA,"receiveShadow",o.receiveShadow)),a.isMeshGouraudMaterial&&null!==a.envMap&&(F.envMap.value=g,F.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1),a.isMeshStandardMaterial&&null===a.envMap&&null!==t.environment&&(F.envMapIntensity.value=t.environmentIntensity),U&&(D.setValue(eA,"toneMappingExposure",J.toneMappingExposure),C.needsLights&&(l=O,F.ambientLightColor.needsUpdate=l,F.lightProbe.needsUpdate=l,F.directionalLights.needsUpdate=l,F.directionalLightShadows.needsUpdate=l,F.pointLights.needsUpdate=l,F.pointLightShadows.needsUpdate=l,F.spotLights.needsUpdate=l,F.spotLightShadows.needsUpdate=l,F.rectAreaLights.needsUpdate=l,F.hemisphereLights.needsUpdate=l),d&&!0===a.fog&&_.refreshFogUniforms(F,d),_.refreshMaterialUniforms(F,a,ed,eu,q.state.transmissionRenderTarget[e.id]),nW.upload(eA,eX(C),F,h)),a.isShaderMaterial&&!0===a.uniformsNeedUpdate&&(nW.upload(eA,eX(C),F,h),a.uniformsNeedUpdate=!1),a.isSpriteMaterial&&D.setValue(eA,"center",o.center),D.setValue(eA,"modelViewMatrix",o.modelViewMatrix),D.setValue(eA,"normalMatrix",o.normalMatrix),D.setValue(eA,"modelMatrix",o.matrixWorld),a.isShaderMaterial||a.isRawShaderMaterial){let e=a.uniformsGroups;for(let t=0,i=e.length;t<i;t++){let i=e[t];P.update(i,N),P.bind(i,N)}}return N}(e,t,a,o,l);r.setMaterial(o,v);let x=a.index,b=1;if(!0===o.wireframe){if(void 0===(x=g.getWireframeAttribute(a)))return;b=2}let w=a.drawRange,S=a.attributes.position,C=w.start*b,L=(w.start+w.count)*b;null!==d&&(C=Math.max(C,d.start*b),L=Math.min(L,(d.start+d.count)*b)),null!==x?(C=Math.max(C,0),L=Math.min(L,x.count)):null!=S&&(C=Math.max(C,0),L=Math.min(L,S.count));let N=L-C;if(N<0||N===1/0)return;R.setup(l,o,y,a,x);let I=T;if(null!==x&&(p=m.get(x),(I=A).setIndex(p)),l.isMesh)!0===o.wireframe?(r.setLineWidth(o.wireframeLinewidth*eT()),I.setMode(eA.LINES)):I.setMode(eA.TRIANGLES);else if(l.isLine){let e=o.linewidth;void 0===e&&(e=1),r.setLineWidth(e*eT()),l.isLineSegments?I.setMode(eA.LINES):l.isLineLoop?I.setMode(eA.LINE_LOOP):I.setMode(eA.LINE_STRIP)}else l.isPoints?I.setMode(eA.POINTS):l.isSprite&&I.setMode(eA.TRIANGLES);if(l.isBatchedMesh){if(null!==l._multiDrawInstances)I.renderMultiDrawInstances(l._multiDrawStarts,l._multiDrawCounts,l._multiDrawCount,l._multiDrawInstances);else if(i.get("WEBGL_multi_draw"))I.renderMultiDraw(l._multiDrawStarts,l._multiDrawCounts,l._multiDrawCount);else{let e=l._multiDrawStarts,t=l._multiDrawCounts,i=l._multiDrawCount,n=x?m.get(x).bytesPerElement:1,r=s.get(o).currentProgram.getUniforms();for(let a=0;a<i;a++)r.setValue(eA,"_gl_DrawID",a),I.render(e[a]/n,t[a])}}else if(l.isInstancedMesh)I.renderInstances(C,N,l.count);else if(a.isInstancedBufferGeometry){let e=void 0!==a._maxInstanceCount?a._maxInstanceCount:1/0,t=Math.min(a.instanceCount,e);I.renderInstances(C,N,t)}else I.render(C,N)},this.compile=function(e,t,i=null){null===i&&(i=e),(q=b.get(i)).init(t),Y.push(q),i.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(q.pushLight(e),e.castShadow&&q.pushShadow(e))}),e!==i&&e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(q.pushLight(e),e.castShadow&&q.pushShadow(e))}),q.setupLights();let n=new Set;return e.traverse(function(e){let t=e.material;if(t){if(Array.isArray(t))for(let r=0;r<t.length;r++){let a=t[r];eD(a,i,e),n.add(a)}else eD(t,i,e),n.add(t)}}),Y.pop(),q=null,n},this.compileAsync=function(e,t,n=null){let r=this.compile(e,t,n);return new Promise(t=>{function n(){if(r.forEach(function(e){s.get(e).currentProgram.isReady()&&r.delete(e)}),0===r.size){t(e);return}setTimeout(n,10)}null!==i.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)})};let eF=null;function ez(){ek.stop()}function eB(){ek.start()}let ek=new ic;function eV(e,t,i,n){if(!1===e.visible)return;if(e.layers.test(t.layers)){if(e.isGroup)i=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)q.pushLight(e),e.castShadow&&q.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||ey.intersectsSprite(e)){n&&ew.setFromMatrixPosition(e.matrixWorld).applyMatrix4(eb);let t=v.update(e),r=e.material;r.visible&&W.push(e,t,r,i,ew.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||ey.intersectsObject(e))){let t=v.update(e),r=e.material;if(n&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),ew.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),ew.copy(t.boundingSphere.center)),ew.applyMatrix4(e.matrixWorld).applyMatrix4(eb)),Array.isArray(r)){let n=t.groups;for(let a=0,s=n.length;a<s;a++){let s=n[a],o=r[s.materialIndex];o&&o.visible&&W.push(e,t,o,i,ew.z,s)}}else r.visible&&W.push(e,t,r,i,ew.z,null)}}let r=e.children;for(let e=0,a=r.length;e<a;e++)eV(r[e],t,i,n)}function eH(e,t,i,n){let a=e.opaque,s=e.transmissive,o=e.transparent;q.setupLightsView(i),!0===e_&&M.setGlobalState(J.clippingPlanes,i),n&&r.viewport(er.copy(n)),a.length>0&&eW(a,t,i),s.length>0&&eW(s,t,i),o.length>0&&eW(o,t,i),r.buffers.depth.setTest(!0),r.buffers.depth.setMask(!0),r.buffers.color.setMask(!0),r.setPolygonOffset(!1)}function eG(e,t,n,r){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===q.state.transmissionRenderTarget[r.id]&&(q.state.transmissionRenderTarget[r.id]=new ei(1,1,{generateMipmaps:!0,type:i.has("EXT_color_buffer_half_float")||i.has("EXT_color_buffer_float")?1016:1009,minFilter:d,samples:4,stencilBuffer:U,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:j.workingColorSpace}));let a=q.state.transmissionRenderTarget[r.id],s=r.viewport||er;a.setSize(s.z,s.w);let o=J.getRenderTarget();J.setRenderTarget(a),J.getClearColor(el),(eh=J.getClearAlpha())<1&&J.setClearColor(16777215,.5),eE?S.render(n):J.clear();let c=J.toneMapping;J.toneMapping=0;let u=r.viewport;if(void 0!==r.viewport&&(r.viewport=void 0),q.setupLightsView(r),!0===e_&&M.setGlobalState(J.clippingPlanes,r),eW(e,n,r),h.updateMultisampleRenderTarget(a),h.updateRenderTargetMipmap(a),!1===i.has("WEBGL_multisampled_render_to_texture")){let e=!1;for(let i=0,a=t.length;i<a;i++){let a=t[i],s=a.object,o=a.geometry,h=a.material,c=a.group;if(h.side===l&&s.layers.test(r.layers)){let t=h.side;h.side=1,h.needsUpdate=!0,ej(s,n,r,o,h,c),h.side=t,h.needsUpdate=!0,e=!0}}!0===e&&(h.updateMultisampleRenderTarget(a),h.updateRenderTargetMipmap(a))}J.setRenderTarget(o),J.setClearColor(el,eh),void 0!==u&&(r.viewport=u),J.toneMapping=c}function eW(e,t,i){let n=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){let a=e[r],s=a.object,o=a.geometry,l=null===n?a.material:n,h=a.group;s.layers.test(i.layers)&&ej(s,t,i,o,l,h)}}function ej(e,t,i,n,r,a){e.onBeforeRender(J,t,i,n,r,a),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),!0===r.transparent&&r.side===l&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,J.renderBufferDirect(i,t,n,r,e,a),r.side=o,r.needsUpdate=!0,J.renderBufferDirect(i,t,n,r,e,a),r.side=l):J.renderBufferDirect(i,t,n,r,e,a),e.onAfterRender(J,t,i,n,r,a)}function eq(e,t,i){!0!==t.isScene&&(t=eS);let n=s.get(e),r=q.state.lights,a=q.state.shadowsArray,o=r.state.version,l=y.getParameters(e,r.state,a,t,i),h=y.getProgramCacheKey(l),d=n.programs;n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=(e.isMeshStandardMaterial?u:c).get(e.envMap||n.environment),n.envMapRotation=null!==n.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation,void 0===d&&(e.addEventListener("dispose",eU),d=new Map,n.programs=d);let p=d.get(h);if(void 0!==p){if(n.currentProgram===p&&n.lightsStateVersion===o)return eY(e,l),p}else l.uniforms=y.getUniforms(e),e.onBeforeCompile(l,J),p=y.acquireProgram(l,h),d.set(h,p),n.uniforms=l.uniforms;let f=n.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(f.clippingPlanes=M.uniform),eY(e,l),n.needsLights=e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,n.lightsStateVersion=o,n.needsLights&&(f.ambientLightColor.value=r.state.ambient,f.lightProbe.value=r.state.probe,f.directionalLights.value=r.state.directional,f.directionalLightShadows.value=r.state.directionalShadow,f.spotLights.value=r.state.spot,f.spotLightShadows.value=r.state.spotShadow,f.rectAreaLights.value=r.state.rectArea,f.ltc_1.value=r.state.rectAreaLTC1,f.ltc_2.value=r.state.rectAreaLTC2,f.pointLights.value=r.state.point,f.pointLightShadows.value=r.state.pointShadow,f.hemisphereLights.value=r.state.hemi,f.directionalShadowMap.value=r.state.directionalShadowMap,f.directionalShadowMatrix.value=r.state.directionalShadowMatrix,f.spotShadowMap.value=r.state.spotShadowMap,f.spotLightMatrix.value=r.state.spotLightMatrix,f.spotLightMap.value=r.state.spotLightMap,f.pointShadowMap.value=r.state.pointShadowMap,f.pointShadowMatrix.value=r.state.pointShadowMatrix),n.currentProgram=p,n.uniformsList=null,p}function eX(e){if(null===e.uniformsList){let t=e.currentProgram.getUniforms();e.uniformsList=nW.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function eY(e,t){let i=s.get(e);i.outputColorSpace=t.outputColorSpace,i.batching=t.batching,i.batchingColor=t.batchingColor,i.instancing=t.instancing,i.instancingColor=t.instancingColor,i.instancingMorph=t.instancingMorph,i.skinning=t.skinning,i.morphTargets=t.morphTargets,i.morphNormals=t.morphNormals,i.morphColors=t.morphColors,i.morphTargetsCount=t.morphTargetsCount,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas,i.vertexTangents=t.vertexTangents,i.toneMapping=t.toneMapping}ek.setAnimationLoop(function(e){eF&&eF(e)}),"undefined"!=typeof self&&ek.setContext(self),this.setAnimationLoop=function(e){eF=e,eP.setAnimationLoop(e),null===e?ek.stop():ek.start()},eP.addEventListener("sessionstart",ez),eP.addEventListener("sessionend",eB),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===Z)return;if(!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===eP.enabled&&!0===eP.isPresenting&&(!0===eP.cameraAutoUpdate&&eP.updateCamera(t),t=eP.getCamera()),!0===e.isScene&&e.onBeforeRender(J,e,t,$),(q=b.get(e,Y.length)).init(t),Y.push(q),eb.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ey.setFromProjectionMatrix(eb),ex=this.localClippingEnabled,e_=M.init(this.clippingPlanes,ex),(W=x.get(e,X.length)).init(),X.push(W),!0===eP.enabled&&!0===eP.isPresenting){let e=J.xr.getDepthSensingMesh();null!==e&&eV(e,t,-1/0,J.sortObjects)}eV(e,t,0,J.sortObjects),W.finish(),!0===J.sortObjects&&W.sort(ep,ef),(eE=!1===eP.enabled||!1===eP.isPresenting||!1===eP.hasDepthSensing())&&S.addToRenderList(W,e),this.info.render.frame++,!0===e_&&M.beginShadows();let i=q.state.shadowsArray;w.render(i,e,t),!0===e_&&M.endShadows(),!0===this.info.autoReset&&this.info.reset();let n=W.opaque,r=W.transmissive;if(q.setupLights(),t.isArrayCamera){let i=t.cameras;if(r.length>0)for(let t=0,a=i.length;t<a;t++)eG(n,r,e,i[t]);eE&&S.render(e);for(let t=0,n=i.length;t<n;t++){let n=i[t];eH(W,e,n,n.viewport)}}else r.length>0&&eG(n,r,e,t),eE&&S.render(e),eH(W,e,t);null!==$&&(h.updateMultisampleRenderTarget($),h.updateRenderTargetMipmap($)),!0===e.isScene&&e.onAfterRender(J,e,t),R.resetDefaultState(),et=-1,en=null,Y.pop(),Y.length>0?(q=Y[Y.length-1],!0===e_&&M.setGlobalState(J.clippingPlanes,q.state.camera)):q=null,X.pop(),W=X.length>0?X[X.length-1]:null},this.getActiveCubeFace=function(){return K},this.getActiveMipmapLevel=function(){return Q},this.getRenderTarget=function(){return $},this.setRenderTargetTextures=function(e,t,n){s.get(e.texture).__webglTexture=t,s.get(e.depthTexture).__webglTexture=n;let r=s.get(e);r.__hasExternalTextures=!0,r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0!==i.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(e,t){let i=s.get(e);i.__webglFramebuffer=t,i.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,i=0){$=e,K=t,Q=i;let n=!0,a=null,o=!1,l=!1;if(e){let c=s.get(e);void 0!==c.__useDefaultFramebuffer?(r.bindFramebuffer(eA.FRAMEBUFFER,null),n=!1):void 0===c.__webglFramebuffer?h.setupRenderTarget(e):c.__hasExternalTextures&&h.rebindTextures(e,s.get(e.texture).__webglTexture,s.get(e.depthTexture).__webglTexture);let u=e.texture;(u.isData3DTexture||u.isDataArrayTexture||u.isCompressedArrayTexture)&&(l=!0);let d=s.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=Array.isArray(d[t])?d[t][i]:d[t],o=!0):a=e.samples>0&&!1===h.useMultisampledRTT(e)?s.get(e).__webglMultisampledFramebuffer:Array.isArray(d)?d[i]:d,er.copy(e.viewport),es.copy(e.scissor),eo=e.scissorTest}else er.copy(em).multiplyScalar(ed).floor(),es.copy(eg).multiplyScalar(ed).floor(),eo=ev;if(r.bindFramebuffer(eA.FRAMEBUFFER,a)&&n&&r.drawBuffers(e,a),r.viewport(er),r.scissor(es),r.setScissorTest(eo),o){let n=s.get(e.texture);eA.framebufferTexture2D(eA.FRAMEBUFFER,eA.COLOR_ATTACHMENT0,eA.TEXTURE_CUBE_MAP_POSITIVE_X+t,n.__webglTexture,i)}else if(l){let n=s.get(e.texture);eA.framebufferTextureLayer(eA.FRAMEBUFFER,eA.COLOR_ATTACHMENT0,n.__webglTexture,i||0,t||0)}et=-1},this.readRenderTargetPixels=function(e,t,i,a,o,l,h){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let c=s.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==h&&(c=c[h]),c){r.bindFramebuffer(eA.FRAMEBUFFER,c);try{let r=e.texture,s=r.format,h=r.type;if(!n.textureFormatReadable(s)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!n.textureTypeReadable(h)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t>=0&&t<=e.width-a&&i>=0&&i<=e.height-o&&eA.readPixels(t,i,a,o,C.convert(s),C.convert(h),l)}finally{let e=null!==$?s.get($).__webglFramebuffer:null;r.bindFramebuffer(eA.FRAMEBUFFER,e)}}},this.readRenderTargetPixelsAsync=async function(e,t,i,a,o,l,h){if(!(e&&e.isWebGLRenderTarget))throw Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let c=s.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==h&&(c=c[h]),c){r.bindFramebuffer(eA.FRAMEBUFFER,c);try{let r=e.texture,s=r.format,h=r.type;if(!n.textureFormatReadable(s))throw Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!n.textureTypeReadable(h))throw Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(t>=0&&t<=e.width-a&&i>=0&&i<=e.height-o){var u;let e=eA.createBuffer();eA.bindBuffer(eA.PIXEL_PACK_BUFFER,e),eA.bufferData(eA.PIXEL_PACK_BUFFER,l.byteLength,eA.STREAM_READ),eA.readPixels(t,i,a,o,C.convert(s),C.convert(h),0),eA.flush();let n=eA.fenceSync(eA.SYNC_GPU_COMMANDS_COMPLETE,0);await (u=eA,new Promise(function(e,t){setTimeout(function i(){switch(u.clientWaitSync(n,u.SYNC_FLUSH_COMMANDS_BIT,0)){case u.WAIT_FAILED:t();break;case u.TIMEOUT_EXPIRED:setTimeout(i,4);break;default:e()}},4)}));try{eA.bindBuffer(eA.PIXEL_PACK_BUFFER,e),eA.getBufferSubData(eA.PIXEL_PACK_BUFFER,0,l)}finally{eA.deleteBuffer(e),eA.deleteSync(n)}return l}}finally{let e=null!==$?s.get($).__webglFramebuffer:null;r.bindFramebuffer(eA.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t=null,i=0){!0!==e.isTexture&&(console.warn("WebGLRenderer: copyFramebufferToTexture function signature has changed."),t=arguments[0]||null,e=arguments[1]);let n=Math.pow(2,-i),a=Math.floor(e.image.width*n),s=Math.floor(e.image.height*n),o=null!==t?t.x:0,l=null!==t?t.y:0;h.setTexture2D(e,0),eA.copyTexSubImage2D(eA.TEXTURE_2D,i,0,0,o,l,a,s),r.unbindTexture()},this.copyTextureToTexture=function(e,t,i=null,n=null,a=0){let s,o,l,c,u,d;!0!==e.isTexture&&(console.warn("WebGLRenderer: copyTextureToTexture function signature has changed."),n=arguments[0]||null,e=arguments[1],t=arguments[2],a=arguments[3]||0,i=null),null!==i?(s=i.max.x-i.min.x,o=i.max.y-i.min.y,l=i.min.x,c=i.min.y):(s=e.image.width,o=e.image.height,l=0,c=0),null!==n?(u=n.x,d=n.y):(u=0,d=0);let p=C.convert(t.format),f=C.convert(t.type);h.setTexture2D(t,0),eA.pixelStorei(eA.UNPACK_FLIP_Y_WEBGL,t.flipY),eA.pixelStorei(eA.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),eA.pixelStorei(eA.UNPACK_ALIGNMENT,t.unpackAlignment);let m=eA.getParameter(eA.UNPACK_ROW_LENGTH),g=eA.getParameter(eA.UNPACK_IMAGE_HEIGHT),v=eA.getParameter(eA.UNPACK_SKIP_PIXELS),y=eA.getParameter(eA.UNPACK_SKIP_ROWS),_=eA.getParameter(eA.UNPACK_SKIP_IMAGES),x=e.isCompressedTexture?e.mipmaps[a]:e.image;eA.pixelStorei(eA.UNPACK_ROW_LENGTH,x.width),eA.pixelStorei(eA.UNPACK_IMAGE_HEIGHT,x.height),eA.pixelStorei(eA.UNPACK_SKIP_PIXELS,l),eA.pixelStorei(eA.UNPACK_SKIP_ROWS,c),e.isDataTexture?eA.texSubImage2D(eA.TEXTURE_2D,a,u,d,s,o,p,f,x.data):e.isCompressedTexture?eA.compressedTexSubImage2D(eA.TEXTURE_2D,a,u,d,x.width,x.height,p,x.data):eA.texSubImage2D(eA.TEXTURE_2D,a,u,d,s,o,p,f,x),eA.pixelStorei(eA.UNPACK_ROW_LENGTH,m),eA.pixelStorei(eA.UNPACK_IMAGE_HEIGHT,g),eA.pixelStorei(eA.UNPACK_SKIP_PIXELS,v),eA.pixelStorei(eA.UNPACK_SKIP_ROWS,y),eA.pixelStorei(eA.UNPACK_SKIP_IMAGES,_),0===a&&t.generateMipmaps&&eA.generateMipmap(eA.TEXTURE_2D),r.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i=null,n=null,a=0){let s,o,l,c,u,d,p,f,m,g;!0!==e.isTexture&&(console.warn("WebGLRenderer: copyTextureToTexture3D function signature has changed."),i=arguments[0]||null,n=arguments[1]||null,e=arguments[2],t=arguments[3],a=arguments[4]||0);let v=e.isCompressedTexture?e.mipmaps[a]:e.image;null!==i?(s=i.max.x-i.min.x,o=i.max.y-i.min.y,l=i.max.z-i.min.z,c=i.min.x,u=i.min.y,d=i.min.z):(s=v.width,o=v.height,l=v.depth,c=0,u=0,d=0),null!==n?(p=n.x,f=n.y,m=n.z):(p=0,f=0,m=0);let y=C.convert(t.format),_=C.convert(t.type);if(t.isData3DTexture)h.setTexture3D(t,0),g=eA.TEXTURE_3D;else if(t.isDataArrayTexture||t.isCompressedArrayTexture)h.setTexture2DArray(t,0),g=eA.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}eA.pixelStorei(eA.UNPACK_FLIP_Y_WEBGL,t.flipY),eA.pixelStorei(eA.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),eA.pixelStorei(eA.UNPACK_ALIGNMENT,t.unpackAlignment);let x=eA.getParameter(eA.UNPACK_ROW_LENGTH),b=eA.getParameter(eA.UNPACK_IMAGE_HEIGHT),M=eA.getParameter(eA.UNPACK_SKIP_PIXELS),w=eA.getParameter(eA.UNPACK_SKIP_ROWS),S=eA.getParameter(eA.UNPACK_SKIP_IMAGES);eA.pixelStorei(eA.UNPACK_ROW_LENGTH,v.width),eA.pixelStorei(eA.UNPACK_IMAGE_HEIGHT,v.height),eA.pixelStorei(eA.UNPACK_SKIP_PIXELS,c),eA.pixelStorei(eA.UNPACK_SKIP_ROWS,u),eA.pixelStorei(eA.UNPACK_SKIP_IMAGES,d),e.isDataTexture||e.isData3DTexture?eA.texSubImage3D(g,a,p,f,m,s,o,l,y,_,v.data):t.isCompressedArrayTexture?eA.compressedTexSubImage3D(g,a,p,f,m,s,o,l,y,v.data):eA.texSubImage3D(g,a,p,f,m,s,o,l,y,_,v),eA.pixelStorei(eA.UNPACK_ROW_LENGTH,x),eA.pixelStorei(eA.UNPACK_IMAGE_HEIGHT,b),eA.pixelStorei(eA.UNPACK_SKIP_PIXELS,M),eA.pixelStorei(eA.UNPACK_SKIP_ROWS,w),eA.pixelStorei(eA.UNPACK_SKIP_IMAGES,S),0===a&&t.generateMipmaps&&eA.generateMipmap(g),r.unbindTexture()},this.initRenderTarget=function(e){void 0===s.get(e).__webglFramebuffer&&h.setupRenderTarget(e)},this.initTexture=function(e){e.isCubeTexture?h.setTextureCube(e,0):e.isData3DTexture?h.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?h.setTexture2DArray(e,0):h.setTexture2D(e,0),r.unbindTexture()},this.resetState=function(){K=0,Q=0,$=null,r.reset(),R.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return 2e3}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;let t=this.getContext();t.drawingBufferColorSpace=e===m?"display-p3":"srgb",t.unpackColorSpace=j.workingColorSpace===g?"display-p3":"srgb"}}class rL extends e8{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ej,this.environmentIntensity=1,this.environmentRotation=new ej,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}let rN=new ea,rI=new ee,rU=new ee,rO=new ea,rD=new eO,rF=new ea,rz=new eT,rB=new eO,rk=new eU;class rV extends tZ{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=h,this.bindMatrix=new eO,this.bindMatrixInverse=new eO,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){let e=this.geometry;null===this.boundingBox&&(this.boundingBox=new el),this.boundingBox.makeEmpty();let t=e.getAttribute("position");for(let e=0;e<t.count;e++)this.getVertexPosition(e,rF),this.boundingBox.expandByPoint(rF)}computeBoundingSphere(){let e=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new eT),this.boundingSphere.makeEmpty();let t=e.getAttribute("position");for(let e=0;e<t.count;e++)this.getVertexPosition(e,rF),this.boundingSphere.expandByPoint(rF)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){let i=this.material,n=this.matrixWorld;if(void 0!==i&&(null===this.boundingSphere&&this.computeBoundingSphere(),rz.copy(this.boundingSphere),rz.applyMatrix4(n),!1!==e.ray.intersectsSphere(rz))){if(rB.copy(n).invert(),rk.copy(e.ray).applyMatrix4(rB),null!==this.boundingBox&&!1===rk.intersectsBox(this.boundingBox))return;this._computeIntersections(e,t,rk)}}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new ee,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);let n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===h?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){let i=this.skeleton,n=this.geometry;rI.fromBufferAttribute(n.attributes.skinIndex,e),rU.fromBufferAttribute(n.attributes.skinWeight,e),rN.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){let n=rU.getComponent(e);if(0!==n){let r=rI.getComponent(e);rD.multiplyMatrices(i.bones[r].matrixWorld,i.boneInverses[r]),t.addScaledVector(rO.copy(rN).applyMatrix4(rD),n)}}return t.applyMatrix4(this.bindMatrixInverse)}}class rH extends e8{constructor(){super(),this.isBone=!0,this.type="Bone"}}class rG extends ${constructor(e=null,t=1,i=1,n,r,a,s,o,l=1003,h=1003,c,u){super(null,a,s,o,l,h,n,r,c,u),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let rW=new eO,rj=new eO;class rq{constructor(e=[],t=[]){this.uuid=A(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new eO)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let t=new eO;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){let t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){let e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let n=0,r=e.length;n<r;n++){let r=e[n]?e[n].matrixWorld:rj;rW.multiplyMatrices(r,t[n]),rW.toArray(i,16*n)}null!==n&&(n.needsUpdate=!0)}clone(){return new rq(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length),t=new Float32Array((e=Math.max(e=4*Math.ceil(e/4),4))*e*4);t.set(this.boneMatrices);let i=new rG(t,e,e,1023,1015);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){let i=this.bones[t];if(i.name===e)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){let n=e.bones[i],r=t[n];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),r=new rH),this.bones.push(r),this.boneInverses.push(new eO().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){let e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){let r=t[n];e.bones.push(r.uuid);let a=i[n];e.boneInverses.push(a.toArray())}return e}}class rX extends tv{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new tf(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}let rY=new ea,rJ=new ea,rZ=new eO,rK=new eU,rQ=new eT,r$=new ea,r0=new ea;class r1 extends e8{constructor(e=new tN,t=new rX){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,i=[0];for(let e=1,n=t.count;e<n;e++)rY.fromBufferAttribute(t,e-1),rJ.fromBufferAttribute(t,e),i[e]=i[e-1],i[e]+=rY.distanceTo(rJ);e.setAttribute("lineDistance",new tS(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),rQ.copy(i.boundingSphere),rQ.applyMatrix4(n),rQ.radius+=r,!1===e.ray.intersectsSphere(rQ))return;rZ.copy(n).invert(),rK.copy(e.ray).applyMatrix4(rZ);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=this.isLineSegments?2:1,h=i.index,c=i.attributes.position;if(null!==h){let i=Math.max(0,a.start),n=Math.min(h.count,a.start+a.count);for(let r=i,a=n-1;r<a;r+=l){let i=r2(this,e,rK,o,h.getX(r),h.getX(r+1));i&&t.push(i)}if(this.isLineLoop){let r=r2(this,e,rK,o,h.getX(n-1),h.getX(i));r&&t.push(r)}}else{let i=Math.max(0,a.start),n=Math.min(c.count,a.start+a.count);for(let r=i,a=n-1;r<a;r+=l){let i=r2(this,e,rK,o,r,r+1);i&&t.push(i)}if(this.isLineLoop){let r=r2(this,e,rK,o,n-1,i);r&&t.push(r)}}}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let i=e[t[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){let t=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function r2(e,t,i,n,r,a){let s=e.geometry.attributes.position;if(rY.fromBufferAttribute(s,r),rJ.fromBufferAttribute(s,a),i.distanceSqToSegment(rY,rJ,r$,r0)>n)return;r$.applyMatrix4(e.matrixWorld);let o=t.ray.origin.distanceTo(r$);if(!(o<t.near)&&!(o>t.far))return{distance:o,point:r0.clone().applyMatrix4(e.matrixWorld),index:r,face:null,faceIndex:null,object:e}}let r3=new ea,r4=new ea;class r5 extends r1{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,i=[];for(let e=0,n=t.count;e<n;e+=2)r3.fromBufferAttribute(t,e),r4.fromBufferAttribute(t,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+r3.distanceTo(r4);e.setAttribute("lineDistance",new tS(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class r6 extends tv{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new tf(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let r7=new eO,r8=new eU,r9=new eT,ae=new ea;class at extends e8{constructor(e=new tN,t=new r6){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),r9.copy(i.boundingSphere),r9.applyMatrix4(n),r9.radius+=r,!1===e.ray.intersectsSphere(r9))return;r7.copy(n).invert(),r8.copy(e.ray).applyMatrix4(r7);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=i.index,h=i.attributes.position;if(null!==l){let i=Math.max(0,a.start),r=Math.min(l.count,a.start+a.count);for(let a=i;a<r;a++){let i=l.getX(a);ae.fromBufferAttribute(h,i),ai(ae,i,o,n,e,t,this)}}else{let i=Math.max(0,a.start),r=Math.min(h.count,a.start+a.count);for(let a=i;a<r;a++)ae.fromBufferAttribute(h,a),ai(ae,a,o,n,e,t,this)}}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let i=e[t[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){let t=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function ai(e,t,i,n,r,a,s){let o=r8.distanceSqToPoint(e);if(o<i){let i=new ea;r8.closestPointToPoint(e,i),i.applyMatrix4(n);let l=r.ray.origin.distanceTo(i);if(l<r.near||l>r.far)return;a.push({distance:l,distanceToRay:Math.sqrt(o),point:i,index:t,face:null,object:s})}}class an{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,n=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)t.push(r+=(i=this.getPoint(a/e)).distanceTo(n)),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let i;let n=this.getLengths(),r=0,a=n.length;i=t||e*n[a-1];let s=0,o=a-1,l;for(;s<=o;)if((l=n[r=Math.floor(s+(o-s)/2)]-i)<0)s=r+1;else if(l>0)o=r-1;else{o=r;break}if(n[r=o]===i)return r/(a-1);let h=n[r],c=n[r+1];return(r+(i-h)/(c-h))/(a-1)}getTangent(e,t){let i=e-1e-4,n=e+1e-4;i<0&&(i=0),n>1&&(n=1);let r=this.getPoint(i),a=this.getPoint(n),s=t||(r.isVector2?new U:new ea);return s.copy(a).sub(r).normalize(),s}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){let i=new ea,n=[],r=[],a=[],s=new ea,o=new eO;for(let t=0;t<=e;t++){let i=t/e;n[t]=this.getTangentAt(i,new ea)}r[0]=new ea,a[0]=new ea;let l=Number.MAX_VALUE,h=Math.abs(n[0].x),c=Math.abs(n[0].y),u=Math.abs(n[0].z);h<=l&&(l=h,i.set(1,0,0)),c<=l&&(l=c,i.set(0,1,0)),u<=l&&i.set(0,0,1),s.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],s),a[0].crossVectors(n[0],r[0]);for(let t=1;t<=e;t++){if(r[t]=r[t-1].clone(),a[t]=a[t-1].clone(),s.crossVectors(n[t-1],n[t]),s.length()>Number.EPSILON){s.normalize();let e=Math.acos(C(n[t-1].dot(n[t]),-1,1));r[t].applyMatrix4(o.makeRotationAxis(s,e))}a[t].crossVectors(n[t],r[t])}if(!0===t){let t=Math.acos(C(r[0].dot(r[e]),-1,1));t/=e,n[0].dot(s.crossVectors(r[0],r[e]))>0&&(t=-t);for(let i=1;i<=e;i++)r[i].applyMatrix4(o.makeRotationAxis(n[i],t*i)),a[i].crossVectors(n[i],r[i])}return{tangents:n,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ar extends an{constructor(e=0,t=0,i=1,n=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t=new U){let i=2*Math.PI,n=this.aEndAngle-this.aStartAngle,r=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=i;for(;n>i;)n-=i;n<Number.EPSILON&&(n=r?0:i),!0!==this.aClockwise||r||(n===i?n=-i:n-=i);let a=this.aStartAngle+e*n,s=this.aX+this.xRadius*Math.cos(a),o=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){let e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),i=s-this.aX,n=o-this.aY;s=i*e-n*t+this.aX,o=i*t+n*e+this.aY}return t.set(s,o)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}function aa(){let e=0,t=0,i=0,n=0;function r(r,a,s,o){e=r,t=s,i=-3*r+3*a-2*s-o,n=2*r-2*a+s+o}return{initCatmullRom:function(e,t,i,n,a){r(t,i,a*(i-e),a*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,a,s,o){let l=(t-e)/a-(i-e)/(a+s)+(i-t)/s,h=(i-t)/s-(n-t)/(s+o)+(n-i)/o;r(t,i,l*=s,h*=s)},calc:function(r){let a=r*r;return e+t*r+i*a+a*r*n}}}let as=new ea,ao=new aa,al=new aa,ah=new aa;function ac(e,t,i,n,r){let a=(n-t)*.5,s=(r-i)*.5,o=e*e;return e*o*(2*i-2*n+a+s)+(-3*i+3*n-2*a-s)*o+a*e+i}function au(e,t,i,n){return function(e,t){let i=1-e;return i*i*t}(e,t)+2*(1-e)*e*i+e*e*n}function ad(e,t,i,n,r){return function(e,t){let i=1-e;return i*i*i*t}(e,t)+function(e,t){let i=1-e;return 3*i*i*e*t}(e,i)+3*(1-e)*e*e*n+e*e*e*r}class ap extends an{constructor(e=new U,t=new U,i=new U,n=new U){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new U){let i=this.v0,n=this.v1,r=this.v2,a=this.v3;return t.set(ad(e,i.x,n.x,r.x,a.x),ad(e,i.y,n.y,r.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class af extends an{constructor(e=new U,t=new U){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new U){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class am extends an{constructor(e=new U,t=new U,i=new U){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new U){let i=this.v0,n=this.v1,r=this.v2;return t.set(au(e,i.x,n.x,r.x),au(e,i.y,n.y,r.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ag extends an{constructor(e=new ea,t=new ea,i=new ea){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new ea){let i=this.v0,n=this.v1,r=this.v2;return t.set(au(e,i.x,n.x,r.x),au(e,i.y,n.y,r.y),au(e,i.z,n.z,r.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class av extends an{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new U){let i=this.points,n=(i.length-1)*e,r=Math.floor(n),a=n-r,s=i[0===r?r:r-1],o=i[r],l=i[r>i.length-2?i.length-1:r+1],h=i[r>i.length-3?i.length-1:r+2];return t.set(ac(a,s.x,o.x,l.x,h.x),ac(a,s.y,o.y,l.y,h.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(i.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(new U().fromArray(i))}return this}}var ay=Object.freeze({__proto__:null,ArcCurve:class extends ar{constructor(e,t,i,n,r,a){super(e,t,i,i,n,r,a),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends an{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new ea){let i,n;let r=this.points,a=r.length,s=(a-(this.closed?0:1))*e,o=Math.floor(s),l=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/a)+1)*a:0===l&&o===a-1&&(o=a-2,l=1),this.closed||o>0?i=r[(o-1)%a]:(as.subVectors(r[0],r[1]).add(r[0]),i=as);let h=r[o%a],c=r[(o+1)%a];if(this.closed||o+2<a?n=r[(o+2)%a]:(as.subVectors(r[a-1],r[a-2]).add(r[a-1]),n=as),"centripetal"===this.curveType||"chordal"===this.curveType){let e="chordal"===this.curveType?.5:.25,t=Math.pow(i.distanceToSquared(h),e),r=Math.pow(h.distanceToSquared(c),e),a=Math.pow(c.distanceToSquared(n),e);r<1e-4&&(r=1),t<1e-4&&(t=r),a<1e-4&&(a=r),ao.initNonuniformCatmullRom(i.x,h.x,c.x,n.x,t,r,a),al.initNonuniformCatmullRom(i.y,h.y,c.y,n.y,t,r,a),ah.initNonuniformCatmullRom(i.z,h.z,c.z,n.z,t,r,a)}else"catmullrom"===this.curveType&&(ao.initCatmullRom(i.x,h.x,c.x,n.x,this.tension),al.initCatmullRom(i.y,h.y,c.y,n.y,this.tension),ah.initCatmullRom(i.z,h.z,c.z,n.z,this.tension));return t.set(ao.calc(l),al.calc(l),ah.calc(l)),t}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(new ea().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},CubicBezierCurve:ap,CubicBezierCurve3:class extends an{constructor(e=new ea,t=new ea,i=new ea,n=new ea){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new ea){let i=this.v0,n=this.v1,r=this.v2,a=this.v3;return t.set(ad(e,i.x,n.x,r.x,a.x),ad(e,i.y,n.y,r.y,a.y),ad(e,i.z,n.z,r.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},EllipseCurve:ar,LineCurve:af,LineCurve3:class extends an{constructor(e=new ea,t=new ea){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new ea){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ea){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:am,QuadraticBezierCurve3:ag,SplineCurve:av});class a_ extends an{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){let i=!0===e.isVector2?"LineCurve":"LineCurve3";this.curves.push(new ay[i](t,e))}return this}getPoint(e,t){let i=e*this.getLength(),n=this.getCurveLengths(),r=0;for(;r<n.length;){if(n[r]>=i){let e=n[r]-i,a=this.curves[r],s=a.getLength(),o=0===s?0:1-e/s;return a.getPointAt(o,t)}r++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,n=this.curves.length;i<n;i++)e.push(t+=this.curves[i].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t;let i=[];for(let n=0,r=this.curves;n<r.length;n++){let a=r[n],s=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let e=0;e<o.length;e++){let n=o[e];t&&t.equals(n)||(i.push(n),t=n)}}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let i=e.curves[t];this.curves.push(new ay[i.type]().fromJSON(i))}return this}}class ax extends a_{constructor(e){super(),this.type="Path",this.currentPoint=new U,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new af(this.currentPoint.clone(),new U(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){let r=new am(this.currentPoint.clone(),new U(e,t),new U(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,a){let s=new ap(this.currentPoint.clone(),new U(e,t),new U(i,n),new U(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(e){let t=new av([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,a){let s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,i,n,r,a),this}absarc(e,t,i,n,r,a){return this.absellipse(e,t,i,i,n,r,a),this}ellipse(e,t,i,n,r,a,s,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,i,n,r,a,s,o),this}absellipse(e,t,i,n,r,a,s,o){let l=new ar(e,t,i,n,r,a,s,o);if(this.curves.length>0){let e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ab extends tN{constructor(e=[new U(0,-.5),new U(.5,0),new U(0,.5)],t=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=C(n,0,2*Math.PI);let r=[],a=[],s=[],o=[],l=[],h=1/t,c=new ea,u=new U,d=new ea,p=new ea,f=new ea,m=0,g=0;for(let t=0;t<=e.length-1;t++)switch(t){case 0:m=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case e.length-1:o.push(f.x,f.y,f.z);break;default:m=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let r=0;r<=t;r++){let d=i+r*h*n,p=Math.sin(d),f=Math.cos(d);for(let i=0;i<=e.length-1;i++){c.x=e[i].x*p,c.y=e[i].y,c.z=e[i].x*f,a.push(c.x,c.y,c.z),u.x=r/t,u.y=i/(e.length-1),s.push(u.x,u.y);let n=o[3*i+0]*p,h=o[3*i+1],d=o[3*i+0]*f;l.push(n,h,d)}}for(let i=0;i<t;i++)for(let t=0;t<e.length-1;t++){let n=t+i*e.length,a=n+e.length,s=n+e.length+1,o=n+1;r.push(n,a,o),r.push(s,o,a)}this.setIndex(r),this.setAttribute("position",new tS(a,3)),this.setAttribute("uv",new tS(s,2)),this.setAttribute("normal",new tS(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ab(e.points,e.segments,e.phiStart,e.phiLength)}}class aM extends ab{constructor(e=1,t=1,i=4,n=8){let r=new ax;r.absarc(0,-t/2,e,1.5*Math.PI,0),r.absarc(0,t/2,e,0,.5*Math.PI),super(r.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new aM(e.radius,e.length,e.capSegments,e.radialSegments)}}class aw extends tN{constructor(e=1,t=32,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);let r=[],a=[],s=[],o=[],l=new ea,h=new U;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let r=0,c=3;r<=t;r++,c+=3){let u=i+r/t*n;l.x=e*Math.cos(u),l.y=e*Math.sin(u),a.push(l.x,l.y,l.z),s.push(0,0,1),h.x=(a[c]/e+1)/2,h.y=(a[c+1]/e+1)/2,o.push(h.x,h.y)}for(let e=1;e<=t;e++)r.push(e,e+1,0);this.setIndex(r),this.setAttribute("position",new tS(a,3)),this.setAttribute("normal",new tS(s,3)),this.setAttribute("uv",new tS(o,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aw(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class aS extends tN{constructor(e=1,t=1,i=1,n=32,r=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o};let l=this;n=Math.floor(n),r=Math.floor(r);let h=[],c=[],u=[],d=[],p=0,f=[],m=i/2,g=0;function v(i){let r=p,a=new U,f=new ea,v=0,y=!0===i?e:t,_=!0===i?1:-1;for(let e=1;e<=n;e++)c.push(0,m*_,0),u.push(0,_,0),d.push(.5,.5),p++;let x=p;for(let e=0;e<=n;e++){let t=e/n*o+s,i=Math.cos(t),r=Math.sin(t);f.x=y*r,f.y=m*_,f.z=y*i,c.push(f.x,f.y,f.z),u.push(0,_,0),a.x=.5*i+.5,a.y=.5*r*_+.5,d.push(a.x,a.y),p++}for(let e=0;e<n;e++){let t=r+e,n=x+e;!0===i?h.push(n,n+1,t):h.push(n+1,n,t),v+=3}l.addGroup(g,v,!0===i?1:2),g+=v}(function(){let a=new ea,v=new ea,y=0,_=(t-e)/i;for(let l=0;l<=r;l++){let h=[],g=l/r,y=g*(t-e)+e;for(let e=0;e<=n;e++){let t=e/n,r=t*o+s,l=Math.sin(r),f=Math.cos(r);v.x=y*l,v.y=-g*i+m,v.z=y*f,c.push(v.x,v.y,v.z),a.set(l,_,f).normalize(),u.push(a.x,a.y,a.z),d.push(t,1-g),h.push(p++)}f.push(h)}for(let e=0;e<n;e++)for(let t=0;t<r;t++){let i=f[t][e],n=f[t+1][e],r=f[t+1][e+1],a=f[t][e+1];h.push(i,n,a),h.push(n,r,a),y+=6}l.addGroup(g,y,0),g+=y})(),!1===a&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new tS(c,3)),this.setAttribute("normal",new tS(u,3)),this.setAttribute("uv",new tS(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aS(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class aE extends aS{constructor(e=1,t=1,i=32,n=1,r=!1,a=0,s=2*Math.PI){super(0,e,t,i,n,r,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:s}}static fromJSON(e){return new aE(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class aT extends tN{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};let r=[],a=[];function s(e){r.push(e.x,e.y,e.z)}function o(t,i){let n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function l(e,t,i,n){n<0&&1===e.x&&(a[t]=e.x-1),0===i.x&&0===i.z&&(a[t]=n/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}(function(e){let i=new ea,n=new ea,r=new ea;for(let a=0;a<t.length;a+=3)o(t[a+0],i),o(t[a+1],n),o(t[a+2],r),function(e,t,i,n){let r=n+1,a=[];for(let n=0;n<=r;n++){a[n]=[];let s=e.clone().lerp(i,n/r),o=t.clone().lerp(i,n/r),l=r-n;for(let e=0;e<=l;e++)0===e&&n===r?a[n][e]=s:a[n][e]=s.clone().lerp(o,e/l)}for(let e=0;e<r;e++)for(let t=0;t<2*(r-e)-1;t++){let i=Math.floor(t/2);t%2==0?(s(a[e][i+1]),s(a[e+1][i]),s(a[e][i])):(s(a[e][i+1]),s(a[e+1][i+1]),s(a[e+1][i]))}}(i,n,r,e)})(n),function(e){let t=new ea;for(let i=0;i<r.length;i+=3)t.x=r[i+0],t.y=r[i+1],t.z=r[i+2],t.normalize().multiplyScalar(e),r[i+0]=t.x,r[i+1]=t.y,r[i+2]=t.z}(i),function(){let e=new ea;for(let t=0;t<r.length;t+=3){e.x=r[t+0],e.y=r[t+1],e.z=r[t+2];let i=h(e)/2/Math.PI+.5,n=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;a.push(i,1-n)}(function(){let e=new ea,t=new ea,i=new ea,n=new ea,s=new U,o=new U,c=new U;for(let u=0,d=0;u<r.length;u+=9,d+=6){e.set(r[u+0],r[u+1],r[u+2]),t.set(r[u+3],r[u+4],r[u+5]),i.set(r[u+6],r[u+7],r[u+8]),s.set(a[d+0],a[d+1]),o.set(a[d+2],a[d+3]),c.set(a[d+4],a[d+5]),n.copy(e).add(t).add(i).divideScalar(3);let p=h(n);l(s,d+0,e,p),l(o,d+2,t,p),l(c,d+4,i,p)}})(),function(){for(let e=0;e<a.length;e+=6){let t=a[e+0],i=a[e+2],n=a[e+4],r=Math.max(t,i,n),s=Math.min(t,i,n);r>.9&&s<.1&&(t<.2&&(a[e+0]+=1),i<.2&&(a[e+2]+=1),n<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new tS(r,3)),this.setAttribute("normal",new tS(r.slice(),3)),this.setAttribute("uv",new tS(a,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aT(e.vertices,e.indices,e.radius,e.details)}}class aA extends aT{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new aA(e.radius,e.detail)}}class aC extends ax{constructor(e){super(e),this.uuid=A(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let i=e.holes[t];this.holes.push(new ax().fromJSON(i))}return this}}let aR=function(e,t,i=2){let n,r,a,s,o,l,h;let c=t&&t.length,u=c?t[0]*i:e.length,d=aP(e,0,u,i,!0),p=[];if(!d||d.next===d.prev)return p;if(c&&(d=function(e,t,i,n){let r,a,s,o,l;let h=[];for(r=0,a=t.length;r<a;r++)s=t[r]*n,o=r<a-1?t[r+1]*n:e.length,(l=aP(e,s,o,n,!1))===l.next&&(l.steiner=!0),h.push(function(e){let t=e,i=e;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==e)return i}(l));for(h.sort(aN),r=0;r<h.length;r++)i=function(e,t){let i=function(e,t){let i=t,n=-1/0,r,a=e.x,s=e.y;do{if(s<=i.y&&s>=i.next.y&&i.next.y!==i.y){let e=i.x+(s-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(e<=a&&e>n&&(n=e,r=i.x<i.next.x?i:i.next,e===a))return r}i=i.next}while(i!==t)if(!r)return null;let o=r,l=r.x,h=r.y,c=1/0,u;i=r;do{var d,p;a>=i.x&&i.x>=l&&a!==i.x&&aU(s<h?a:n,s,l,h,s<h?n:a,s,i.x,i.y)&&(u=Math.abs(s-i.y)/(a-i.x),ak(i,e)&&(u<c||u===c&&(i.x>r.x||i.x===r.x&&(d=r,p=i,0>aO(d.prev,d,p.prev)&&0>aO(p.next,d,d.next))))&&(r=i,c=u)),i=i.next}while(i!==o)return r}(e,t);if(!i)return t;let n=aV(i,e);return aL(n,n.next),aL(i,i.next)}(h[r],i);return i}(e,t,d,i)),e.length>80*i){n=a=e[0],r=s=e[1];for(let t=i;t<u;t+=i)o=e[t],l=e[t+1],o<n&&(n=o),l<r&&(r=l),o>a&&(a=o),l>s&&(s=l);h=0!==(h=Math.max(a-n,s-r))?32767/h:0}return function e(t,i,n,r,a,s,o){if(!t)return;!o&&s&&function(e,t,i,n){let r=e;do 0===r.z&&(r.z=aI(r.x,r.y,t,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e)r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,i,n,r,a,s,o,l,h=1;do{for(i=e,e=null,a=null,s=0;i;){for(s++,n=i,o=0,t=0;t<h&&(o++,n=n.nextZ);t++);for(l=h;o>0||l>0&&n;)0!==o&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,o--):(r=n,n=n.nextZ,l--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;i=n}a.nextZ=null,h*=2}while(s>1)}(r)}(t,r,a,s);let l=t,h,c;for(;t.prev!==t.next;){if(h=t.prev,c=t.next,s?function(e,t,i,n){let r=e.prev,a=e.next;if(aO(r,e,a)>=0)return!1;let s=r.x,o=e.x,l=a.x,h=r.y,c=e.y,u=a.y,d=s<o?s<l?s:l:o<l?o:l,p=h<c?h<u?h:u:c<u?c:u,f=s>o?s>l?s:l:o>l?o:l,m=h>c?h>u?h:u:c>u?c:u,g=aI(d,p,t,i,n),v=aI(f,m,t,i,n),y=e.prevZ,_=e.nextZ;for(;y&&y.z>=g&&_&&_.z<=v;){if(y.x>=d&&y.x<=f&&y.y>=p&&y.y<=m&&y!==r&&y!==a&&aU(s,h,o,c,l,u,y.x,y.y)&&aO(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=d&&_.x<=f&&_.y>=p&&_.y<=m&&_!==r&&_!==a&&aU(s,h,o,c,l,u,_.x,_.y)&&aO(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=g;){if(y.x>=d&&y.x<=f&&y.y>=p&&y.y<=m&&y!==r&&y!==a&&aU(s,h,o,c,l,u,y.x,y.y)&&aO(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=v;){if(_.x>=d&&_.x<=f&&_.y>=p&&_.y<=m&&_!==r&&_!==a&&aU(s,h,o,c,l,u,_.x,_.y)&&aO(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}(t,r,a,s):function(e){let t=e.prev,i=e.next;if(aO(t,e,i)>=0)return!1;let n=t.x,r=e.x,a=i.x,s=t.y,o=e.y,l=i.y,h=n<r?n<a?n:a:r<a?r:a,c=s<o?s<l?s:l:o<l?o:l,u=n>r?n>a?n:a:r>a?r:a,d=s>o?s>l?s:l:o>l?o:l,p=i.next;for(;p!==t;){if(p.x>=h&&p.x<=u&&p.y>=c&&p.y<=d&&aU(n,s,r,o,a,l,p.x,p.y)&&aO(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}(t)){i.push(h.i/n|0),i.push(t.i/n|0),i.push(c.i/n|0),aG(t),t=c.next,l=c.next;continue}if((t=c)===l){o?1===o?e(t=function(e,t,i){let n=e;do{let r=n.prev,a=n.next.next;!aD(r,a)&&aF(r,n,n.next,a)&&ak(r,a)&&ak(a,r)&&(t.push(r.i/i|0),t.push(n.i/i|0),t.push(a.i/i|0),aG(n),aG(n.next),n=e=a),n=n.next}while(n!==e)return aL(n)}(aL(t),i,n),i,n,r,a,s,2):2===o&&function(t,i,n,r,a,s){let o=t;do{let t=o.next.next;for(;t!==o.prev;){var l,h;if(o.i!==t.i&&(l=o,h=t,l.next.i!==h.i&&l.prev.i!==h.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&aF(i,i.next,e,t))return!0;i=i.next}while(i!==e)return!1}(l,h)&&(ak(l,h)&&ak(h,l)&&function(e,t){let i=e,n=!1,r=(e.x+t.x)/2,a=(e.y+t.y)/2;do i.y>a!=i.next.y>a&&i.next.y!==i.y&&r<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next;while(i!==e)return n}(l,h)&&(aO(l.prev,l,h.prev)||aO(l,h.prev,h))||aD(l,h)&&aO(l.prev,l,l.next)>0&&aO(h.prev,h,h.next)>0))){let l=aV(o,t);o=aL(o,o.next),l=aL(l,l.next),e(o,i,n,r,a,s,0),e(l,i,n,r,a,s,0);return}t=t.next}o=o.next}while(o!==t)}(t,i,n,r,a,s):e(aL(t),i,n,r,a,s,1);break}}}(d,p,i,n,r,h,0),p};function aP(e,t,i,n,r){let a,s;if(r===function(e,t,i,n){let r=0;for(let a=t,s=i-n;a<i;a+=n)r+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return r}(e,t,i,n)>0)for(a=t;a<i;a+=n)s=aH(a,e[a],e[a+1],s);else for(a=i-n;a>=t;a-=n)s=aH(a,e[a],e[a+1],s);return s&&aD(s,s.next)&&(aG(s),s=s.next),s}function aL(e,t){if(!e)return e;t||(t=e);let i=e,n;do if(n=!1,!i.steiner&&(aD(i,i.next)||0===aO(i.prev,i,i.next))){if(aG(i),(i=t=i.prev)===i.next)break;n=!0}else i=i.next;while(n||i!==t)return t}function aN(e,t){return e.x-t.x}function aI(e,t,i,n,r){return(e=((e=((e=((e=((e=(e-i)*r|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=(t-n)*r|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function aU(e,t,i,n,r,a,s,o){return(r-s)*(t-o)>=(e-s)*(a-o)&&(e-s)*(n-o)>=(i-s)*(t-o)&&(i-s)*(a-o)>=(r-s)*(n-o)}function aO(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function aD(e,t){return e.x===t.x&&e.y===t.y}function aF(e,t,i,n){let r=aB(aO(e,t,i)),a=aB(aO(e,t,n)),s=aB(aO(i,n,e)),o=aB(aO(i,n,t));return!!(r!==a&&s!==o||0===r&&az(e,i,t)||0===a&&az(e,n,t)||0===s&&az(i,e,n)||0===o&&az(i,t,n))}function az(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function aB(e){return e>0?1:e<0?-1:0}function ak(e,t){return 0>aO(e.prev,e,e.next)?aO(e,t,e.next)>=0&&aO(e,e.prev,t)>=0:0>aO(e,t,e.prev)||0>aO(e,e.next,t)}function aV(e,t){let i=new aW(e.i,e.x,e.y),n=new aW(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,a.next=n,n.prev=a,n}function aH(e,t,i,n){let r=new aW(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function aG(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function aW(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class aj{static area(e){let t=e.length,i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return .5*i}static isClockWise(e){return 0>aj.area(e)}static triangulateShape(e,t){let i=[],n=[],r=[];aq(e),aX(i,e);let a=e.length;t.forEach(aq);for(let e=0;e<t.length;e++)n.push(a),a+=t[e].length,aX(i,t[e]);let s=aR(i,n);for(let e=0;e<s.length;e+=3)r.push(s.slice(e,e+3));return r}}function aq(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function aX(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class aY extends tN{constructor(e=new aC([new U(.5,.5),new U(-.5,.5),new U(-.5,-.5),new U(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,n=[],r=[];for(let a=0,s=e.length;a<s;a++)(function(e){let a,s,o,l;let h=[],c=void 0!==t.curveSegments?t.curveSegments:12,u=void 0!==t.steps?t.steps:1,d=void 0!==t.depth?t.depth:1,p=void 0===t.bevelEnabled||t.bevelEnabled,f=void 0!==t.bevelThickness?t.bevelThickness:.2,m=void 0!==t.bevelSize?t.bevelSize:f-.1,g=void 0!==t.bevelOffset?t.bevelOffset:0,v=void 0!==t.bevelSegments?t.bevelSegments:3,y=t.extrudePath,_=void 0!==t.UVGenerator?t.UVGenerator:aJ,x,b=!1;y&&(x=y.getSpacedPoints(u),b=!0,p=!1,a=y.computeFrenetFrames(u,!1),s=new ea,o=new ea,l=new ea),p||(v=0,f=0,m=0,g=0);let M=e.extractPoints(c),w=M.shape,S=M.holes;if(!aj.isClockWise(w)){w=w.reverse();for(let e=0,t=S.length;e<t;e++){let t=S[e];aj.isClockWise(t)&&(S[e]=t.reverse())}}let E=aj.triangulateShape(w,S),T=w;for(let e=0,t=S.length;e<t;e++){let t=S[e];w=w.concat(t)}function A(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().addScaledVector(t,i)}let C=w.length,R=E.length;function P(e,t,i){let n,r,a;let s=e.x-t.x,o=e.y-t.y,l=i.x-e.x,h=i.y-e.y,c=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){let u=Math.sqrt(c),d=Math.sqrt(l*l+h*h),p=t.x-o/u,f=t.y+s/u,m=((i.x-h/d-p)*h-(i.y+l/d-f)*l)/(s*h-o*l),g=(n=p+s*m-e.x)*n+(r=f+o*m-e.y)*r;if(g<=2)return new U(n,r);a=Math.sqrt(g/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),e?(n=-o,r=s,a=Math.sqrt(c)):(n=s,r=o,a=Math.sqrt(c/2))}return new U(n/a,r/a)}let L=[];for(let e=0,t=T.length,i=t-1,n=e+1;e<t;e++,i++,n++)i===t&&(i=0),n===t&&(n=0),L[e]=P(T[e],T[i],T[n]);let N=[],I,O=L.concat();for(let e=0,t=S.length;e<t;e++){let t=S[e];I=[];for(let e=0,i=t.length,n=i-1,r=e+1;e<i;e++,n++,r++)n===i&&(n=0),r===i&&(r=0),I[e]=P(t[e],t[n],t[r]);N.push(I),O=O.concat(I)}for(let e=0;e<v;e++){let t=e/v,i=f*Math.cos(t*Math.PI/2),n=m*Math.sin(t*Math.PI/2)+g;for(let e=0,t=T.length;e<t;e++){let t=A(T[e],L[e],n);z(t.x,t.y,-i)}for(let e=0,t=S.length;e<t;e++){let t=S[e];I=N[e];for(let e=0,r=t.length;e<r;e++){let r=A(t[e],I[e],n);z(r.x,r.y,-i)}}}let D=m+g;for(let e=0;e<C;e++){let t=p?A(w[e],O[e],D):w[e];b?(o.copy(a.normals[0]).multiplyScalar(t.x),s.copy(a.binormals[0]).multiplyScalar(t.y),l.copy(x[0]).add(o).add(s),z(l.x,l.y,l.z)):z(t.x,t.y,0)}for(let e=1;e<=u;e++)for(let t=0;t<C;t++){let i=p?A(w[t],O[t],D):w[t];b?(o.copy(a.normals[e]).multiplyScalar(i.x),s.copy(a.binormals[e]).multiplyScalar(i.y),l.copy(x[e]).add(o).add(s),z(l.x,l.y,l.z)):z(i.x,i.y,d/u*e)}for(let e=v-1;e>=0;e--){let t=e/v,i=f*Math.cos(t*Math.PI/2),n=m*Math.sin(t*Math.PI/2)+g;for(let e=0,t=T.length;e<t;e++){let t=A(T[e],L[e],n);z(t.x,t.y,d+i)}for(let e=0,t=S.length;e<t;e++){let t=S[e];I=N[e];for(let e=0,r=t.length;e<r;e++){let r=A(t[e],I[e],n);b?z(r.x,r.y+x[u-1].y,x[u-1].x+i):z(r.x,r.y,d+i)}}}function F(e,t){let r=e.length;for(;--r>=0;){let a=r,s=r-1;s<0&&(s=e.length-1);for(let e=0,r=u+2*v;e<r;e++){let r=C*e,o=C*(e+1);(function(e,t,r,a){k(e),k(t),k(a),k(t),k(r),k(a);let s=n.length/3,o=_.generateSideWallUV(i,n,s-6,s-3,s-2,s-1);V(o[0]),V(o[1]),V(o[3]),V(o[1]),V(o[2]),V(o[3])})(t+a+r,t+s+r,t+s+o,t+a+o)}}}function z(e,t,i){h.push(e),h.push(t),h.push(i)}function B(e,t,r){k(e),k(t),k(r);let a=n.length/3,s=_.generateTopUV(i,n,a-3,a-2,a-1);V(s[0]),V(s[1]),V(s[2])}function k(e){n.push(h[3*e+0]),n.push(h[3*e+1]),n.push(h[3*e+2])}function V(e){r.push(e.x),r.push(e.y)}(function(){let e=n.length/3;if(p){let e=0*C;for(let t=0;t<R;t++){let i=E[t];B(i[2]+e,i[1]+e,i[0]+e)}e=C*(u+2*v);for(let t=0;t<R;t++){let i=E[t];B(i[0]+e,i[1]+e,i[2]+e)}}else{for(let e=0;e<R;e++){let t=E[e];B(t[2],t[1],t[0])}for(let e=0;e<R;e++){let t=E[e];B(t[0]+C*u,t[1]+C*u,t[2]+C*u)}}i.addGroup(e,n.length/3-e,0)})(),function(){let e=n.length/3,t=0;F(T,0),t+=T.length;for(let e=0,i=S.length;e<i;e++){let i=S[e];F(i,t),t+=i.length}i.addGroup(e,n.length/3-e,1)}()})(e[a]);this.setAttribute("position",new tS(n,3)),this.setAttribute("uv",new tS(r,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(e,t,i){if(i.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){let n=e[t];i.shapes.push(n.uuid)}else i.shapes.push(e.uuid);return i.options=Object.assign({},t),void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let r=t[e.shapes[n]];i.push(r)}let n=e.options.extrudePath;return void 0!==n&&(e.options.extrudePath=new ay[n.type]().fromJSON(n)),new aY(i,e.options)}}let aJ={generateTopUV:function(e,t,i,n,r){let a=t[3*i],s=t[3*i+1],o=t[3*n],l=t[3*n+1],h=t[3*r],c=t[3*r+1];return[new U(a,s),new U(o,l),new U(h,c)]},generateSideWallUV:function(e,t,i,n,r,a){let s=t[3*i],o=t[3*i+1],l=t[3*i+2],h=t[3*n],c=t[3*n+1],u=t[3*n+2],d=t[3*r],p=t[3*r+1],f=t[3*r+2],m=t[3*a],g=t[3*a+1],v=t[3*a+2];return Math.abs(o-c)<Math.abs(s-h)?[new U(s,1-l),new U(h,1-u),new U(d,1-f),new U(m,1-v)]:[new U(o,1-l),new U(c,1-u),new U(p,1-f),new U(g,1-v)]}};class aZ extends aT{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new aZ(e.radius,e.detail)}}class aK extends aT{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new aK(e.radius,e.detail)}}class aQ extends tN{constructor(e=.5,t=1,i=32,n=1,r=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},i=Math.max(3,i);let s=[],o=[],l=[],h=[],c=e,u=(t-e)/(n=Math.max(1,n)),d=new ea,p=new U;for(let e=0;e<=n;e++){for(let e=0;e<=i;e++){let n=r+e/i*a;d.x=c*Math.cos(n),d.y=c*Math.sin(n),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}c+=u}for(let e=0;e<n;e++){let t=e*(i+1);for(let e=0;e<i;e++){let n=e+t,r=n+i+1,a=n+i+2,o=n+1;s.push(n,r,o),s.push(r,a,o)}}this.setIndex(s),this.setAttribute("position",new tS(o,3)),this.setAttribute("normal",new tS(l,3)),this.setAttribute("uv",new tS(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aQ(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class a$ extends tN{constructor(e=new aC([new U(0,.5),new U(-.5,-.5),new U(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],n=[],r=[],a=[],s=0,o=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(s,o,t),s+=o,o=0;function l(e){let s=n.length/3,l=e.extractPoints(t),h=l.shape,c=l.holes;!1===aj.isClockWise(h)&&(h=h.reverse());for(let e=0,t=c.length;e<t;e++){let t=c[e];!0===aj.isClockWise(t)&&(c[e]=t.reverse())}let u=aj.triangulateShape(h,c);for(let e=0,t=c.length;e<t;e++){let t=c[e];h=h.concat(t)}for(let e=0,t=h.length;e<t;e++){let t=h[e];n.push(t.x,t.y,0),r.push(0,0,1),a.push(t.x,t.y)}for(let e=0,t=u.length;e<t;e++){let t=u[e],n=t[0]+s,r=t[1]+s,a=t[2]+s;i.push(n,r,a),o+=3}}this.setIndex(i),this.setAttribute("position",new tS(n,3)),this.setAttribute("normal",new tS(r,3)),this.setAttribute("uv",new tS(a,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){let n=e[i];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let r=t[e.shapes[n]];i.push(r)}return new a$(i,e.curveSegments)}}class a0 extends tN{constructor(e=1,t=32,i=16,n=0,r=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let o=Math.min(a+s,Math.PI),l=0,h=[],c=new ea,u=new ea,d=[],p=[],f=[],m=[];for(let d=0;d<=i;d++){let g=[],v=d/i,y=0;0===d&&0===a?y=.5/t:d===i&&o===Math.PI&&(y=-.5/t);for(let i=0;i<=t;i++){let o=i/t;c.x=-e*Math.cos(n+o*r)*Math.sin(a+v*s),c.y=e*Math.cos(a+v*s),c.z=e*Math.sin(n+o*r)*Math.sin(a+v*s),p.push(c.x,c.y,c.z),u.copy(c).normalize(),f.push(u.x,u.y,u.z),m.push(o+y,1-v),g.push(l++)}h.push(g)}for(let e=0;e<i;e++)for(let n=0;n<t;n++){let t=h[e][n+1],r=h[e][n],s=h[e+1][n],l=h[e+1][n+1];(0!==e||a>0)&&d.push(t,r,l),(e!==i-1||o<Math.PI)&&d.push(r,s,l)}this.setIndex(d),this.setAttribute("position",new tS(p,3)),this.setAttribute("normal",new tS(f,3)),this.setAttribute("uv",new tS(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a0(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class a1 extends aT{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new a1(e.radius,e.detail)}}class a2 extends tN{constructor(e=1,t=.4,i=12,n=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);let a=[],s=[],o=[],l=[],h=new ea,c=new ea,u=new ea;for(let a=0;a<=i;a++)for(let d=0;d<=n;d++){let p=d/n*r,f=a/i*Math.PI*2;c.x=(e+t*Math.cos(f))*Math.cos(p),c.y=(e+t*Math.cos(f))*Math.sin(p),c.z=t*Math.sin(f),s.push(c.x,c.y,c.z),h.x=e*Math.cos(p),h.y=e*Math.sin(p),u.subVectors(c,h).normalize(),o.push(u.x,u.y,u.z),l.push(d/n),l.push(a/i)}for(let e=1;e<=i;e++)for(let t=1;t<=n;t++){let i=(n+1)*e+t-1,r=(n+1)*(e-1)+t-1,s=(n+1)*(e-1)+t,o=(n+1)*e+t;a.push(i,r,o),a.push(r,s,o)}this.setIndex(a),this.setAttribute("position",new tS(s,3)),this.setAttribute("normal",new tS(o,3)),this.setAttribute("uv",new tS(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a2(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class a3 extends tN{constructor(e=1,t=.4,i=64,n=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:a},i=Math.floor(i),n=Math.floor(n);let s=[],o=[],l=[],h=[],c=new ea,u=new ea,d=new ea,p=new ea,f=new ea,m=new ea,g=new ea;for(let s=0;s<=i;++s){let y=s/i*r*Math.PI*2;v(y,r,a,e,d),v(y+.01,r,a,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let e=0;e<=n;++e){let r=e/n*Math.PI*2,a=-t*Math.cos(r),p=t*Math.sin(r);c.x=d.x+(a*g.x+p*f.x),c.y=d.y+(a*g.y+p*f.y),c.z=d.z+(a*g.z+p*f.z),o.push(c.x,c.y,c.z),u.subVectors(c,d).normalize(),l.push(u.x,u.y,u.z),h.push(s/i),h.push(e/n)}}for(let e=1;e<=i;e++)for(let t=1;t<=n;t++){let i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),a=(n+1)*e+t,o=(n+1)*(e-1)+t;s.push(i,r,o),s.push(r,a,o)}function v(e,t,i,n,r){let a=Math.cos(e),s=Math.sin(e),o=i/t*e,l=Math.cos(o);r.x=n*(2+l)*.5*a,r.y=n*(2+l)*s*.5,r.z=n*Math.sin(o)*.5}this.setIndex(s),this.setAttribute("position",new tS(o,3)),this.setAttribute("normal",new tS(l,3)),this.setAttribute("uv",new tS(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a3(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class a4 extends tN{constructor(e=new ag(new ea(-1,-1,0),new ea(-1,1,0),new ea(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};let a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let s=new ea,o=new ea,l=new U,h=new ea,c=[],u=[],d=[],p=[];function f(r){h=e.getPointAt(r/t,h);let l=a.normals[r],d=a.binormals[r];for(let e=0;e<=n;e++){let t=e/n*Math.PI*2,r=Math.sin(t),a=-Math.cos(t);o.x=a*l.x+r*d.x,o.y=a*l.y+r*d.y,o.z=a*l.z+r*d.z,o.normalize(),u.push(o.x,o.y,o.z),s.x=h.x+i*o.x,s.y=h.y+i*o.y,s.z=h.z+i*o.z,c.push(s.x,s.y,s.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=n;i++)l.x=e/t,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){let i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),a=(n+1)*e+t,s=(n+1)*(e-1)+t;p.push(i,r,s),p.push(r,a,s)}}()})(),this.setIndex(p),this.setAttribute("position",new tS(c,3)),this.setAttribute("normal",new tS(u,3)),this.setAttribute("uv",new tS(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new a4(new ay[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class a5 extends tv{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new tf(16777215),this.specular=new tf(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tf(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new U(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ej,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class a6 extends tv{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new tf(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tf(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new U(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ej,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}function a7(e,t,i){return e&&(i||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}function a8(e,t,i){let n=e.length,r=new e.constructor(n);for(let a=0,s=0;s!==n;++a){let n=i[a]*t;for(let i=0;i!==t;++i)r[s++]=e[n+i]}return r}function a9(e,t,i,n){let r=1,a=e[0];for(;void 0!==a&&void 0===a[n];)a=e[r++];if(void 0===a)return;let s=a[n];if(void 0!==s){if(Array.isArray(s))do void 0!==(s=a[n])&&(t.push(a.time),i.push.apply(i,s)),a=e[r++];while(void 0!==a)else if(void 0!==s.toArray)do void 0!==(s=a[n])&&(t.push(a.time),s.toArray(i,i.length)),a=e[r++];while(void 0!==a)else do void 0!==(s=a[n])&&(t.push(a.time),i.push(s)),a=e[r++];while(void 0!==a)}}class se{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,n=t[i],r=t[i-1];e:{t:{let a;i:{n:if(!(e<n)){for(let a=i+2;;){if(void 0===n){if(e<r)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(r=n,e<(n=t[++i]))break t}a=t.length;break i}if(!(e>=r)){let s=t[1];e<s&&(i=2,r=s);for(let a=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===a)break;if(n=r,e>=(r=t[--i-1]))break t}a=i,i=0;break i}break e}for(;i<a;){let n=i+a>>>1;e<t[n]?a=n:i=n+1}if(n=t[i],void 0===(r=t[i-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let e=0;e!==n;++e)t[e]=i[r+e];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class st extends se{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,i){let n=this.parameterPositions,r=e-2,a=e+1,s=n[r],o=n[a];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:r=e,s=2*t-i;break;case 2402:r=n.length-2,s=t+n[r]-n[r+1];break;default:r=e,s=i}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:a=e,o=2*i-t;break;case 2402:a=1,o=i+n[1]-n[0];break;default:a=e-1,o=t}let l=(i-t)*.5,h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-i),this._offsetPrev=r*h,this._offsetNext=a*h}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-t)/(n-t),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,_=d*m-d*f;for(let e=0;e!==s;++e)r[e]=g*a[h+e]+v*a[l+e]+y*a[o+e]+_*a[c+e];return r}}class si extends se{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(i-t)/(n-t),c=1-h;for(let e=0;e!==s;++e)r[e]=a[l+e]*c+a[o+e]*h;return r}}class sn extends se{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class sr{constructor(e,t,i,n){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=a7(t,this.TimeBufferType),this.values=a7(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){let t;let i=e.constructor;if(i.toJSON!==this.toJSON)t=i.toJSON(e);else{t={name:e.name,times:a7(e.times,Array),values:a7(e.values,Array)};let i=e.getInterpolation();i!==e.DefaultInterpolation&&(t.interpolation=i)}return t.type=e.ValueTypeName,t}InterpolantFactoryMethodDiscrete(e){return new sn(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new si(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new st(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(t)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){let i=this.times,n=i.length,r=0,a=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==a&&i[a]>t;)--a;if(++a,0!==r||a!==n){r>=a&&(r=(a=Math.max(a,1))-1);let e=this.getValueSize();this.times=i.slice(r,a),this.values=this.values.slice(r*e,a*e)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==r;t++){let n=i[t];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,n),e=!1;break}if(null!==a&&a>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,n,a),e=!1;break}a=n}if(void 0!==n&&ArrayBuffer.isView(n)&&!(n instanceof DataView))for(let t=0,i=n.length;t!==i;++t){let i=n[t];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,i),e=!1;break}}return e}optimize(){let e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=2302===this.getInterpolation(),r=e.length-1,a=1;for(let s=1;s<r;++s){let r=!1,o=e[s];if(o!==e[s+1]&&(1!==s||o!==e[0])){if(n)r=!0;else{let e=s*i,n=e-i,a=e+i;for(let s=0;s!==i;++s){let i=t[e+s];if(i!==t[n+s]||i!==t[a+s]){r=!0;break}}}}if(r){if(s!==a){e[a]=e[s];let n=s*i,r=a*i;for(let e=0;e!==i;++e)t[r+e]=t[n+e]}++a}}if(r>0){e[a]=e[r];for(let e=r*i,n=a*i,s=0;s!==i;++s)t[n+s]=t[e+s];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*i)):(this.times=e,this.values=t),this}clone(){let e=this.times.slice(),t=this.values.slice(),i=new this.constructor(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}sr.prototype.TimeBufferType=Float32Array,sr.prototype.ValueBufferType=Float32Array,sr.prototype.DefaultInterpolation=2301;class sa extends sr{constructor(e,t,i){super(e,t,i)}}sa.prototype.ValueTypeName="bool",sa.prototype.ValueBufferType=Array,sa.prototype.DefaultInterpolation=2300,sa.prototype.InterpolantFactoryMethodLinear=void 0,sa.prototype.InterpolantFactoryMethodSmooth=void 0;class ss extends sr{}ss.prototype.ValueTypeName="color";class so extends sr{}so.prototype.ValueTypeName="number";class sl extends se{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(i-t)/(n-t),l=e*s;for(let e=l+s;l!==e;l+=4)er.slerpFlat(r,0,a,l-s,a,l,o);return r}}class sh extends sr{InterpolantFactoryMethodLinear(e){return new sl(this.times,this.values,this.getValueSize(),e)}}sh.prototype.ValueTypeName="quaternion",sh.prototype.InterpolantFactoryMethodSmooth=void 0;class sc extends sr{constructor(e,t,i){super(e,t,i)}}sc.prototype.ValueTypeName="string",sc.prototype.ValueBufferType=Array,sc.prototype.DefaultInterpolation=2300,sc.prototype.InterpolantFactoryMethodLinear=void 0,sc.prototype.InterpolantFactoryMethodSmooth=void 0;class su extends sr{}su.prototype.ValueTypeName="vector";class sd{constructor(e="",t=-1,i=[],n=2500){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=A(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],i=e.tracks,n=1/(e.fps||1);for(let e=0,r=i.length;e!==r;++e)t.push((function(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return so;case"vector":case"vector2":case"vector3":case"vector4":return su;case"color":return ss;case"quaternion":return sh;case"bool":case"boolean":return sa;case"string":return sc}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){let t=[],i=[];a9(e.keys,t,i,"value"),e.times=t,e.values=i}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)})(i[e]).scale(n));let r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){let t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,n=i.length;e!==n;++e)t.push(sr.toJSON(i[e]));return n}static CreateFromMorphTargetSequence(e,t,i,n){let r=t.length,a=[];for(let e=0;e<r;e++){let s=[],o=[];s.push((e+r-1)%r,e,(e+1)%r),o.push(0,1,0);let l=function(e){let t=e.length,i=Array(t);for(let e=0;e!==t;++e)i[e]=e;return i.sort(function(t,i){return e[t]-e[i]}),i}(s);s=a8(s,1,l),o=a8(o,1,l),n||0!==s[0]||(s.push(r),o.push(o[0])),a.push(new so(".morphTargetInfluences["+t[e].name+"]",s,o).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;Array.isArray(e)||(i=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<i.length;e++)if(i[e].name===t)return i[e];return null}static CreateClipsFromMorphTargetSequences(e,t,i){let n={},r=/^([\w-]*?)([\d]+)$/;for(let t=0,i=e.length;t<i;t++){let i=e[t],a=i.name.match(r);if(a&&a.length>1){let e=a[1],t=n[e];t||(n[e]=t=[]),t.push(i)}}let a=[];for(let e in n)a.push(this.CreateFromMorphTargetSequence(e,n[e],t,i));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let i=function(e,t,i,n,r){if(0!==i.length){let a=[],s=[];a9(i,a,s,n),0!==a.length&&r.push(new e(t,a,s))}},n=[],r=e.name||"default",a=e.fps||30,s=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let e=0;e<l.length;e++){let r=l[e].keys;if(r&&0!==r.length){if(r[0].morphTargets){let e;let t={};for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let i=0;i<r[e].morphTargets.length;i++)t[r[e].morphTargets[i]]=-1;for(let i in t){let t=[],a=[];for(let n=0;n!==r[e].morphTargets.length;++n){let n=r[e];t.push(n.time),a.push(n.morphTarget===i?1:0)}n.push(new so(".morphTargetInfluence["+i+"]",t,a))}o=t.length*a}else{let a=".bones["+t[e].name+"]";i(su,a+".position",r,"pos",n),i(sh,a+".quaternion",r,"rot",n),i(su,a+".scale",r,"scl",n)}}}return 0===n.length?null:new this(r,o,n,s)}resetDuration(){let e=this.tracks,t=0;for(let i=0,n=e.length;i!==n;++i){let e=this.tracks[i];t=Math.max(t,e.times[e.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}let sp={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]}};class sf{constructor(e,t,i){let n;let r=this,a=!1,s=0,o=0,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){o++,!1===a&&void 0!==r.onStart&&r.onStart(e,s,o),a=!0},this.itemEnd=function(e){s++,void 0!==r.onProgress&&r.onProgress(e,s,o),s===o&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return n?n(e):e},this.setURLModifier=function(e){return n=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){let i=l[t],n=l[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return n}return null}}}let sm=new sf;class sg{constructor(e){this.manager=void 0!==e?e:sm,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}sg.DEFAULT_MATERIAL_NAME="__DEFAULT";let sv={};class sy extends Error{constructor(e,t){super(e),this.response=t}}class s_ extends sg{constructor(e){super(e)}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=sp.get(e);if(void 0!==r)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(void 0!==sv[e]){sv[e].push({onLoad:t,onProgress:i,onError:n});return}sv[e]=[],sv[e].push({onLoad:t,onProgress:i,onError:n});let a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),s=this.mimeType,o=this.responseType;fetch(a).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;let i=sv[e],n=t.body.getReader(),r=t.headers.get("X-File-Size")||t.headers.get("Content-Length"),a=r?parseInt(r):0,s=0!==a,o=0;return new Response(new ReadableStream({start(e){(function t(){n.read().then(({done:n,value:r})=>{if(n)e.close();else{let n=new ProgressEvent("progress",{lengthComputable:s,loaded:o+=r.byteLength,total:a});for(let e=0,t=i.length;e<t;e++){let t=i[e];t.onProgress&&t.onProgress(n)}e.enqueue(r),t()}},t=>{e.error(t)})})()}}))}throw new sy(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>new DOMParser().parseFromString(e,s));case"json":return e.json();default:if(void 0===s)return e.text();{let t=/charset="?([^;"\s]*)"?/i.exec(s),i=new TextDecoder(t&&t[1]?t[1].toLowerCase():void 0);return e.arrayBuffer().then(e=>i.decode(e))}}}).then(t=>{sp.add(e,t);let i=sv[e];delete sv[e];for(let e=0,n=i.length;e<n;e++){let n=i[e];n.onLoad&&n.onLoad(t)}}).catch(t=>{let i=sv[e];if(void 0===i)throw this.manager.itemError(e),t;delete sv[e];for(let e=0,n=i.length;e<n;e++){let n=i[e];n.onError&&n.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class sx extends sg{constructor(e){super(e)}load(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=sp.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;let s=z("img");function o(){h(),sp.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){h(),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(e),s.src=e,s}}class sb extends sg{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new rG,s=new s_(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(r.withCredentials),s.load(e,function(e){let i;try{i=r.parse(e)}catch(e){if(void 0!==n)n(e);else{console.error(e);return}}void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:u,a.wrapT=void 0!==i.wrapT?i.wrapT:u,a.magFilter=void 0!==i.magFilter?i.magFilter:1006,a.minFilter=void 0!==i.minFilter?i.minFilter:1006,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.colorSpace&&(a.colorSpace=i.colorSpace),void 0!==i.flipY&&(a.flipY=i.flipY),void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps,a.minFilter=d),1===i.mipmapCount&&(a.minFilter=1006),void 0!==i.generateMipmaps&&(a.generateMipmaps=i.generateMipmaps),a.needsUpdate=!0,t&&t(a,i)},i,n),a}}class sM extends sg{constructor(e){super(e)}load(e,t,i,n){let r=new $,a=new sx(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)},i,n),r}}class sw extends e8{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new tf(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(t.object.target=this.target.uuid),t}}class sS extends sw{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(e8.DEFAULT_UP),this.updateMatrix(),this.groundColor=new tf(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}let sE=new eO,sT=new ea,sA=new ea;class sC{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new U(512,512),this.map=null,this.mapPass=null,this.matrix=new eO,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ih,this._frameExtents=new U(1,1),this._viewportCount=1,this._viewports=[new ee(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;sT.setFromMatrixPosition(e.matrixWorld),t.position.copy(sT),sA.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(sA),t.updateMatrixWorld(),sE.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(sE),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(sE)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 1!==this.intensity&&(e.intensity=this.intensity),0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class sR extends sC{constructor(){super(new t8(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){let t=this.camera,i=2*T*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(i!==t.fov||n!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class sP extends sw{constructor(e,t,i=0,n=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(e8.DEFAULT_UP),this.updateMatrix(),this.target=new e8,this.distance=i,this.angle=n,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new sR}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}let sL=new eO,sN=new ea,sI=new ea;class sU extends sC{constructor(){super(new t8(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new U(4,2),this._viewportCount=6,this._viewports=[new ee(2,1,1,1),new ee(0,1,1,1),new ee(3,1,1,1),new ee(1,1,1,1),new ee(3,0,1,1),new ee(1,0,1,1)],this._cubeDirections=[new ea(1,0,0),new ea(-1,0,0),new ea(0,0,1),new ea(0,0,-1),new ea(0,1,0),new ea(0,-1,0)],this._cubeUps=[new ea(0,1,0),new ea(0,1,0),new ea(0,1,0),new ea(0,1,0),new ea(0,0,1),new ea(0,0,-1)]}updateMatrices(e,t=0){let i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),sN.setFromMatrixPosition(e.matrixWorld),i.position.copy(sN),sI.copy(i.position),sI.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(sI),i.updateMatrixWorld(),n.makeTranslation(-sN.x,-sN.y,-sN.z),sL.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(sL)}}class sO extends sw{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new sU}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class sD extends sC{constructor(){super(new iT(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class sF extends sw{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(e8.DEFAULT_UP),this.updateMatrix(),this.target=new e8,this.shadow=new sD}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class sz extends sw{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class sB{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),"undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e))?e:t+e}}let sk="\\[\\]\\.:\\/",sV=RegExp("["+sk+"]","g"),sH="[^"+sk+"]",sG="[^"+sk.replace("\\.","")+"]",sW=/((?:WC+[\/:])*)/.source.replace("WC",sH),sj=RegExp("^"+sW+/(WCOD+)?/.source.replace("WCOD",sG)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",sH)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",sH)+"$"),sq=["material","materials","bones","map"];class sX{constructor(e,t,i){this.path=t,this.parsedPath=i||sX.parseTrackName(t),this.node=sX.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new sX.Composite(e,t,i):new sX(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(sV,"")}static parseTrackName(e){let t=sj.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){let e=i.nodeName.substring(n+1);-1!==sq.indexOf(e)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=e)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){let i=function(e){for(let n=0;n<e.length;n++){let r=e[n];if(r.name===t||r.uuid===t)return r;let a=i(r.children);if(a)return a}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,n=t.propertyName,r=t.propertyIndex;if(e||(e=sX.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let n=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(void 0===e[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(void 0!==n){if(void 0===e[n]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[n]}}let a=e[n];if(void 0===a){console.error("THREE.PropertyBinding: Trying to update property for track: "+t.nodeName+"."+n+" but it wasn't found.",e);return}let s=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=n;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}sX.Composite=class{constructor(e,t,i){let n=i||sX.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();let i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)}setValue(e,t){let i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},sX.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},sX.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},sX.prototype.GetterByBindingType=[sX.prototype._getValue_direct,sX.prototype._getValue_array,sX.prototype._getValue_arrayElement,sX.prototype._getValue_toArray],sX.prototype.SetterByBindingTypeAndVersioning=[[sX.prototype._setValue_direct,sX.prototype._setValue_direct_setNeedsUpdate,sX.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[sX.prototype._setValue_array,sX.prototype._setValue_array_setNeedsUpdate,sX.prototype._setValue_array_setMatrixWorldNeedsUpdate],[sX.prototype._setValue_arrayElement,sX.prototype._setValue_arrayElement_setNeedsUpdate,sX.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[sX.prototype._setValue_fromArray,sX.prototype._setValue_fromArray_setNeedsUpdate,sX.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);let sY=new eO;class sJ{constructor(e,t,i=0,n=1/0){this.ray=new eU(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new eq,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return sY.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(sY),this}intersectObject(e,t=!0,i=[]){return sK(e,this,i,t),i.sort(sZ),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)sK(e[n],this,i,t);return i.sort(sZ),i}}function sZ(e,t){return e.distance-t.distance}function sK(e,t,i,n){let r=!0;if(e.layers.test(t.layers)&&!1===e.raycast(t,i)&&(r=!1),!0===r&&!0===n){let n=e.children;for(let e=0,r=n.length;e<r;e++)sK(n[e],t,i,!0)}}class sQ{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(C(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class s$ extends r5{constructor(e=10,t=16,i=8,n=64,r=4473924,a=8947848){r=new tf(r),a=new tf(a);let s=[],o=[];if(t>1)for(let i=0;i<t;i++){let n=i/t*(2*Math.PI),l=Math.sin(n)*e,h=Math.cos(n)*e;s.push(0,0,0),s.push(l,0,h);let c=1&i?r:a;o.push(c.r,c.g,c.b),o.push(c.r,c.g,c.b)}for(let t=0;t<i;t++){let l=1&t?r:a,h=e-e/i*t;for(let e=0;e<n;e++){let t=e/n*(2*Math.PI),i=Math.sin(t)*h,r=Math.cos(t)*h;s.push(i,0,r),o.push(l.r,l.g,l.b),i=Math.sin(t=(e+1)/n*(2*Math.PI))*h,r=Math.cos(t)*h,s.push(i,0,r),o.push(l.r,l.g,l.b)}}let l=new tN;l.setAttribute("position",new tS(s,3)),l.setAttribute("color",new tS(o,3)),super(l,new rX({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}let s0=new ea;class s1 extends e8{constructor(e=new ea(0,0,1),t=new ea(0,0,0),i=1,a=16776960,s=.2*i,o=.2*s){super(),this.type="ArrowHelper",void 0===n&&((n=new tN).setAttribute("position",new tS([0,0,0,0,1,0],3)),(r=new aS(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new r1(n,new rX({color:a,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new tZ(r,new ty({color:a,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{s0.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(s0,t)}}setLength(e,t=.2*e,i=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"166"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="166")}),E("71kF2",function(e,t){_(e.exports,"traverse",()=>function e(t,i,n="children"){if(i(t)||!t[n])return;let r=t[n];for(let t=0;t<r.length;t++)e(r[t],i,n)}),S("ilwiq")}),E("59kwG",function(e,t){var i=S("hPtJY");function n(e){if("string"!=typeof e)throw TypeError("Path must be a string. Received "+JSON.stringify(e))}function r(e,t){for(var i,n="",r=0,a=-1,s=0,o=0;o<=e.length;++o){if(o<e.length)i=e.charCodeAt(o);else if(47===i)break;else i=47;if(47===i){if(a===o-1||1===s);else if(a!==o-1&&2===s){if(n.length<2||2!==r||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2)){if(n.length>2){var l=n.lastIndexOf("/");if(l!==n.length-1){-1===l?(n="",r=0):r=(n=n.slice(0,l)).length-1-n.lastIndexOf("/"),a=o,s=0;continue}}else if(2===n.length||1===n.length){n="",r=0,a=o,s=0;continue}}t&&(n.length>0?n+="/..":n="..",r=2)}else n.length>0?n+="/"+e.slice(a+1,o):n=e.slice(a+1,o),r=o-a-1;a=o,s=0}else 46===i&&-1!==s?++s:s=-1}return n}var a={resolve:function(){for(var e,t,a="",s=!1,o=arguments.length-1;o>=-1&&!s;o--)o>=0?t=arguments[o]:(void 0===e&&(e=i.cwd()),t=e),n(t),0!==t.length&&(a=t+"/"+a,s=47===t.charCodeAt(0));return(a=r(a,!s),s)?a.length>0?"/"+a:"/":a.length>0?a:"."},normalize:function(e){if(n(e),0===e.length)return".";var t=47===e.charCodeAt(0),i=47===e.charCodeAt(e.length-1);return(0!==(e=r(e,!t)).length||t||(e="."),e.length>0&&i&&(e+="/"),t)?"/"+e:e},isAbsolute:function(e){return n(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0==arguments.length)return".";for(var e,t=0;t<arguments.length;++t){var i=arguments[t];n(i),i.length>0&&(void 0===e?e=i:e+="/"+i)}return void 0===e?".":a.normalize(e)},relative:function(e,t){if(n(e),n(t),e===t||(e=a.resolve(e))===(t=a.resolve(t)))return"";for(var i=1;i<e.length&&47===e.charCodeAt(i);++i);for(var r=e.length,s=r-i,o=1;o<t.length&&47===t.charCodeAt(o);++o);for(var l=t.length-o,h=s<l?s:l,c=-1,u=0;u<=h;++u){if(u===h){if(l>h){if(47===t.charCodeAt(o+u))return t.slice(o+u+1);if(0===u)return t.slice(o+u)}else s>h&&(47===e.charCodeAt(i+u)?c=u:0===u&&(c=0));break}var d=e.charCodeAt(i+u);if(d!==t.charCodeAt(o+u))break;47===d&&(c=u)}var p="";for(u=i+c+1;u<=r;++u)(u===r||47===e.charCodeAt(u))&&(0===p.length?p+="..":p+="/..");return p.length>0?p+t.slice(o+c):(o+=c,47===t.charCodeAt(o)&&++o,t.slice(o))},_makeLong:function(e){return e},dirname:function(e){if(n(e),0===e.length)return".";for(var t=e.charCodeAt(0),i=47===t,r=-1,a=!0,s=e.length-1;s>=1;--s)if(47===(t=e.charCodeAt(s))){if(!a){r=s;break}}else a=!1;return -1===r?i?"/":".":i&&1===r?"//":e.slice(0,r)},basename:function(e,t){if(void 0!==t&&"string"!=typeof t)throw TypeError('"ext" argument must be a string');n(e);var i,r=0,a=-1,s=!0;if(void 0!==t&&t.length>0&&t.length<=e.length){if(t.length===e.length&&t===e)return"";var o=t.length-1,l=-1;for(i=e.length-1;i>=0;--i){var h=e.charCodeAt(i);if(47===h){if(!s){r=i+1;break}}else -1===l&&(s=!1,l=i+1),o>=0&&(h===t.charCodeAt(o)?-1==--o&&(a=i):(o=-1,a=l))}return r===a?a=l:-1===a&&(a=e.length),e.slice(r,a)}for(i=e.length-1;i>=0;--i)if(47===e.charCodeAt(i)){if(!s){r=i+1;break}}else -1===a&&(s=!1,a=i+1);return -1===a?"":e.slice(r,a)},extname:function(e){n(e);for(var t=-1,i=0,r=-1,a=!0,s=0,o=e.length-1;o>=0;--o){var l=e.charCodeAt(o);if(47===l){if(!a){i=o+1;break}continue}-1===r&&(a=!1,r=o+1),46===l?-1===t?t=o:1!==s&&(s=1):-1!==t&&(s=-1)}return -1===t||-1===r||0===s||1===s&&t===r-1&&t===i+1?"":e.slice(t,r)},format:function(e){var t,i;if(null===e||"object"!=typeof e)throw TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return t=e.dir||e.root,i=e.base||(e.name||"")+(e.ext||""),t?t===e.root?t+i:t+"/"+i:i},parse:function(e){n(e);var t,i={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return i;var r=e.charCodeAt(0),a=47===r;a?(i.root="/",t=1):t=0;for(var s=-1,o=0,l=-1,h=!0,c=e.length-1,u=0;c>=t;--c){if(47===(r=e.charCodeAt(c))){if(!h){o=c+1;break}continue}-1===l&&(h=!1,l=c+1),46===r?-1===s?s=c:1!==u&&(u=1):-1!==s&&(u=-1)}return -1===s||-1===l||0===u||1===u&&s===l-1&&s===o+1?-1!==l&&(0===o&&a?i.base=i.name=e.slice(1,l):i.base=i.name=e.slice(o,l)):(0===o&&a?(i.name=e.slice(1,s),i.base=e.slice(1,l)):(i.name=e.slice(o,s),i.base=e.slice(o,l)),i.ext=e.slice(s,l)),o>0?i.dir=e.slice(0,o-1):a&&(i.dir="/"),i},sep:"/",delimiter:":",win32:null,posix:null};a.posix=a,e.exports=a}),E("hPtJY",function(e,t){var i,n,r,a=e.exports={};function s(){throw Error("setTimeout has not been defined")}function o(){throw Error("clearTimeout has not been defined")}function l(e){if(i===setTimeout)return setTimeout(e,0);if((i===s||!i)&&setTimeout)return i=setTimeout,setTimeout(e,0);try{return i(e,0)}catch(t){try{return i.call(null,e,0)}catch(t){return i.call(this,e,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:s}catch(e){i=s}try{n="function"==typeof clearTimeout?clearTimeout:o}catch(e){n=o}}();var h=[],c=!1,u=-1;function d(){c&&r&&(c=!1,r.length?h=r.concat(h):u=-1,h.length&&p())}function p(){if(!c){var e=l(d);c=!0;for(var t=h.length;t;){for(r=h,h=[];++u<t;)r&&r[u].run();u=-1,t=h.length}r=null,c=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===o||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)t[i-1]=arguments[i];h.push(new f(e,t)),1!==h.length||c||l(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw Error("process.chdir is not supported")},a.umask=function(){return 0}});var T=S("ilwiq");class A{constructor(e){void 0===e&&(e=[0,0,0,0,0,0,0,0,0]),this.elements=e}identity(){let e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1}setZero(){let e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0}setTrace(e){let t=this.elements;t[0]=e.x,t[4]=e.y,t[8]=e.z}getTrace(e){void 0===e&&(e=new R);let t=this.elements;return e.x=t[0],e.y=t[4],e.z=t[8],e}vmult(e,t){void 0===t&&(t=new R);let i=this.elements,n=e.x,r=e.y,a=e.z;return t.x=i[0]*n+i[1]*r+i[2]*a,t.y=i[3]*n+i[4]*r+i[5]*a,t.z=i[6]*n+i[7]*r+i[8]*a,t}smult(e){for(let t=0;t<this.elements.length;t++)this.elements[t]*=e}mmult(e,t){void 0===t&&(t=new A);let i=this.elements,n=e.elements,r=t.elements,a=i[0],s=i[1],o=i[2],l=i[3],h=i[4],c=i[5],u=i[6],d=i[7],p=i[8],f=n[0],m=n[1],g=n[2],v=n[3],y=n[4],_=n[5],x=n[6],b=n[7],M=n[8];return r[0]=a*f+s*v+o*x,r[1]=a*m+s*y+o*b,r[2]=a*g+s*_+o*M,r[3]=l*f+h*v+c*x,r[4]=l*m+h*y+c*b,r[5]=l*g+h*_+c*M,r[6]=u*f+d*v+p*x,r[7]=u*m+d*y+p*b,r[8]=u*g+d*_+p*M,t}scale(e,t){void 0===t&&(t=new A);let i=this.elements,n=t.elements;for(let t=0;3!==t;t++)n[3*t+0]=e.x*i[3*t+0],n[3*t+1]=e.y*i[3*t+1],n[3*t+2]=e.z*i[3*t+2];return t}solve(e,t){let i,n,r,a;void 0===t&&(t=new R);let s=[];for(i=0;i<12;i++)s.push(0);for(i=0;i<3;i++)for(n=0;n<3;n++)s[i+4*n]=this.elements[i+3*n];s[3]=e.x,s[7]=e.y,s[11]=e.z;let o=3;do{if(0===s[(i=3-o)+4*i]){for(n=i+1;n<3;n++)if(0!==s[i+4*n]){r=4;do a=4-r,s[a+4*i]+=s[a+4*n];while(--r)break}}if(0!==s[i+4*i])for(n=i+1;n<3;n++){let e=s[i+4*n]/s[i+4*i];r=4;do s[(a=4-r)+4*n]=a<=i?0:s[a+4*n]-s[a+4*i]*e;while(--r)}}while(--o)if(t.z=s[11]/s[10],t.y=(s[7]-s[6]*t.z)/s[5],t.x=(s[3]-s[2]*t.z-s[1]*t.y)/s[0],isNaN(t.x)||isNaN(t.y)||isNaN(t.z)||t.x===1/0||t.y===1/0||t.z===1/0)throw`Could not solve equation! Got x=[${t.toString()}], b=[${e.toString()}], A=[${this.toString()}]`;return t}e(e,t,i){if(void 0===i)return this.elements[t+3*e];this.elements[t+3*e]=i}copy(e){for(let t=0;t<e.elements.length;t++)this.elements[t]=e.elements[t];return this}toString(){let e="";for(let t=0;t<9;t++)e+=this.elements[t]+",";return e}reverse(e){let t,i,n,r;for(void 0===e&&(e=new A),t=0;t<3;t++)for(i=0;i<3;i++)C[t+6*i]=this.elements[t+3*i];C[3]=1,C[9]=0,C[15]=0,C[4]=0,C[10]=1,C[16]=0,C[5]=0,C[11]=0,C[17]=1;let a=3;do{if(0===C[(t=3-a)+6*t]){for(i=t+1;i<3;i++)if(0!==C[t+6*i]){n=6;do r=6-n,C[r+6*t]+=C[r+6*i];while(--n)break}}if(0!==C[t+6*t])for(i=t+1;i<3;i++){let e=C[t+6*i]/C[t+6*t];n=6;do C[(r=6-n)+6*i]=r<=t?0:C[r+6*i]-C[r+6*t]*e;while(--n)}}while(--a)t=2;do{i=t-1;do{let e=C[t+6*i]/C[t+6*t];n=6;do C[(r=6-n)+6*i]=C[r+6*i]-C[r+6*t]*e;while(--n)}while(i--)}while(--t)t=2;do{let e=1/C[t+6*t];n=6;do C[(r=6-n)+6*t]=C[r+6*t]*e;while(--n)}while(t--)t=2;do{i=2;do{if(isNaN(r=C[3+i+6*t])||r===1/0)throw`Could not reverse! A=[${this.toString()}]`;e.e(t,i,r)}while(i--)}while(t--)return e}setRotationFromQuaternion(e){let t=e.x,i=e.y,n=e.z,r=e.w,a=t+t,s=i+i,o=n+n,l=t*a,h=t*s,c=t*o,u=i*s,d=i*o,p=n*o,f=r*a,m=r*s,g=r*o,v=this.elements;return v[0]=1-(u+p),v[1]=h-g,v[2]=c+m,v[3]=h+g,v[4]=1-(l+p),v[5]=d-f,v[6]=c-m,v[7]=d+f,v[8]=1-(l+u),this}transpose(e){let t;void 0===e&&(e=new A);let i=this.elements,n=e.elements;return n[0]=i[0],n[4]=i[4],n[8]=i[8],t=i[1],n[1]=i[3],n[3]=t,t=i[2],n[2]=i[6],n[6]=t,t=i[5],n[5]=i[7],n[7]=t,e}}const C=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class R{constructor(e,t,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===i&&(i=0),this.x=e,this.y=t,this.z=i}cross(e,t){void 0===t&&(t=new R);let i=e.x,n=e.y,r=e.z,a=this.x,s=this.y,o=this.z;return t.x=s*r-o*n,t.y=o*i-a*r,t.z=a*n-s*i,t}set(e,t,i){return this.x=e,this.y=t,this.z=i,this}setZero(){this.x=this.y=this.z=0}vadd(e,t){if(!t)return new R(this.x+e.x,this.y+e.y,this.z+e.z);t.x=e.x+this.x,t.y=e.y+this.y,t.z=e.z+this.z}vsub(e,t){if(!t)return new R(this.x-e.x,this.y-e.y,this.z-e.z);t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z}crossmat(){return new A([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){let e=this.x,t=this.y,i=this.z,n=Math.sqrt(e*e+t*t+i*i);if(n>0){let e=1/n;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return n}unit(e){void 0===e&&(e=new R);let t=this.x,i=this.y,n=this.z,r=Math.sqrt(t*t+i*i+n*n);return r>0?(r=1/r,e.x=t*r,e.y=i*r,e.z=n*r):(e.x=1,e.y=0,e.z=0),e}length(){let e=this.x,t=this.y,i=this.z;return Math.sqrt(e*e+t*t+i*i)}lengthSquared(){return this.dot(this)}distanceTo(e){let t=this.x,i=this.y,n=this.z,r=e.x,a=e.y,s=e.z;return Math.sqrt((r-t)*(r-t)+(a-i)*(a-i)+(s-n)*(s-n))}distanceSquared(e){let t=this.x,i=this.y,n=this.z,r=e.x,a=e.y,s=e.z;return(r-t)*(r-t)+(a-i)*(a-i)+(s-n)*(s-n)}scale(e,t){void 0===t&&(t=new R);let i=this.x,n=this.y,r=this.z;return t.x=e*i,t.y=e*n,t.z=e*r,t}vmul(e,t){return void 0===t&&(t=new R),t.x=e.x*this.x,t.y=e.y*this.y,t.z=e.z*this.z,t}addScaledVector(e,t,i){return void 0===i&&(i=new R),i.x=this.x+e*t.x,i.y=this.y+e*t.y,i.z=this.z+e*t.z,i}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}isZero(){return 0===this.x&&0===this.y&&0===this.z}negate(e){return void 0===e&&(e=new R),e.x=-this.x,e.y=-this.y,e.z=-this.z,e}tangents(e,t){let i=this.length();if(i>0){let n=1/i;P.set(this.x*n,this.y*n,this.z*n),.9>Math.abs(P.x)?L.set(1,0,0):L.set(0,1,0),P.cross(L,e),P.cross(e,t)}else e.set(1,0,0),t.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}lerp(e,t,i){let n=this.x,r=this.y,a=this.z;i.x=n+(e.x-n)*t,i.y=r+(e.y-r)*t,i.z=a+(e.z-a)*t}almostEquals(e,t){return void 0===t&&(t=1e-6),!(Math.abs(this.x-e.x)>t||Math.abs(this.y-e.y)>t||Math.abs(this.z-e.z)>t)}almostZero(e){return void 0===e&&(e=1e-6),!(Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e)}isAntiparallelTo(e,t){return this.negate(N),N.almostEquals(e,t)}clone(){return new R(this.x,this.y,this.z)}}R.ZERO=new R(0,0,0),R.UNIT_X=new R(1,0,0),R.UNIT_Y=new R(0,1,0),R.UNIT_Z=new R(0,0,1);const P=new R,L=new R,N=new R;class I{constructor(e){void 0===e&&(e={}),this.lowerBound=new R,this.upperBound=new R,e.lowerBound&&this.lowerBound.copy(e.lowerBound),e.upperBound&&this.upperBound.copy(e.upperBound)}setFromPoints(e,t,i,n){let r=this.lowerBound,a=this.upperBound;r.copy(e[0]),i&&i.vmult(r,r),a.copy(r);for(let t=1;t<e.length;t++){let n=e[t];i&&(i.vmult(n,U),n=U),n.x>a.x&&(a.x=n.x),n.x<r.x&&(r.x=n.x),n.y>a.y&&(a.y=n.y),n.y<r.y&&(r.y=n.y),n.z>a.z&&(a.z=n.z),n.z<r.z&&(r.z=n.z)}return t&&(t.vadd(r,r),t.vadd(a,a)),n&&(r.x-=n,r.y-=n,r.z-=n,a.x+=n,a.y+=n,a.z+=n),this}copy(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this}clone(){return new I().copy(this)}extend(e){this.lowerBound.x=Math.min(this.lowerBound.x,e.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,e.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,e.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,e.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,e.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,e.upperBound.z)}overlaps(e){let t=this.lowerBound,i=this.upperBound,n=e.lowerBound,r=e.upperBound,a=n.x<=i.x&&i.x<=r.x||t.x<=r.x&&r.x<=i.x,s=n.y<=i.y&&i.y<=r.y||t.y<=r.y&&r.y<=i.y,o=n.z<=i.z&&i.z<=r.z||t.z<=r.z&&r.z<=i.z;return a&&s&&o}volume(){let e=this.lowerBound,t=this.upperBound;return(t.x-e.x)*(t.y-e.y)*(t.z-e.z)}contains(e){let t=this.lowerBound,i=this.upperBound,n=e.lowerBound,r=e.upperBound;return t.x<=n.x&&i.x>=r.x&&t.y<=n.y&&i.y>=r.y&&t.z<=n.z&&i.z>=r.z}getCorners(e,t,i,n,r,a,s,o){let l=this.lowerBound,h=this.upperBound;e.copy(l),t.set(h.x,l.y,l.z),i.set(h.x,h.y,l.z),n.set(l.x,h.y,h.z),r.set(h.x,l.y,h.z),a.set(l.x,h.y,l.z),s.set(l.x,l.y,h.z),o.copy(h)}toLocalFrame(e,t){let i=O[0],n=O[1],r=O[2],a=O[3],s=O[4],o=O[5],l=O[6],h=O[7];this.getCorners(i,n,r,a,s,o,l,h);for(let t=0;8!==t;t++){let i=O[t];e.pointToLocal(i,i)}return t.setFromPoints(O)}toWorldFrame(e,t){let i=O[0],n=O[1],r=O[2],a=O[3],s=O[4],o=O[5],l=O[6],h=O[7];this.getCorners(i,n,r,a,s,o,l,h);for(let t=0;8!==t;t++){let i=O[t];e.pointToWorld(i,i)}return t.setFromPoints(O)}overlapsRay(e){let{direction:t,from:i}=e,n=1/t.x,r=1/t.y,a=1/t.z,s=(this.lowerBound.x-i.x)*n,o=(this.upperBound.x-i.x)*n,l=(this.lowerBound.y-i.y)*r,h=(this.upperBound.y-i.y)*r,c=(this.lowerBound.z-i.z)*a,u=(this.upperBound.z-i.z)*a,d=Math.max(Math.max(Math.min(s,o),Math.min(l,h)),Math.min(c,u)),p=Math.min(Math.min(Math.max(s,o),Math.max(l,h)),Math.max(c,u));return!(p<0)&&!(d>p)}}const U=new R,O=[new R,new R,new R,new R,new R,new R,new R,new R];class D{constructor(){this.matrix=[]}get(e,t){let{index:i}=e,{index:n}=t;if(n>i){let e=n;n=i,i=e}return this.matrix[(i*(i+1)>>1)+n-1]}set(e,t,i){let{index:n}=e,{index:r}=t;if(r>n){let e=r;r=n,n=e}this.matrix[(n*(n+1)>>1)+r-1]=i?1:0}reset(){for(let e=0,t=this.matrix.length;e!==t;e++)this.matrix[e]=0}setNumObjects(e){this.matrix.length=e*(e-1)>>1}}class F{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;return void 0===i[e]&&(i[e]=[]),i[e].includes(t)||i[e].push(t),this}hasEventListener(e,t){if(void 0===this._listeners)return!1;let i=this._listeners;return!!(void 0!==i[e]&&i[e].includes(t))}hasAnyEventListener(e){return void 0!==this._listeners&&void 0!==this._listeners[e]}removeEventListener(e,t){if(void 0===this._listeners)return this;let i=this._listeners;if(void 0===i[e])return this;let n=i[e].indexOf(t);return -1!==n&&i[e].splice(n,1),this}dispatchEvent(e){if(void 0===this._listeners)return this;let t=this._listeners[e.type];if(void 0!==t){e.target=this;for(let i=0,n=t.length;i<n;i++)t[i].call(this,e)}return this}}class z{constructor(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===i&&(i=0),void 0===n&&(n=1),this.x=e,this.y=t,this.z=i,this.w=n}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(e,t){let i=Math.sin(.5*t);return this.x=e.x*i,this.y=e.y*i,this.z=e.z*i,this.w=Math.cos(.5*t),this}toAxisAngle(e){void 0===e&&(e=new R),this.normalize();let t=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/i,e.y=this.y/i,e.z=this.z/i),[e,t]}setFromVectors(e,t){if(e.isAntiparallelTo(t))e.tangents(B,k),this.setFromAxisAngle(B,Math.PI);else{let i=e.cross(t);this.x=i.x,this.y=i.y,this.z=i.z,this.w=Math.sqrt(e.length()**2*t.length()**2)+e.dot(t),this.normalize()}return this}mult(e,t){void 0===t&&(t=new z);let i=this.x,n=this.y,r=this.z,a=this.w,s=e.x,o=e.y,l=e.z,h=e.w;return t.x=i*h+a*s+n*l-r*o,t.y=n*h+a*o+r*s-i*l,t.z=r*h+a*l+i*o-n*s,t.w=a*h-i*s-n*o-r*l,t}inverse(e){void 0===e&&(e=new z);let t=this.x,i=this.y,n=this.z,r=this.w;this.conjugate(e);let a=1/(t*t+i*i+n*n+r*r);return e.x*=a,e.y*=a,e.z*=a,e.w*=a,e}conjugate(e){return void 0===e&&(e=new z),e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e}normalize(){let e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}normalizeFast(){let e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}vmult(e,t){void 0===t&&(t=new R);let i=e.x,n=e.y,r=e.z,a=this.x,s=this.y,o=this.z,l=this.w,h=l*i+s*r-o*n,c=l*n+o*i-a*r,u=l*r+a*n-s*i,d=-a*i-s*n-o*r;return t.x=h*l+-(d*a)+-(c*o)- -(u*s),t.y=c*l+-(d*s)+-(u*a)- -(h*o),t.z=u*l+-(d*o)+-(h*s)- -(c*a),t}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}toEuler(e,t){let i,n,r;void 0===t&&(t="YZX");let a=this.x,s=this.y,o=this.z,l=this.w;if("YZX"===t){let e=a*s+o*l;if(e>.499&&(i=2*Math.atan2(a,l),n=Math.PI/2,r=0),e<-.499&&(i=-2*Math.atan2(a,l),n=-Math.PI/2,r=0),void 0===i){let t=o*o;i=Math.atan2(2*s*l-2*a*o,1-s*s*2-2*t),n=Math.asin(2*e),r=Math.atan2(2*a*l-2*s*o,1-a*a*2-2*t)}}else throw Error(`Euler order ${t} not supported yet.`);e.y=i,e.z=n,e.x=r}setFromEuler(e,t,i,n){void 0===n&&(n="XYZ");let r=Math.cos(e/2),a=Math.cos(t/2),s=Math.cos(i/2),o=Math.sin(e/2),l=Math.sin(t/2),h=Math.sin(i/2);return"XYZ"===n?(this.x=o*a*s+r*l*h,this.y=r*l*s-o*a*h,this.z=r*a*h+o*l*s,this.w=r*a*s-o*l*h):"YXZ"===n?(this.x=o*a*s+r*l*h,this.y=r*l*s-o*a*h,this.z=r*a*h-o*l*s,this.w=r*a*s+o*l*h):"ZXY"===n?(this.x=o*a*s-r*l*h,this.y=r*l*s+o*a*h,this.z=r*a*h+o*l*s,this.w=r*a*s-o*l*h):"ZYX"===n?(this.x=o*a*s-r*l*h,this.y=r*l*s+o*a*h,this.z=r*a*h-o*l*s,this.w=r*a*s+o*l*h):"YZX"===n?(this.x=o*a*s+r*l*h,this.y=r*l*s+o*a*h,this.z=r*a*h-o*l*s,this.w=r*a*s-o*l*h):"XZY"===n&&(this.x=o*a*s-r*l*h,this.y=r*l*s-o*a*h,this.z=r*a*h+o*l*s,this.w=r*a*s+o*l*h),this}clone(){return new z(this.x,this.y,this.z,this.w)}slerp(e,t,i){let n,r,a,s,o;void 0===i&&(i=new z);let l=this.x,h=this.y,c=this.z,u=this.w,d=e.x,p=e.y,f=e.z,m=e.w;return(r=l*d+h*p+c*f+u*m)<0&&(r=-r,d=-d,p=-p,f=-f,m=-m),1-r>1e-6?(a=Math.sin(n=Math.acos(r)),s=Math.sin((1-t)*n)/a,o=Math.sin(t*n)/a):(s=1-t,o=t),i.x=s*l+o*d,i.y=s*h+o*p,i.z=s*c+o*f,i.w=s*u+o*m,i}integrate(e,t,i,n){void 0===n&&(n=new z);let r=e.x*i.x,a=e.y*i.y,s=e.z*i.z,o=this.x,l=this.y,h=this.z,c=this.w,u=.5*t;return n.x+=u*(r*c+a*h-s*l),n.y+=u*(a*c+s*o-r*h),n.z+=u*(s*c+r*l-a*o),n.w+=u*(-r*o-a*l-s*h),n}}const B=new R,k=new R;class V{constructor(e){void 0===e&&(e={}),this.id=V.idCounter++,this.type=e.type||0,this.boundingSphereRadius=0,this.collisionResponse=!e.collisionResponse||e.collisionResponse,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.material=e.material?e.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(e,t){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(e,t,i,n){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}V.idCounter=0,V.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class H{constructor(e){void 0===e&&(e={}),this.position=new R,this.quaternion=new z,e.position&&this.position.copy(e.position),e.quaternion&&this.quaternion.copy(e.quaternion)}pointToLocal(e,t){return H.pointToLocalFrame(this.position,this.quaternion,e,t)}pointToWorld(e,t){return H.pointToWorldFrame(this.position,this.quaternion,e,t)}vectorToWorldFrame(e,t){return void 0===t&&(t=new R),this.quaternion.vmult(e,t),t}static pointToLocalFrame(e,t,i,n){return void 0===n&&(n=new R),i.vsub(e,n),t.conjugate(G),G.vmult(n,n),n}static pointToWorldFrame(e,t,i,n){return void 0===n&&(n=new R),t.vmult(i,n),n.vadd(e,n),n}static vectorToWorldFrame(e,t,i){return void 0===i&&(i=new R),e.vmult(t,i),i}static vectorToLocalFrame(e,t,i,n){return void 0===n&&(n=new R),t.w*=-1,t.vmult(i,n),t.w*=-1,n}}const G=new z;class W extends V{constructor(e){void 0===e&&(e={});let{vertices:t=[],faces:i=[],normals:n=[],axes:r,boundingSphereRadius:a}=e;super({type:V.types.CONVEXPOLYHEDRON}),this.vertices=t,this.faces=i,this.faceNormals=n,0===this.faceNormals.length&&this.computeNormals(),a?this.boundingSphereRadius=a:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){let e=this.faces,t=this.vertices,i=this.uniqueEdges;i.length=0;let n=new R;for(let r=0;r!==e.length;r++){let a=e[r],s=a.length;for(let e=0;e!==s;e++){let r=(e+1)%s;t[a[e]].vsub(t[a[r]],n),n.normalize();let o=!1;for(let e=0;e!==i.length;e++)if(i[e].almostEquals(n)||i[e].almostEquals(n)){o=!0;break}o||i.push(n.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let e=0;e<this.faces.length;e++){for(let t=0;t<this.faces[e].length;t++)if(!this.vertices[this.faces[e][t]])throw Error(`Vertex ${this.faces[e][t]} not found!`);let t=this.faceNormals[e]||new R;this.getFaceNormal(e,t),t.negate(t),this.faceNormals[e]=t;let i=this.vertices[this.faces[e][0]];if(0>t.dot(i)){console.error(`.faceNormals[${e}] = Vec3(${t.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let t=0;t<this.faces[e].length;t++)console.warn(`.vertices[${this.faces[e][t]}] = Vec3(${this.vertices[this.faces[e][t]].toString()})`)}}}getFaceNormal(e,t){let i=this.faces[e],n=this.vertices[i[0]],r=this.vertices[i[1]],a=this.vertices[i[2]];W.computeNormal(n,r,a,t)}static computeNormal(e,t,i,n){let r=new R,a=new R;t.vsub(e,a),i.vsub(t,r),r.cross(a,n),n.isZero()||n.normalize()}clipAgainstHull(e,t,i,n,r,a,s,o,l){let h=new R,c=-1,u=-Number.MAX_VALUE;for(let e=0;e<i.faces.length;e++){h.copy(i.faceNormals[e]),r.vmult(h,h);let t=h.dot(a);t>u&&(u=t,c=e)}let d=[];for(let e=0;e<i.faces[c].length;e++){let t=i.vertices[i.faces[c][e]],a=new R;a.copy(t),r.vmult(a,a),n.vadd(a,a),d.push(a)}c>=0&&this.clipFaceAgainstHull(a,e,t,d,s,o,l)}findSeparatingAxis(e,t,i,n,r,a,s,o){let l=new R,h=new R,c=new R,u=new R,d=new R,p=new R,f=Number.MAX_VALUE;if(this.uniqueAxes)for(let s=0;s!==this.uniqueAxes.length;s++){i.vmult(this.uniqueAxes[s],l);let o=this.testSepAxis(l,e,t,i,n,r);if(!1===o)return!1;o<f&&(f=o,a.copy(l))}else{let o=s?s.length:this.faces.length;for(let h=0;h<o;h++){let o=s?s[h]:h;l.copy(this.faceNormals[o]),i.vmult(l,l);let c=this.testSepAxis(l,e,t,i,n,r);if(!1===c)return!1;c<f&&(f=c,a.copy(l))}}if(e.uniqueAxes)for(let s=0;s!==e.uniqueAxes.length;s++){r.vmult(e.uniqueAxes[s],h);let o=this.testSepAxis(h,e,t,i,n,r);if(!1===o)return!1;o<f&&(f=o,a.copy(h))}else{let s=o?o.length:e.faces.length;for(let l=0;l<s;l++){let s=o?o[l]:l;h.copy(e.faceNormals[s]),r.vmult(h,h);let c=this.testSepAxis(h,e,t,i,n,r);if(!1===c)return!1;c<f&&(f=c,a.copy(h))}}for(let s=0;s!==this.uniqueEdges.length;s++){i.vmult(this.uniqueEdges[s],u);for(let s=0;s!==e.uniqueEdges.length;s++)if(r.vmult(e.uniqueEdges[s],d),u.cross(d,p),!p.almostZero()){p.normalize();let s=this.testSepAxis(p,e,t,i,n,r);if(!1===s)return!1;s<f&&(f=s,a.copy(p))}}return n.vsub(t,c),c.dot(a)>0&&a.negate(a),!0}testSepAxis(e,t,i,n,r,a){W.project(this,e,i,n,j),W.project(t,e,r,a,q);let s=j[0],o=j[1],l=q[0],h=q[1];if(s<h||l<o)return!1;let c=s-h,u=l-o;return c<u?c:u}calculateLocalInertia(e,t){let i=new R,n=new R;this.computeLocalAABB(n,i);let r=i.x-n.x,a=i.y-n.y,s=i.z-n.z;t.x=1/12*e*(2*a*2*a+2*s*2*s),t.y=1/12*e*(2*r*2*r+2*s*2*s),t.z=1/12*e*(2*a*2*a+2*r*2*r)}getPlaneConstantOfFace(e){let t=this.faces[e],i=this.faceNormals[e],n=this.vertices[t[0]];return-i.dot(n)}clipFaceAgainstHull(e,t,i,n,r,a,s){let o=new R,l=new R,h=new R,c=new R,u=new R,d=new R,p=new R,f=new R,m=[],g=-1,v=Number.MAX_VALUE;for(let t=0;t<this.faces.length;t++){o.copy(this.faceNormals[t]),i.vmult(o,o);let n=o.dot(e);n<v&&(v=n,g=t)}if(g<0)return;let y=this.faces[g];y.connectedFaces=[];for(let e=0;e<this.faces.length;e++)for(let t=0;t<this.faces[e].length;t++)-1!==y.indexOf(this.faces[e][t])&&e!==g&&-1===y.connectedFaces.indexOf(e)&&y.connectedFaces.push(e);let _=y.length;for(let e=0;e<_;e++){let r=this.vertices[y[e]],a=this.vertices[y[(e+1)%_]];r.vsub(a,l),h.copy(l),i.vmult(h,h),t.vadd(h,h),c.copy(this.faceNormals[g]),i.vmult(c,c),t.vadd(c,c),h.cross(c,u),u.negate(u),d.copy(r),i.vmult(d,d),t.vadd(d,d);let s=y.connectedFaces[e];p.copy(this.faceNormals[s]);let o=this.getPlaneConstantOfFace(s);f.copy(p),i.vmult(f,f);let v=o-f.dot(t);for(this.clipFaceAgainstPlane(n,m,f,v);n.length;)n.shift();for(;m.length;)n.push(m.shift())}p.copy(this.faceNormals[g]);let x=this.getPlaneConstantOfFace(g);f.copy(p),i.vmult(f,f);let b=x-f.dot(t);for(let e=0;e<n.length;e++){let t=f.dot(n[e])+b;if(t<=r&&(console.log(`clamped: depth=${t} to minDist=${r}`),t=r),t<=a){let i=n[e];if(t<=1e-6){let e={point:i,normal:f,depth:t};s.push(e)}}}}clipFaceAgainstPlane(e,t,i,n){let r,a;let s=e.length;if(s<2)return t;let o=e[e.length-1],l=e[0];r=i.dot(o)+n;for(let h=0;h<s;h++){if(l=e[h],a=i.dot(l)+n,r<0){if(a<0){let e=new R;e.copy(l),t.push(e)}else{let e=new R;o.lerp(l,r/(r-a),e),t.push(e)}}else if(a<0){let e=new R;o.lerp(l,r/(r-a),e),t.push(e),t.push(l)}o=l,r=a}return t}computeWorldVertices(e,t){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new R);let i=this.vertices,n=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)t.vmult(i[r],n[r]),e.vadd(n[r],n[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(e,t){let i=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let n=0;n<this.vertices.length;n++){let r=i[n];r.x<e.x?e.x=r.x:r.x>t.x&&(t.x=r.x),r.y<e.y?e.y=r.y:r.y>t.y&&(t.y=r.y),r.z<e.z?e.z=r.z:r.z>t.z&&(t.z=r.z)}}computeWorldFaceNormals(e){let t=this.faceNormals.length;for(;this.worldFaceNormals.length<t;)this.worldFaceNormals.push(new R);let i=this.faceNormals,n=this.worldFaceNormals;for(let r=0;r!==t;r++)e.vmult(i[r],n[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let e=0,t=this.vertices;for(let i=0;i!==t.length;i++){let n=t[i].lengthSquared();n>e&&(e=n)}this.boundingSphereRadius=Math.sqrt(e)}calculateWorldAABB(e,t,i,n){let r,a,s,o,l,h;let c=this.vertices,u=new R;for(let i=0;i<c.length;i++)u.copy(c[i]),t.vmult(u,u),e.vadd(u,u),(void 0===r||u.x<r)&&(r=u.x),(void 0===o||u.x>o)&&(o=u.x),(void 0===a||u.y<a)&&(a=u.y),(void 0===l||u.y>l)&&(l=u.y),(void 0===s||u.z<s)&&(s=u.z),(void 0===h||u.z>h)&&(h=u.z);i.set(r,a,s),n.set(o,l,h)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(e){void 0===e&&(e=new R);let t=this.vertices;for(let i=0;i<t.length;i++)e.vadd(t[i],e);return e.scale(1/t.length,e),e}transformAllPoints(e,t){let i=this.vertices.length,n=this.vertices;if(t){for(let e=0;e<i;e++){let i=n[e];t.vmult(i,i)}for(let e=0;e<this.faceNormals.length;e++){let i=this.faceNormals[e];t.vmult(i,i)}}if(e)for(let t=0;t<i;t++){let i=n[t];i.vadd(e,i)}}pointIsInside(e){let t=this.vertices,i=this.faces,n=this.faceNormals,r=new R;this.getAveragePointLocal(r);for(let a=0;a<this.faces.length;a++){let s=n[a],o=t[i[a][0]],l=new R;e.vsub(o,l);let h=s.dot(l),c=new R;r.vsub(o,c);let u=s.dot(c);if(h<0&&u>0||h>0&&u<0)return!1}return -1}static project(e,t,i,n,r){let a=e.vertices.length,s=0,o=0,l=e.vertices;Y.setZero(),H.vectorToLocalFrame(i,n,t,X),H.pointToLocalFrame(i,n,Y,Y);let h=Y.dot(X);o=s=l[0].dot(X);for(let e=1;e<a;e++){let t=l[e].dot(X);t>s&&(s=t),t<o&&(o=t)}if((o-=h)>(s-=h)){let e=o;o=s,s=e}r[0]=s,r[1]=o}}const j=[],q=[];new R;const X=new R,Y=new R;class J extends V{constructor(e){super({type:V.types.BOX}),this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){let e=this.halfExtents.x,t=this.halfExtents.y,i=this.halfExtents.z,n=new W({vertices:[new R(-e,-t,-i),new R(e,-t,-i),new R(e,t,-i),new R(-e,t,-i),new R(-e,-t,i),new R(e,-t,i),new R(e,t,i),new R(-e,t,i)],faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:[new R(0,0,1),new R(0,1,0),new R(1,0,0)]});this.convexPolyhedronRepresentation=n,n.material=this.material}calculateLocalInertia(e,t){return void 0===t&&(t=new R),J.calculateInertia(this.halfExtents,e,t),t}static calculateInertia(e,t,i){i.x=1/12*t*(2*e.y*2*e.y+2*e.z*2*e.z),i.y=1/12*t*(2*e.x*2*e.x+2*e.z*2*e.z),i.z=1/12*t*(2*e.y*2*e.y+2*e.x*2*e.x)}getSideNormals(e,t){let i=this.halfExtents;if(e[0].set(i.x,0,0),e[1].set(0,i.y,0),e[2].set(0,0,i.z),e[3].set(-i.x,0,0),e[4].set(0,-i.y,0),e[5].set(0,0,-i.z),void 0!==t)for(let i=0;i!==e.length;i++)t.vmult(e[i],e[i]);return e}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(e,t,i){let n=this.halfExtents,r=[[n.x,n.y,n.z],[-n.x,n.y,n.z],[-n.x,-n.y,n.z],[-n.x,-n.y,-n.z],[n.x,-n.y,-n.z],[n.x,n.y,-n.z],[-n.x,n.y,-n.z],[n.x,-n.y,n.z]];for(let n=0;n<r.length;n++)Z.set(r[n][0],r[n][1],r[n][2]),t.vmult(Z,Z),e.vadd(Z,Z),i(Z.x,Z.y,Z.z)}calculateWorldAABB(e,t,i,n){let r=this.halfExtents;K[0].set(r.x,r.y,r.z),K[1].set(-r.x,r.y,r.z),K[2].set(-r.x,-r.y,r.z),K[3].set(-r.x,-r.y,-r.z),K[4].set(r.x,-r.y,-r.z),K[5].set(r.x,r.y,-r.z),K[6].set(-r.x,r.y,-r.z),K[7].set(r.x,-r.y,r.z);let a=K[0];t.vmult(a,a),e.vadd(a,a),n.copy(a),i.copy(a);for(let r=1;r<8;r++){let a=K[r];t.vmult(a,a),e.vadd(a,a);let s=a.x,o=a.y,l=a.z;s>n.x&&(n.x=s),o>n.y&&(n.y=o),l>n.z&&(n.z=l),s<i.x&&(i.x=s),o<i.y&&(i.y=o),l<i.z&&(i.z=l)}}}const Z=new R,K=[new R,new R,new R,new R,new R,new R,new R,new R];class Q extends F{constructor(e){void 0===e&&(e={}),super(),this.id=Q.idCounter++,this.index=-1,this.world=null,this.vlambda=new R,this.collisionFilterGroup="number"==typeof e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionResponse="boolean"!=typeof e.collisionResponse||e.collisionResponse,this.position=new R,this.previousPosition=new R,this.interpolatedPosition=new R,this.initPosition=new R,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new R,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new R,this.force=new R;let t="number"==typeof e.mass?e.mass:0;this.mass=t,this.invMass=t>0?1/t:0,this.material=e.material||null,this.linearDamping="number"==typeof e.linearDamping?e.linearDamping:.01,this.type=t<=0?Q.STATIC:Q.DYNAMIC,typeof e.type==typeof Q.STATIC&&(this.type=e.type),this.allowSleep=void 0===e.allowSleep||e.allowSleep,this.sleepState=Q.AWAKE,this.sleepSpeedLimit=void 0!==e.sleepSpeedLimit?e.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==e.sleepTimeLimit?e.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new R,this.quaternion=new z,this.initQuaternion=new z,this.previousQuaternion=new z,this.interpolatedQuaternion=new z,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new R,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new R,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new R,this.invInertia=new R,this.invInertiaWorld=new A,this.invMassSolve=0,this.invInertiaSolve=new R,this.invInertiaWorldSolve=new A,this.fixedRotation=void 0!==e.fixedRotation&&e.fixedRotation,this.angularDamping=void 0!==e.angularDamping?e.angularDamping:.01,this.linearFactor=new R(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new R(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new I,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new R,this.isTrigger=!!e.isTrigger,e.shape&&this.addShape(e.shape),this.updateMassProperties()}wakeUp(){let e=this.sleepState;this.sleepState=Q.AWAKE,this.wakeUpAfterNarrowphase=!1,e===Q.SLEEPING&&this.dispatchEvent(Q.wakeupEvent)}sleep(){this.sleepState=Q.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(e){if(this.allowSleep){let t=this.sleepState,i=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),n=this.sleepSpeedLimit**2;t===Q.AWAKE&&i<n?(this.sleepState=Q.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(Q.sleepyEvent)):t===Q.SLEEPY&&i>n?this.wakeUp():t===Q.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(Q.sleepEvent))}}updateSolveMassProperties(){this.sleepState===Q.SLEEPING||this.type===Q.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(e,t){return void 0===t&&(t=new R),e.vsub(this.position,t),this.quaternion.conjugate().vmult(t,t),t}vectorToLocalFrame(e,t){return void 0===t&&(t=new R),this.quaternion.conjugate().vmult(e,t),t}pointToWorldFrame(e,t){return void 0===t&&(t=new R),this.quaternion.vmult(e,t),t.vadd(this.position,t),t}vectorToWorldFrame(e,t){return void 0===t&&(t=new R),this.quaternion.vmult(e,t),t}addShape(e,t,i){let n=new R,r=new z;return t&&n.copy(t),i&&r.copy(i),this.shapes.push(e),this.shapeOffsets.push(n),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=this,this}removeShape(e){let t=this.shapes.indexOf(e);return -1===t?console.warn("Shape does not belong to the body"):(this.shapes.splice(t,1),this.shapeOffsets.splice(t,1),this.shapeOrientations.splice(t,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=null),this}updateBoundingRadius(){let e=this.shapes,t=this.shapeOffsets,i=e.length,n=0;for(let r=0;r!==i;r++){let i=e[r];i.updateBoundingSphereRadius();let a=t[r].length(),s=i.boundingSphereRadius;a+s>n&&(n=a+s)}this.boundingRadius=n}updateAABB(){let e=this.shapes,t=this.shapeOffsets,i=this.shapeOrientations,n=e.length,r=this.quaternion,a=this.aabb;for(let s=0;s!==n;s++){let n=e[s];r.vmult(t[s],$),$.vadd(this.position,$),r.mult(i[s],ee),n.calculateWorldAABB($,ee,et.lowerBound,et.upperBound),0===s?a.copy(et):a.extend(et)}this.aabbNeedsUpdate=!1}updateInertiaWorld(e){let t=this.invInertia;(t.x!==t.y||t.y!==t.z||e)&&(ei.setRotationFromQuaternion(this.quaternion),ei.transpose(en),ei.scale(t,ei),ei.mmult(en,this.invInertiaWorld))}applyForce(e,t){void 0===t&&(t=new R),this.type===Q.DYNAMIC&&(this.sleepState===Q.SLEEPING&&this.wakeUp(),t.cross(e,er),this.force.vadd(e,this.force),this.torque.vadd(er,this.torque))}applyLocalForce(e,t){void 0===t&&(t=new R),this.type===Q.DYNAMIC&&(this.vectorToWorldFrame(e,ea),this.vectorToWorldFrame(t,es),this.applyForce(ea,es))}applyTorque(e){this.type===Q.DYNAMIC&&(this.sleepState===Q.SLEEPING&&this.wakeUp(),this.torque.vadd(e,this.torque))}applyImpulse(e,t){if(void 0===t&&(t=new R),this.type!==Q.DYNAMIC)return;this.sleepState===Q.SLEEPING&&this.wakeUp();let i=t;eo.copy(e),eo.scale(this.invMass,eo),this.velocity.vadd(eo,this.velocity),i.cross(e,el),this.invInertiaWorld.vmult(el,el),this.angularVelocity.vadd(el,this.angularVelocity)}applyLocalImpulse(e,t){void 0===t&&(t=new R),this.type===Q.DYNAMIC&&(this.vectorToWorldFrame(e,eh),this.vectorToWorldFrame(t,ec),this.applyImpulse(eh,ec))}updateMassProperties(){this.invMass=this.mass>0?1/this.mass:0;let e=this.inertia,t=this.fixedRotation;this.updateAABB(),eu.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),J.calculateInertia(eu,this.mass,e),this.invInertia.set(e.x>0&&!t?1/e.x:0,e.y>0&&!t?1/e.y:0,e.z>0&&!t?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(e,t){let i=new R;return e.vsub(this.position,i),this.angularVelocity.cross(i,t),this.velocity.vadd(t,t),t}integrate(e,t,i){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===Q.DYNAMIC||this.type===Q.KINEMATIC)||this.sleepState===Q.SLEEPING)return;let n=this.velocity,r=this.angularVelocity,a=this.position,s=this.force,o=this.torque,l=this.quaternion,h=this.invMass,c=this.invInertiaWorld,u=this.linearFactor,d=h*e;n.x+=s.x*d*u.x,n.y+=s.y*d*u.y,n.z+=s.z*d*u.z;let p=c.elements,f=this.angularFactor,m=o.x*f.x,g=o.y*f.y,v=o.z*f.z;r.x+=e*(p[0]*m+p[1]*g+p[2]*v),r.y+=e*(p[3]*m+p[4]*g+p[5]*v),r.z+=e*(p[6]*m+p[7]*g+p[8]*v),a.x+=n.x*e,a.y+=n.y*e,a.z+=n.z*e,l.integrate(this.angularVelocity,e,this.angularFactor,l),t&&(i?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}Q.idCounter=0,Q.COLLIDE_EVENT_NAME="collide",Q.DYNAMIC=1,Q.STATIC=2,Q.KINEMATIC=4,Q.AWAKE=0,Q.SLEEPY=1,Q.SLEEPING=2,Q.wakeupEvent={type:"wakeup"},Q.sleepyEvent={type:"sleepy"},Q.sleepEvent={type:"sleep"};const $=new R,ee=new z,et=new I,ei=new A,en=new A;new A;const er=new R,ea=new R,es=new R,eo=new R,el=new R,eh=new R,ec=new R,eu=new R;class ed{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(e,t,i){throw Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(e,t){return(e.collisionFilterGroup&t.collisionFilterMask)!=0&&(t.collisionFilterGroup&e.collisionFilterMask)!=0&&((e.type&Q.STATIC)==0&&e.sleepState!==Q.SLEEPING||(t.type&Q.STATIC)==0&&t.sleepState!==Q.SLEEPING)}intersectionTest(e,t,i,n){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,t,i,n):this.doBoundingSphereBroadphase(e,t,i,n)}doBoundingSphereBroadphase(e,t,i,n){t.position.vsub(e.position,ep);let r=(e.boundingRadius+t.boundingRadius)**2;ep.lengthSquared()<r&&(i.push(e),n.push(t))}doBoundingBoxBroadphase(e,t,i,n){e.aabbNeedsUpdate&&e.updateAABB(),t.aabbNeedsUpdate&&t.updateAABB(),e.aabb.overlaps(t.aabb)&&(i.push(e),n.push(t))}makePairsUnique(e,t){let i=e.length;for(let n=0;n!==i;n++)em[n]=e[n],eg[n]=t[n];e.length=0,t.length=0;for(let e=0;e!==i;e++){let t=em[e].id,i=eg[e].id,n=t<i?`${t},${i}`:`${i},${t}`;ef[n]=e,ef.keys.push(n)}for(let i=0;i!==ef.keys.length;i++){let i=ef.keys.pop(),n=ef[i];e.push(em[n]),t.push(eg[n]),delete ef[i]}}setWorld(e){}static boundingSphereCheck(e,t){let i=new R;e.position.vsub(t.position,i);let n=e.shapes[0],r=t.shapes[0];return Math.pow(n.boundingSphereRadius+r.boundingSphereRadius,2)>i.lengthSquared()}aabbQuery(e,t,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const ep=new R;new R,new z,new R;const ef={keys:[]},em=[],eg=[];new R,new R,new R;class ev extends ed{constructor(){super()}collisionPairs(e,t,i){let n,r;let a=e.bodies,s=a.length;for(let e=0;e!==s;e++)for(let s=0;s!==e;s++)n=a[e],r=a[s],this.needBroadphaseCollision(n,r)&&this.intersectionTest(n,r,t,i)}aabbQuery(e,t,i){void 0===i&&(i=[]);for(let n=0;n<e.bodies.length;n++){let r=e.bodies[n];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(t)&&i.push(r)}return i}}class ey{constructor(){this.rayFromWorld=new R,this.rayToWorld=new R,this.hitNormalWorld=new R,this.hitPointWorld=new R,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(e,t,i,n,r,a,s){this.rayFromWorld.copy(e),this.rayToWorld.copy(t),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(n),this.shape=r,this.body=a,this.distance=s}}e=V.types.SPHERE,t=V.types.PLANE,i=V.types.BOX,n=V.types.CYLINDER,r=V.types.CONVEXPOLYHEDRON,a=V.types.HEIGHTFIELD,s=V.types.TRIMESH;class e_{get[e](){return this._intersectSphere}get[t](){return this._intersectPlane}get[i](){return this._intersectBox}get[n](){return this._intersectConvex}get[r](){return this._intersectConvex}get[a](){return this._intersectHeightfield}get[s](){return this._intersectTrimesh}constructor(e,t){void 0===e&&(e=new R),void 0===t&&(t=new R),this.from=e.clone(),this.to=t.clone(),this.direction=new R,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=e_.ANY,this.result=new ey,this.hasHit=!1,this.callback=e=>{}}intersectWorld(e,t){return this.mode=t.mode||e_.ANY,this.result=t.result||new ey,this.skipBackfaces=!!t.skipBackfaces,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:-1,this.checkCollisionResponse=void 0===t.checkCollisionResponse||t.checkCollisionResponse,t.from&&this.from.copy(t.from),t.to&&this.to.copy(t.to),this.callback=t.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(ex),eb.length=0,e.broadphase.aabbQuery(e,ex,eb),this.intersectBodies(eb),this.hasHit}intersectBody(e,t){t&&(this.result=t,this.updateDirection());let i=this.checkCollisionResponse;if((!i||e.collisionResponse)&&(this.collisionFilterGroup&e.collisionFilterMask)!=0&&(e.collisionFilterGroup&this.collisionFilterMask)!=0)for(let t=0,n=e.shapes.length;t<n;t++){let n=e.shapes[t];if((!i||n.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[t],eE),e.quaternion.vmult(e.shapeOffsets[t],eS),eS.vadd(e.position,eS),this.intersectShape(n,eE,eS,e),this.result.shouldStop))break}}intersectBodies(e,t){t&&(this.result=t,this.updateDirection());for(let t=0,i=e.length;!this.result.shouldStop&&t<i;t++)this.intersectBody(e[t])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(e,t,i,n){if(function(e,t,i){i.vsub(e,eq);let n=eq.dot(t);return t.scale(n,eX),eX.vadd(e,eX),i.distanceTo(eX)}(this.from,this.direction,i)>e.boundingSphereRadius)return;let r=this[e.type];r&&r.call(this,e,t,i,n,e)}_intersectBox(e,t,i,n,r){return this._intersectConvex(e.convexPolyhedronRepresentation,t,i,n,r)}_intersectPlane(e,t,i,n,r){let a=this.from,s=this.to,o=this.direction,l=new R(0,0,1);t.vmult(l,l);let h=new R;a.vsub(i,h);let c=h.dot(l);if(s.vsub(i,h),c*h.dot(l)>0||a.distanceTo(s)<c)return;let u=l.dot(o);if(Math.abs(u)<this.precision)return;let d=new R,p=new R,f=new R;a.vsub(i,d);let m=-l.dot(d)/u;o.scale(m,p),a.vadd(p,f),this.reportIntersection(l,f,r,n,-1)}getAABB(e){let{lowerBound:t,upperBound:i}=e,n=this.to,r=this.from;t.x=Math.min(n.x,r.x),t.y=Math.min(n.y,r.y),t.z=Math.min(n.z,r.z),i.x=Math.max(n.x,r.x),i.y=Math.max(n.y,r.y),i.z=Math.max(n.z,r.z)}_intersectHeightfield(e,t,i,n,r){let a,s,o,l;e.data,e.elementSize,eN.from.copy(this.from),eN.to.copy(this.to),H.pointToLocalFrame(i,t,eN.from,eN.from),H.pointToLocalFrame(i,t,eN.to,eN.to),eN.updateDirection(),a=s=0,o=l=e.data.length-1;let h=new I;eN.getAABB(h),e.getIndexOfPosition(h.lowerBound.x,h.lowerBound.y,eI,!0),a=Math.max(a,eI[0]),s=Math.max(s,eI[1]),e.getIndexOfPosition(h.upperBound.x,h.upperBound.y,eI,!0),o=Math.min(o,eI[0]+1),l=Math.min(l,eI[1]+1);for(let c=a;c<o;c++)for(let a=s;a<l;a++){if(this.result.shouldStop)return;if(e.getAabbAtIndex(c,a,h),h.overlapsRay(eN)){if(e.getConvexTrianglePillar(c,a,!1),H.pointToWorldFrame(i,t,e.pillarOffset,eL),this._intersectConvex(e.pillarConvex,t,eL,n,r,eP),this.result.shouldStop)return;e.getConvexTrianglePillar(c,a,!0),H.pointToWorldFrame(i,t,e.pillarOffset,eL),this._intersectConvex(e.pillarConvex,t,eL,n,r,eP)}}}_intersectSphere(e,t,i,n,r){let a=this.from,s=this.to,o=e.radius,l=(s.x-a.x)**2+(s.y-a.y)**2+(s.z-a.z)**2,h=2*((s.x-a.x)*(a.x-i.x)+(s.y-a.y)*(a.y-i.y)+(s.z-a.z)*(a.z-i.z)),c=h**2-4*l*((a.x-i.x)**2+(a.y-i.y)**2+(a.z-i.z)**2-o**2);if(!(c<0)){if(0===c)a.lerp(s,c,eU),eU.vsub(i,eO),eO.normalize(),this.reportIntersection(eO,eU,r,n,-1);else{let e=(-h-Math.sqrt(c))/(2*l),t=(-h+Math.sqrt(c))/(2*l);if(e>=0&&e<=1&&(a.lerp(s,e,eU),eU.vsub(i,eO),eO.normalize(),this.reportIntersection(eO,eU,r,n,-1)),this.result.shouldStop)return;t>=0&&t<=1&&(a.lerp(s,t,eU),eU.vsub(i,eO),eO.normalize(),this.reportIntersection(eO,eU,r,n,-1))}}}_intersectConvex(e,t,i,n,r,a){let s=a&&a.faceList||null,o=e.faces,l=e.vertices,h=e.faceNormals,c=this.direction,u=this.from,d=this.to,p=u.distanceTo(d),f=s?s.length:o.length,m=this.result;for(let e=0;!m.shouldStop&&e<f;e++){let a=s?s[e]:e,d=o[a],f=h[a];eF.copy(l[d[0]]),t.vmult(eF,eF),eF.vadd(i,eF),eF.vsub(u,eF),t.vmult(f,eD);let g=c.dot(eD);if(Math.abs(g)<this.precision)continue;let v=eD.dot(eF)/g;if(!(v<0)){c.scale(v,eT),eT.vadd(u,eT),eA.copy(l[d[0]]),t.vmult(eA,eA),i.vadd(eA,eA);for(let e=1;!m.shouldStop&&e<d.length-1;e++){eC.copy(l[d[e]]),eR.copy(l[d[e+1]]),t.vmult(eC,eC),t.vmult(eR,eR),i.vadd(eC,eC),i.vadd(eR,eR);let s=eT.distanceTo(u);(e_.pointInTriangle(eT,eA,eC,eR)||e_.pointInTriangle(eT,eC,eA,eR))&&!(s>p)&&this.reportIntersection(eD,eT,r,n,a)}}}}_intersectTrimesh(e,t,i,n,r,a){let s=e.indices;e.vertices;let o=this.from,l=this.to,h=this.direction;ej.position.copy(i),ej.quaternion.copy(t),H.vectorToLocalFrame(i,t,h,eB),H.pointToLocalFrame(i,t,o,ek),H.pointToLocalFrame(i,t,l,eV),eV.x*=e.scale.x,eV.y*=e.scale.y,eV.z*=e.scale.z,ek.x*=e.scale.x,ek.y*=e.scale.y,ek.z*=e.scale.z,eV.vsub(ek,eB),eB.normalize();let c=ek.distanceSquared(eV);e.tree.rayQuery(this,ej,eW);for(let a=0,o=eW.length;!this.result.shouldStop&&a!==o;a++){let o=eW[a];e.getNormal(o,ez),e.getVertex(s[3*o],eA),eA.vsub(ek,eF);let l=eB.dot(ez),h=ez.dot(eF)/l;if(h<0)continue;eB.scale(h,eT),eT.vadd(ek,eT),e.getVertex(s[3*o+1],eC),e.getVertex(s[3*o+2],eR);let u=eT.distanceSquared(ek);(e_.pointInTriangle(eT,eC,eA,eR)||e_.pointInTriangle(eT,eA,eC,eR))&&!(u>c)&&(H.vectorToWorldFrame(t,ez,eH),H.pointToWorldFrame(i,t,eT,eG),this.reportIntersection(eH,eG,r,n,o))}eW.length=0}reportIntersection(e,t,i,n,r){let a=this.from,s=this.to,o=a.distanceTo(t),l=this.result;if(!(this.skipBackfaces&&e.dot(this.direction)>0))switch(l.hitFaceIndex=void 0!==r?r:-1,this.mode){case e_.ALL:this.hasHit=!0,l.set(a,s,e,t,i,n,o),l.hasHit=!0,this.callback(l);break;case e_.CLOSEST:(o<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(a,s,e,t,i,n,o));break;case e_.ANY:this.hasHit=!0,l.hasHit=!0,l.set(a,s,e,t,i,n,o),l.shouldStop=!0}}static pointInTriangle(e,t,i,n){let r,a;n.vsub(t,eq),i.vsub(t,eM),e.vsub(t,ew);let s=eq.dot(eq),o=eq.dot(eM),l=eq.dot(ew),h=eM.dot(eM),c=eM.dot(ew);return(r=h*l-o*c)>=0&&(a=s*c-o*l)>=0&&r+a<s*h-o*o}}e_.CLOSEST=1,e_.ANY=2,e_.ALL=4;const ex=new I,eb=[],eM=new R,ew=new R,eS=new R,eE=new z,eT=new R,eA=new R,eC=new R,eR=new R;new R,new ey;const eP={faceList:[0]},eL=new R,eN=new e_,eI=[],eU=new R,eO=new R,eD=new R;new R,new R;const eF=new R,ez=new R,eB=new R,ek=new R,eV=new R,eH=new R,eG=new R;new I;const eW=[],ej=new H,eq=new R,eX=new R;class eY{static defaults(e,t){for(let i in void 0===e&&(e={}),t)i in e||(e[i]=t[i]);return e}}class eJ{constructor(e,t,i){void 0===i&&(i={}),i=eY.defaults(i,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=e,this.bodyB=t,this.id=eJ.idCounter++,this.collideConnected=i.collideConnected,i.wakeUpBodies&&(e&&e.wakeUp(),t&&t.wakeUp())}update(){throw Error("method update() not implmemented in this Constraint subclass!")}enable(){let e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!0}disable(){let e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!1}}eJ.idCounter=0;class eZ{constructor(){this.spatial=new R,this.rotational=new R}multiplyElement(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)}multiplyVectors(e,t){return e.dot(this.spatial)+t.dot(this.rotational)}}class eK{constructor(e,t,i,n){void 0===i&&(i=-1e6),void 0===n&&(n=1e6),this.id=eK.idCounter++,this.minForce=i,this.maxForce=n,this.bi=e,this.bj=t,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new eZ,this.jacobianElementB=new eZ,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(e,t,i){this.a=4/(i*(1+4*t)),this.b=4*t/(1+4*t),this.eps=4/(i*i*e*(1+4*t))}computeB(e,t,i){let n=this.computeGW();return-this.computeGq()*e-n*t-this.computeGiMf()*i}computeGq(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,n=this.bj,r=i.position,a=n.position;return e.spatial.dot(r)+t.spatial.dot(a)}computeGW(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,n=this.bj,r=i.velocity,a=n.velocity,s=i.angularVelocity,o=n.angularVelocity;return e.multiplyVectors(r,s)+t.multiplyVectors(a,o)}computeGWlambda(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,n=this.bj,r=i.vlambda,a=n.vlambda,s=i.wlambda,o=n.wlambda;return e.multiplyVectors(r,s)+t.multiplyVectors(a,o)}computeGiMf(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,n=this.bj,r=i.force,a=i.torque,s=n.force,o=n.torque,l=i.invMassSolve,h=n.invMassSolve;return r.scale(l,eQ),s.scale(h,e$),i.invInertiaWorldSolve.vmult(a,e0),n.invInertiaWorldSolve.vmult(o,e1),e.multiplyVectors(eQ,e0)+t.multiplyVectors(e$,e1)}computeGiMGt(){let e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,n=this.bj,r=i.invMassSolve,a=n.invMassSolve,s=i.invInertiaWorldSolve,o=n.invInertiaWorldSolve,l=r+a;return s.vmult(e.rotational,e2),l+=e2.dot(e.rotational),o.vmult(t.rotational,e2),l+=e2.dot(t.rotational)}addToWlambda(e){let t=this.jacobianElementA,i=this.jacobianElementB,n=this.bi,r=this.bj;n.vlambda.addScaledVector(n.invMassSolve*e,t.spatial,n.vlambda),r.vlambda.addScaledVector(r.invMassSolve*e,i.spatial,r.vlambda),n.invInertiaWorldSolve.vmult(t.rotational,e3),n.wlambda.addScaledVector(e,e3,n.wlambda),r.invInertiaWorldSolve.vmult(i.rotational,e3),r.wlambda.addScaledVector(e,e3,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}eK.idCounter=0;const eQ=new R,e$=new R,e0=new R,e1=new R,e2=new R,e3=new R;class e4 extends eK{constructor(e,t,i){void 0===i&&(i=1e6),super(e,t,0,i),this.restitution=0,this.ri=new R,this.rj=new R,this.ni=new R}computeB(e){let t=this.a,i=this.b,n=this.bi,r=this.bj,a=this.ri,s=this.rj,o=n.velocity,l=n.angularVelocity;n.force,n.torque;let h=r.velocity,c=r.angularVelocity;r.force,r.torque;let u=this.jacobianElementA,d=this.jacobianElementB,p=this.ni;a.cross(p,e5),s.cross(p,e6),p.negate(u.spatial),e5.negate(u.rotational),d.spatial.copy(p),d.rotational.copy(e6),e7.copy(r.position),e7.vadd(s,e7),e7.vsub(n.position,e7),e7.vsub(a,e7);let f=p.dot(e7),m=this.restitution+1;return-f*t-(m*h.dot(p)-m*o.dot(p)+c.dot(e6)-l.dot(e5))*i-e*this.computeGiMf()}getImpactVelocityAlongNormal(){return this.bi.position.vadd(this.ri,te),this.bj.position.vadd(this.rj,tt),this.bi.getVelocityAtWorldPoint(te,e8),this.bj.getVelocityAtWorldPoint(tt,e9),e8.vsub(e9,ti),this.ni.dot(ti)}}const e5=new R,e6=new R,e7=new R,e8=new R,e9=new R,te=new R,tt=new R,ti=new R;new R,new R,new R,new R,new R,new R,new R,new R,new R,new R;class tn extends eK{constructor(e,t,i){super(e,t,-i,i),this.ri=new R,this.rj=new R,this.t=new R}computeB(e){this.a;let t=this.b;this.bi,this.bj;let i=this.ri,n=this.rj,r=this.t;i.cross(r,tr),n.cross(r,ta);let a=this.jacobianElementA,s=this.jacobianElementB;return r.negate(a.spatial),tr.negate(a.rotational),s.spatial.copy(r),s.rotational.copy(ta),-this.computeGW()*t-e*this.computeGiMf()}}const tr=new R,ta=new R;class ts{constructor(e,t,i){i=eY.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=ts.idCounter++,this.materials=[e,t],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}}ts.idCounter=0;class to{constructor(e){void 0===e&&(e={});let t="";"string"==typeof e&&(t=e,e={}),this.name=t,this.id=to.idCounter++,this.friction=void 0!==e.friction?e.friction:-1,this.restitution=void 0!==e.restitution?e.restitution:-1}}to.idCounter=0,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new e_,new R,new R,new R,new R(1,0,0),new R(0,1,0),new R(0,0,1),new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new R;class tl extends V{constructor(){super({type:V.types.PLANE}),this.worldNormal=new R,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(e){let t=this.worldNormal;t.set(0,0,1),e.vmult(t,t),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(e,t){return void 0===t&&(t=new R),t}volume(){return Number.MAX_VALUE}calculateWorldAABB(e,t,i,n){th.set(0,0,1),t.vmult(th,th);let r=Number.MAX_VALUE;i.set(-r,-r,-r),n.set(r,r,r),1===th.x?n.x=e.x:-1===th.x&&(i.x=e.x),1===th.y?n.y=e.y:-1===th.y&&(i.y=e.y),1===th.z?n.z=e.z:-1===th.z&&(i.z=e.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const th=new R;new R,new R,new R,new R,new R,new R,new R,new R,new R,new R,new I,new R,new I,new R,new R,new R,new R,new R,new R,new R,new I,new R,new H,new I;class tc{constructor(){this.equations=[]}solve(e,t){return 0}addEquation(e){!e.enabled||e.bi.isTrigger||e.bj.isTrigger||this.equations.push(e)}removeEquation(e){let t=this.equations,i=t.indexOf(e);-1!==i&&t.splice(i,1)}removeAllEquations(){this.equations.length=0}}class tu extends tc{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(e,t){let i,n,r,a,s,o=0,l=this.iterations,h=this.tolerance*this.tolerance,c=this.equations,u=c.length,d=t.bodies,p=d.length;if(0!==u)for(let e=0;e!==p;e++)d[e].updateSolveMassProperties();tp.length=u,tf.length=u,td.length=u;for(let t=0;t!==u;t++){let i=c[t];td[t]=0,tf[t]=i.computeB(e),tp[t]=1/i.computeC()}if(0!==u){for(let e=0;e!==p;e++){let t=d[e],i=t.vlambda,n=t.wlambda;i.set(0,0,0),n.set(0,0,0)}for(o=0;o!==l;o++){a=0;for(let e=0;e!==u;e++){let t=c[e];i=tf[e],n=tp[e],s=td[e],r=n*(i-t.computeGWlambda()-t.eps*s),s+r<t.minForce?r=t.minForce-s:s+r>t.maxForce&&(r=t.maxForce-s),td[e]+=r,a+=r>0?r:-r,t.addToWlambda(r)}if(a*a<h)break}for(let e=0;e!==p;e++){let t=d[e],i=t.velocity,n=t.angularVelocity;t.vlambda.vmul(t.linearFactor,t.vlambda),i.vadd(t.vlambda,i),t.wlambda.vmul(t.angularFactor,t.wlambda),n.vadd(t.wlambda,n)}let t=c.length,f=1/e;for(;t--;)c[t].multiplier=td[t]*f}return o}}const td=[],tp=[],tf=[];Q.STATIC;class tm{constructor(){this.objects=[],this.type=Object}release(){let e=arguments.length;for(let t=0;t!==e;t++)this.objects.push(t<0||arguments.length<=t?void 0:arguments[t]);return this}get(){return 0===this.objects.length?this.constructObject():this.objects.pop()}constructObject(){throw Error("constructObject() not implemented in this Pool subclass yet!")}resize(e){let t=this.objects;for(;t.length>e;)t.pop();for(;t.length<e;)t.push(this.constructObject());return this}}class tg extends tm{constructor(){super(...arguments),this.type=R}constructObject(){return new R}}const tv={sphereSphere:V.types.SPHERE,spherePlane:V.types.SPHERE|V.types.PLANE,boxBox:V.types.BOX|V.types.BOX,sphereBox:V.types.SPHERE|V.types.BOX,planeBox:V.types.PLANE|V.types.BOX,convexConvex:V.types.CONVEXPOLYHEDRON,sphereConvex:V.types.SPHERE|V.types.CONVEXPOLYHEDRON,planeConvex:V.types.PLANE|V.types.CONVEXPOLYHEDRON,boxConvex:V.types.BOX|V.types.CONVEXPOLYHEDRON,sphereHeightfield:V.types.SPHERE|V.types.HEIGHTFIELD,boxHeightfield:V.types.BOX|V.types.HEIGHTFIELD,convexHeightfield:V.types.CONVEXPOLYHEDRON|V.types.HEIGHTFIELD,sphereParticle:V.types.PARTICLE|V.types.SPHERE,planeParticle:V.types.PLANE|V.types.PARTICLE,boxParticle:V.types.BOX|V.types.PARTICLE,convexParticle:V.types.PARTICLE|V.types.CONVEXPOLYHEDRON,cylinderCylinder:V.types.CYLINDER,sphereCylinder:V.types.SPHERE|V.types.CYLINDER,planeCylinder:V.types.PLANE|V.types.CYLINDER,boxCylinder:V.types.BOX|V.types.CYLINDER,convexCylinder:V.types.CONVEXPOLYHEDRON|V.types.CYLINDER,heightfieldCylinder:V.types.HEIGHTFIELD|V.types.CYLINDER,particleCylinder:V.types.PARTICLE|V.types.CYLINDER,sphereTrimesh:V.types.SPHERE|V.types.TRIMESH,planeTrimesh:V.types.PLANE|V.types.TRIMESH};class ty{get[tv.sphereSphere](){return this.sphereSphere}get[tv.spherePlane](){return this.spherePlane}get[tv.boxBox](){return this.boxBox}get[tv.sphereBox](){return this.sphereBox}get[tv.planeBox](){return this.planeBox}get[tv.convexConvex](){return this.convexConvex}get[tv.sphereConvex](){return this.sphereConvex}get[tv.planeConvex](){return this.planeConvex}get[tv.boxConvex](){return this.boxConvex}get[tv.sphereHeightfield](){return this.sphereHeightfield}get[tv.boxHeightfield](){return this.boxHeightfield}get[tv.convexHeightfield](){return this.convexHeightfield}get[tv.sphereParticle](){return this.sphereParticle}get[tv.planeParticle](){return this.planeParticle}get[tv.boxParticle](){return this.boxParticle}get[tv.convexParticle](){return this.convexParticle}get[tv.cylinderCylinder](){return this.convexConvex}get[tv.sphereCylinder](){return this.sphereConvex}get[tv.planeCylinder](){return this.planeConvex}get[tv.boxCylinder](){return this.boxConvex}get[tv.convexCylinder](){return this.convexConvex}get[tv.heightfieldCylinder](){return this.heightfieldCylinder}get[tv.particleCylinder](){return this.particleCylinder}get[tv.sphereTrimesh](){return this.sphereTrimesh}get[tv.planeTrimesh](){return this.planeTrimesh}constructor(e){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new tg,this.world=e,this.currentContactMaterial=e.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(e,t,i,n,r,a){let s;this.contactPointPool.length?((s=this.contactPointPool.pop()).bi=e,s.bj=t):s=new e4(e,t),s.enabled=e.collisionResponse&&t.collisionResponse&&i.collisionResponse&&n.collisionResponse;let o=this.currentContactMaterial;s.restitution=o.restitution,s.setSpookParams(o.contactEquationStiffness,o.contactEquationRelaxation,this.world.dt);let l=i.material||e.material,h=n.material||t.material;return l&&h&&l.restitution>=0&&h.restitution>=0&&(s.restitution=l.restitution*h.restitution),s.si=r||i,s.sj=a||n,s}createFrictionEquationsFromContact(e,t){let i=e.bi,n=e.bj,r=e.si,a=e.sj,s=this.world,o=this.currentContactMaterial,l=o.friction,h=r.material||i.material,c=a.material||n.material;if(h&&c&&h.friction>=0&&c.friction>=0&&(l=h.friction*c.friction),l>0){let r=l*(s.frictionGravity||s.gravity).length(),a=i.invMass+n.invMass;a>0&&(a=1/a);let h=this.frictionEquationPool,c=h.length?h.pop():new tn(i,n,r*a),u=h.length?h.pop():new tn(i,n,r*a);return c.bi=u.bi=i,c.bj=u.bj=n,c.minForce=u.minForce=-r*a,c.maxForce=u.maxForce=r*a,c.ri.copy(e.ri),c.rj.copy(e.rj),u.ri.copy(e.ri),u.rj.copy(e.rj),e.ni.tangents(c.t,u.t),c.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,s.dt),u.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,s.dt),c.enabled=u.enabled=e.enabled,t.push(c,u),!0}return!1}createFrictionFromAverage(e){let t=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(t,this.frictionResult)||1===e)return;let i=this.frictionResult[this.frictionResult.length-2],n=this.frictionResult[this.frictionResult.length-1];t_.setZero(),tx.setZero(),tb.setZero();let r=t.bi;t.bj;for(let i=0;i!==e;i++)(t=this.result[this.result.length-1-i]).bi!==r?(t_.vadd(t.ni,t_),tx.vadd(t.ri,tx),tb.vadd(t.rj,tb)):(t_.vsub(t.ni,t_),tx.vadd(t.rj,tx),tb.vadd(t.ri,tb));let a=1/e;tx.scale(a,i.ri),tb.scale(a,i.rj),n.ri.copy(i.ri),n.rj.copy(i.rj),t_.normalize(),t_.tangents(i.t,n.t)}getContacts(e,t,i,n,r,a,s){this.contactPointPool=r,this.frictionEquationPool=s,this.result=n,this.frictionResult=a;for(let n=0,r=e.length;n!==r;n++){let r=e[n],a=t[n],s=null;r.material&&a.material&&(s=i.getContactMaterial(r.material,a.material)||null);let o=r.type&Q.KINEMATIC&&a.type&Q.STATIC||r.type&Q.STATIC&&a.type&Q.KINEMATIC||r.type&Q.KINEMATIC&&a.type&Q.KINEMATIC;for(let e=0;e<r.shapes.length;e++){r.quaternion.mult(r.shapeOrientations[e],tS),r.quaternion.vmult(r.shapeOffsets[e],tM),tM.vadd(r.position,tM);let t=r.shapes[e];for(let e=0;e<a.shapes.length;e++){a.quaternion.mult(a.shapeOrientations[e],tE),a.quaternion.vmult(a.shapeOffsets[e],tw),tw.vadd(a.position,tw);let n=a.shapes[e];if(!(t.collisionFilterMask&n.collisionFilterGroup&&n.collisionFilterMask&t.collisionFilterGroup)||tM.distanceTo(tw)>t.boundingSphereRadius+n.boundingSphereRadius)continue;let l=null;t.material&&n.material&&(l=i.getContactMaterial(t.material,n.material)||null),this.currentContactMaterial=l||s||i.defaultContactMaterial;let h=this[t.type|n.type];h&&(t.type<n.type?h.call(this,t,n,tM,tw,tS,tE,r,a,t,n,o):h.call(this,n,t,tw,tM,tE,tS,a,r,t,n,o))&&o&&(i.shapeOverlapKeeper.set(t.id,n.id),i.bodyOverlapKeeper.set(r.id,a.id))}}}}sphereSphere(e,t,i,n,r,a,s,o,l,h,c){if(c)return i.distanceSquared(n)<(e.radius+t.radius)**2;let u=this.createContactEquation(s,o,e,t,l,h);n.vsub(i,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.scale(e.radius,u.ri),u.rj.scale(-t.radius,u.rj),u.ri.vadd(i,u.ri),u.ri.vsub(s.position,u.ri),u.rj.vadd(n,u.rj),u.rj.vsub(o.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}spherePlane(e,t,i,n,r,a,s,o,l,h,c){let u=this.createContactEquation(s,o,e,t,l,h);if(u.ni.set(0,0,1),a.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.scale(e.radius,u.ri),i.vsub(n,tW),u.ni.scale(u.ni.dot(tW),tj),tW.vsub(tj,u.rj),-tW.dot(u.ni)<=e.radius){if(c)return!0;let e=u.ri,t=u.rj;e.vadd(i,e),e.vsub(s.position,e),t.vadd(n,t),t.vsub(o.position,t),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}}boxBox(e,t,i,n,r,a,s,o,l,h,c){return e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t.convexPolyhedronRepresentation,i,n,r,a,s,o,e,t,c)}sphereBox(e,t,i,n,r,a,s,o,l,h,c){let u=this.v3pool;i.vsub(n,tJ),t.getSideNormals(t$,a);let d=e.radius,p=!1,f=null,m=0,g=0,v=0,y=null;for(let e=0,t=t$.length;e!==t&&!1===p;e++){tZ.copy(t$[e]);let t=tZ.length();tZ.normalize();let i=tJ.dot(tZ);if(i<t+d&&i>0){tK.copy(t$[(e+1)%3]),tQ.copy(t$[(e+2)%3]);let n=tK.length(),r=tQ.length();tK.normalize(),tQ.normalize();let a=tJ.dot(tK),s=tJ.dot(tQ);if(a<n&&a>-n&&s<r&&s>-r){let e=Math.abs(i-t-d);if((null===y||e<y)&&(y=e,g=a,v=s,f=t,t1.copy(tZ),t2.copy(tK),t3.copy(tQ),m++,c))return!0}}}if(m){p=!0;let r=this.createContactEquation(s,o,e,t,l,h);t1.scale(-d,r.ri),r.ni.copy(t1),r.ni.negate(r.ni),t1.scale(f,t1),t2.scale(g,t2),t1.vadd(t2,t1),t3.scale(v,t3),t1.vadd(t3,r.rj),r.ri.vadd(i,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(n,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}let _=u.get();for(let r=0;2!==r&&!p;r++)for(let a=0;2!==a&&!p;a++)for(let u=0;2!==u&&!p;u++)if(_.set(0,0,0),r?_.vadd(t$[0],_):_.vsub(t$[0],_),a?_.vadd(t$[1],_):_.vsub(t$[1],_),u?_.vadd(t$[2],_):_.vsub(t$[2],_),n.vadd(_,t0),t0.vsub(i,t0),t0.lengthSquared()<d*d){if(c)return!0;p=!0;let r=this.createContactEquation(s,o,e,t,l,h);r.ri.copy(t0),r.ri.normalize(),r.ni.copy(r.ri),r.ri.scale(d,r.ri),r.rj.copy(_),r.ri.vadd(i,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(n,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}u.release(_),_=null;let x=u.get(),b=u.get(),M=u.get(),w=u.get(),S=u.get(),E=t$.length;for(let r=0;r!==E&&!p;r++)for(let a=0;a!==E&&!p;a++)if(r%3!=a%3){t$[a].cross(t$[r],x),x.normalize(),t$[r].vadd(t$[a],b),M.copy(i),M.vsub(b,M),M.vsub(n,M);let u=M.dot(x);x.scale(u,w);let f=0;for(;f===r%3||f===a%3;)f++;S.copy(i),S.vsub(w,S),S.vsub(b,S),S.vsub(n,S);let m=Math.abs(u),g=S.length();if(m<t$[f].length()&&g<d){if(c)return!0;p=!0;let r=this.createContactEquation(s,o,e,t,l,h);b.vadd(w,r.rj),r.rj.copy(r.rj),S.negate(r.ni),r.ni.normalize(),r.ri.copy(r.rj),r.ri.vadd(n,r.ri),r.ri.vsub(i,r.ri),r.ri.normalize(),r.ri.scale(d,r.ri),r.ri.vadd(i,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(n,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}}u.release(x,b,M,w,S)}planeBox(e,t,i,n,r,a,s,o,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,t.convexPolyhedronRepresentation.id=t.id,this.planeConvex(e,t.convexPolyhedronRepresentation,i,n,r,a,s,o,e,t,c)}convexConvex(e,t,i,n,r,a,s,o,l,h,c,u,d){if(!(i.distanceTo(n)>e.boundingSphereRadius+t.boundingSphereRadius)&&e.findSeparatingAxis(t,i,r,n,a,ih,u,d)){let u=[];e.clipAgainstHull(i,r,t,n,a,ih,-100,100,u);let d=0;for(let r=0;r!==u.length;r++){if(c)return!0;let a=this.createContactEquation(s,o,e,t,l,h),p=a.ri,f=a.rj;ih.negate(a.ni),u[r].normal.negate(ic),ic.scale(u[r].depth,ic),u[r].point.vadd(ic,p),f.copy(u[r].point),p.vsub(i,p),f.vsub(n,f),p.vadd(i,p),p.vsub(s.position,p),f.vadd(n,f),f.vsub(o.position,f),this.result.push(a),d++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(a,this.frictionResult)}this.enableFrictionReduction&&d&&this.createFrictionFromAverage(d)}}sphereConvex(e,t,i,n,r,a,s,o,l,h,c){let u=this.v3pool;i.vsub(n,t4);let d=t.faceNormals,p=t.faces,f=t.vertices,m=e.radius,g=!1;for(let r=0;r!==f.length;r++){let u=f[r];if(a.vmult(u,t8),n.vadd(t8,t8),t8.vsub(i,t7),t7.lengthSquared()<m*m){if(c)return!0;g=!0;let r=this.createContactEquation(s,o,e,t,l,h);r.ri.copy(t7),r.ri.normalize(),r.ni.copy(r.ri),r.ri.scale(m,r.ri),t8.vsub(n,r.rj),r.ri.vadd(i,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(n,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult);return}}for(let r=0,v=p.length;r!==v&&!1===g;r++){let v=d[r],y=p[r];a.vmult(v,t9),a.vmult(f[y[0]],ie),ie.vadd(n,ie),t9.scale(-m,it),i.vadd(it,it),it.vsub(ie,ii);let _=ii.dot(t9);if(i.vsub(ie,ir),_<0&&ir.dot(t9)>0){let r=[];for(let e=0,t=y.length;e!==t;e++){let t=u.get();a.vmult(f[y[e]],t),n.vadd(t,t),r.push(t)}if(function(e,t,i){let n=null,r=e.length;for(let a=0;a!==r;a++){let s=e[a];e[(a+1)%r].vsub(s,tq),tq.cross(t,tX),i.vsub(s,tY);let o=tX.dot(tY);if(null!==n&&(!(o>0)||!0!==n)&&(!(o<=0)||!1!==n))return!1;null===n&&(n=o>0)}return!0}(r,t9,i)){if(c)return!0;g=!0;let a=this.createContactEquation(s,o,e,t,l,h);t9.scale(-m,a.ri),t9.negate(a.ni);let d=u.get();t9.scale(-_,d);let p=u.get();t9.scale(-m,p),i.vsub(n,a.rj),a.rj.vadd(p,a.rj),a.rj.vadd(d,a.rj),a.rj.vadd(n,a.rj),a.rj.vsub(o.position,a.rj),a.ri.vadd(i,a.ri),a.ri.vsub(s.position,a.ri),u.release(d),u.release(p),this.result.push(a),this.createFrictionEquationsFromContact(a,this.frictionResult);for(let e=0,t=r.length;e!==t;e++)u.release(r[e]);return}for(let d=0;d!==y.length;d++){let p=u.get(),g=u.get();a.vmult(f[y[(d+1)%y.length]],p),a.vmult(f[y[(d+2)%y.length]],g),n.vadd(p,p),n.vadd(g,g),g.vsub(p,t5),t5.unit(t6);let v=u.get(),_=u.get();i.vsub(p,_);let x=_.dot(t6);t6.scale(x,v),v.vadd(p,v);let b=u.get();if(v.vsub(i,b),x>0&&x*x<t5.lengthSquared()&&b.lengthSquared()<m*m){if(c)return!0;let a=this.createContactEquation(s,o,e,t,l,h);v.vsub(n,a.rj),v.vsub(i,a.ni),a.ni.normalize(),a.ni.scale(m,a.ri),a.rj.vadd(n,a.rj),a.rj.vsub(o.position,a.rj),a.ri.vadd(i,a.ri),a.ri.vsub(s.position,a.ri),this.result.push(a),this.createFrictionEquationsFromContact(a,this.frictionResult);for(let e=0,t=r.length;e!==t;e++)u.release(r[e]);u.release(p),u.release(g),u.release(v),u.release(b),u.release(_);return}u.release(p),u.release(g),u.release(v),u.release(b),u.release(_)}for(let e=0,t=r.length;e!==t;e++)u.release(r[e])}}}planeConvex(e,t,i,n,r,a,s,o,l,h,c){is.set(0,0,1),r.vmult(is,is);let u=0;for(let r=0;r!==t.vertices.length;r++)if(ia.copy(t.vertices[r]),a.vmult(ia,ia),n.vadd(ia,ia),ia.vsub(i,io),0>=is.dot(io)){if(c)return!0;let r=this.createContactEquation(s,o,e,t,l,h);is.scale(is.dot(io),il),ia.vsub(il,il),il.vsub(i,r.ri),r.ni.copy(is),ia.vsub(n,r.rj),r.ri.vadd(i,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(n,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),u++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(r,this.frictionResult)}this.enableFrictionReduction&&u&&this.createFrictionFromAverage(u)}boxConvex(e,t,i,n,r,a,s,o,l,h,c){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t,i,n,r,a,s,o,e,t,c)}sphereHeightfield(e,t,i,n,r,a,s,o,l,h,c){let u=t.data,d=e.radius,p=t.elementSize;H.pointToLocalFrame(n,a,i,iS);let f=Math.floor((iS.x-d)/p)-1,m=Math.ceil((iS.x+d)/p)+1,g=Math.floor((iS.y-d)/p)-1,v=Math.ceil((iS.y+d)/p)+1;if(m<0||v<0||f>u.length||g>u[0].length)return;f<0&&(f=0),m<0&&(m=0),g<0&&(g=0),v<0&&(v=0),f>=u.length&&(f=u.length-1),m>=u.length&&(m=u.length-1),v>=u[0].length&&(v=u[0].length-1),g>=u[0].length&&(g=u[0].length-1);let y=[];t.getRectMinMax(f,g,m,v,y);let _=y[0],x=y[1];if(iS.z-d>x||iS.z+d<_)return;let b=this.result;for(let l=f;l<m;l++)for(let h=g;h<v;h++){let u=b.length,d=!1;if(t.getConvexTrianglePillar(l,h,!1),H.pointToWorldFrame(n,a,t.pillarOffset,iE),i.distanceTo(iE)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(d=this.sphereConvex(e,t.pillarConvex,i,iE,r,a,s,o,e,t,c)),c&&d||(t.getConvexTrianglePillar(l,h,!0),H.pointToWorldFrame(n,a,t.pillarOffset,iE),i.distanceTo(iE)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(d=this.sphereConvex(e,t.pillarConvex,i,iE,r,a,s,o,e,t,c)),c&&d))return!0;if(b.length-u>2)return}}boxHeightfield(e,t,i,n,r,a,s,o,l,h,c){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,t,i,n,r,a,s,o,e,t,c)}convexHeightfield(e,t,i,n,r,a,s,o,l,h,c){let u=t.data,d=t.elementSize,p=e.boundingSphereRadius;H.pointToLocalFrame(n,a,i,ib);let f=Math.floor((ib.x-p)/d)-1,m=Math.ceil((ib.x+p)/d)+1,g=Math.floor((ib.y-p)/d)-1,v=Math.ceil((ib.y+p)/d)+1;if(m<0||v<0||f>u.length||g>u[0].length)return;f<0&&(f=0),m<0&&(m=0),g<0&&(g=0),v<0&&(v=0),f>=u.length&&(f=u.length-1),m>=u.length&&(m=u.length-1),v>=u[0].length&&(v=u[0].length-1),g>=u[0].length&&(g=u[0].length-1);let y=[];t.getRectMinMax(f,g,m,v,y);let _=y[0],x=y[1];if(!(ib.z-p>x)&&!(ib.z+p<_))for(let l=f;l<m;l++)for(let h=g;h<v;h++){let u=!1;if(t.getConvexTrianglePillar(l,h,!1),H.pointToWorldFrame(n,a,t.pillarOffset,iM),i.distanceTo(iM)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(u=this.convexConvex(e,t.pillarConvex,i,iM,r,a,s,o,null,null,c,iw,null)),c&&u||(t.getConvexTrianglePillar(l,h,!0),H.pointToWorldFrame(n,a,t.pillarOffset,iM),i.distanceTo(iM)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(u=this.convexConvex(e,t.pillarConvex,i,iM,r,a,s,o,null,null,c,iw,null)),c&&u))return!0}}sphereParticle(e,t,i,n,r,a,s,o,l,h,c){if(im.set(0,0,1),n.vsub(i,im),im.lengthSquared()<=e.radius*e.radius){if(c)return!0;let i=this.createContactEquation(o,s,t,e,l,h);im.normalize(),i.rj.copy(im),i.rj.scale(e.radius,i.rj),i.ni.copy(im),i.ni.negate(i.ni),i.ri.set(0,0,0),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}planeParticle(e,t,i,n,r,a,s,o,l,h,c){if(iu.set(0,0,1),s.quaternion.vmult(iu,iu),n.vsub(s.position,id),0>=iu.dot(id)){if(c)return!0;let i=this.createContactEquation(o,s,t,e,l,h);i.ni.copy(iu),i.ni.negate(i.ni),i.ri.set(0,0,0),iu.scale(iu.dot(n),ip),n.vsub(ip,ip),i.rj.copy(ip),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}boxParticle(e,t,i,n,r,a,s,o,l,h,c){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,t,i,n,r,a,s,o,e,t,c)}convexParticle(e,t,i,n,r,a,s,o,l,h,c){let u=-1,d=null;if(iv.copy(n),iv.vsub(i,iv),r.conjugate(ig),ig.vmult(iv,iv),e.pointIsInside(iv)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(i,r),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(r);for(let t=0,i=e.faces.length;t!==i;t++){let i=[e.worldVertices[e.faces[t][0]]],r=e.worldFaceNormals[t];n.vsub(i[0],i_);let a=-r.dot(i_);if(null===d||Math.abs(a)<Math.abs(d)){if(c)return!0;d=a,u=t,iy.copy(r)}}if(-1!==u){let r=this.createContactEquation(o,s,t,e,l,h);iy.scale(d,ix),ix.vadd(n,ix),ix.vsub(i,ix),r.rj.copy(ix),iy.negate(r.ni),r.ri.set(0,0,0);let a=r.ri,c=r.rj;a.vadd(n,a),a.vsub(o.position,a),c.vadd(i,c),c.vsub(s.position,c),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(e,t,i,n,r,a,s,o,l,h,c){return this.convexHeightfield(t,e,n,i,a,r,o,s,l,h,c)}particleCylinder(e,t,i,n,r,a,s,o,l,h,c){return this.convexParticle(t,e,n,i,a,r,o,s,l,h,c)}sphereTrimesh(e,t,i,n,r,a,s,o,l,h,c){H.pointToLocalFrame(n,a,i,tF);let u=e.radius;tH.lowerBound.set(tF.x-u,tF.y-u,tF.z-u),tH.upperBound.set(tF.x+u,tF.y+u,tF.z+u),t.getTrianglesInAABB(tH,tG);let d=e.radius*e.radius;for(let r=0;r<tG.length;r++)for(let u=0;u<3;u++)if(t.getVertex(t.indices[3*tG[r]+u],tL),tL.vsub(tF,tP),tP.lengthSquared()<=d){if(tN.copy(tL),H.pointToWorldFrame(n,a,tN,tL),tL.vsub(i,tP),c)return!0;let r=this.createContactEquation(s,o,e,t,l,h);r.ni.copy(tP),r.ni.normalize(),r.ri.copy(r.ni),r.ri.scale(e.radius,r.ri),r.ri.vadd(i,r.ri),r.ri.vsub(s.position,r.ri),r.rj.copy(tL),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}for(let r=0;r<tG.length;r++)for(let u=0;u<3;u++){t.getVertex(t.indices[3*tG[r]+u],tI),t.getVertex(t.indices[3*tG[r]+(u+1)%3],tU),tU.vsub(tI,tO),tF.vsub(tU,tz);let d=tz.dot(tO);tF.vsub(tI,tz);let p=tz.dot(tO);if(p>0&&d<0&&(tF.vsub(tI,tz),tD.copy(tO),tD.normalize(),p=tz.dot(tD),tD.scale(p,tz),tz.vadd(tI,tz),tz.distanceTo(tF)<e.radius)){if(c)return!0;let r=this.createContactEquation(s,o,e,t,l,h);tz.vsub(tF,r.ni),r.ni.normalize(),r.ni.scale(e.radius,r.ri),r.ri.vadd(i,r.ri),r.ri.vsub(s.position,r.ri),H.pointToWorldFrame(n,a,tz,tz),tz.vsub(o.position,r.rj),H.vectorToWorldFrame(a,r.ni,r.ni),H.vectorToWorldFrame(a,r.ri,r.ri),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}}for(let r=0,u=tG.length;r!==u;r++){t.getTriangleVertices(tG[r],tB,tk,tV),t.getNormal(tG[r],tR),tF.vsub(tB,tz);let u=tz.dot(tR);if(tR.scale(u,tz),tF.vsub(tz,tz),u=tz.distanceTo(tF),e_.pointInTriangle(tz,tB,tk,tV)&&u<e.radius){if(c)return!0;let r=this.createContactEquation(s,o,e,t,l,h);tz.vsub(tF,r.ni),r.ni.normalize(),r.ni.scale(e.radius,r.ri),r.ri.vadd(i,r.ri),r.ri.vsub(s.position,r.ri),H.pointToWorldFrame(n,a,tz,tz),tz.vsub(o.position,r.rj),H.vectorToWorldFrame(a,r.ni,r.ni),H.vectorToWorldFrame(a,r.ri,r.ri),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}}tG.length=0}planeTrimesh(e,t,i,n,r,a,s,o,l,h,c){let u=new R;tT.set(0,0,1),r.vmult(tT,tT);for(let r=0;r<t.vertices.length/3;r++){t.getVertex(r,u);let d=new R;if(d.copy(u),H.pointToWorldFrame(n,a,d,u),u.vsub(i,tA),0>=tT.dot(tA)){if(c)return!0;let i=this.createContactEquation(s,o,e,t,l,h);i.ni.copy(tT),tT.scale(tA.dot(tT),tC),u.vsub(tC,tC),i.ri.copy(tC),i.ri.vsub(s.position,i.ri),i.rj.copy(u),i.rj.vsub(o.position,i.rj),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}}}const t_=new R,tx=new R,tb=new R,tM=new R,tw=new R,tS=new z,tE=new z,tT=new R,tA=new R,tC=new R,tR=new R,tP=new R;new R;const tL=new R,tN=new R,tI=new R,tU=new R,tO=new R,tD=new R,tF=new R,tz=new R,tB=new R,tk=new R,tV=new R,tH=new I,tG=[],tW=new R,tj=new R,tq=new R,tX=new R,tY=new R,tJ=new R,tZ=new R,tK=new R,tQ=new R,t$=[new R,new R,new R,new R,new R,new R],t0=new R,t1=new R,t2=new R,t3=new R,t4=new R,t5=new R,t6=new R,t7=new R,t8=new R,t9=new R,ie=new R,it=new R,ii=new R,ir=new R;new R,new R;const ia=new R,is=new R,io=new R,il=new R,ih=new R,ic=new R,iu=new R,id=new R,ip=new R,im=new R,ig=new z,iv=new R;new R;const iy=new R,i_=new R,ix=new R,ib=new R,iM=new R,iw=[0],iS=new R,iE=new R;class iT{constructor(){this.current=[],this.previous=[]}getKey(e,t){if(t<e){let i=t;t=e,e=i}return e<<16|t}set(e,t){let i=this.getKey(e,t),n=this.current,r=0;for(;i>n[r];)r++;if(i!==n[r]){for(let e=n.length-1;e>=r;e--)n[e+1]=n[e];n[r]=i}}tick(){let e=this.current;this.current=this.previous,this.previous=e,this.current.length=0}getDiff(e,t){let i=this.current,n=this.previous,r=i.length,a=n.length,s=0;for(let t=0;t<r;t++){let r=i[t];for(;r>n[s];)s++;r===n[s]||iA(e,r)}s=0;for(let e=0;e<a;e++){let r=n[e];for(;r>i[s];)s++;i[s]===r||iA(t,r)}}}function iA(e,t){e.push((4294901760&t)>>16,65535&t)}const iC=(e,t)=>e<t?`${e}-${t}`:`${t}-${e}`;class iR{constructor(){this.data={keys:[]}}get(e,t){let i=iC(e,t);return this.data[i]}set(e,t,i){let n=iC(e,t);this.get(e,t)||this.data.keys.push(n),this.data[n]=i}delete(e,t){let i=iC(e,t),n=this.data.keys.indexOf(i);-1!==n&&this.data.keys.splice(n,1),delete this.data[i]}reset(){let e=this.data,t=e.keys;for(;t.length>0;){let i=t.pop();delete e[i]}}}class iP extends F{constructor(e){void 0===e&&(e={}),super(),this.dt=-1,this.allowSleep=!!e.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==e.quatNormalizeSkip?e.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==e.quatNormalizeFast&&e.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new R,e.gravity&&this.gravity.copy(e.gravity),e.frictionGravity&&(this.frictionGravity=new R,this.frictionGravity.copy(e.frictionGravity)),this.broadphase=void 0!==e.broadphase?e.broadphase:new ev,this.bodies=[],this.hasActiveBodies=!1,this.solver=void 0!==e.solver?e.solver:new tu,this.constraints=[],this.narrowphase=new ty(this),this.collisionMatrix=new D,this.collisionMatrixPrevious=new D,this.bodyOverlapKeeper=new iT,this.shapeOverlapKeeper=new iT,this.contactmaterials=[],this.contactMaterialTable=new iR,this.defaultMaterial=new to("default"),this.defaultContactMaterial=new ts(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(e,t){return this.contactMaterialTable.get(e.id,t.id)}collisionMatrixTick(){let e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(e){this.constraints.push(e)}removeConstraint(e){let t=this.constraints.indexOf(e);-1!==t&&this.constraints.splice(t,1)}rayTest(e,t,i){i instanceof ey?this.raycastClosest(e,t,{skipBackfaces:!0},i):this.raycastAll(e,t,{skipBackfaces:!0},i)}raycastAll(e,t,i,n){return void 0===i&&(i={}),i.mode=e_.ALL,i.from=e,i.to=t,i.callback=n,iL.intersectWorld(this,i)}raycastAny(e,t,i,n){return void 0===i&&(i={}),i.mode=e_.ANY,i.from=e,i.to=t,i.result=n,iL.intersectWorld(this,i)}raycastClosest(e,t,i,n){return void 0===i&&(i={}),i.mode=e_.CLOSEST,i.from=e,i.to=t,i.result=n,iL.intersectWorld(this,i)}addBody(e){this.bodies.includes(e)||(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof Q&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.idToBodyMap[e.id]=e,this.dispatchEvent(this.addBodyEvent))}removeBody(e){e.world=null;let t=this.bodies.length-1,i=this.bodies,n=i.indexOf(e);if(-1!==n){i.splice(n,1);for(let e=0;e!==i.length;e++)i[e].index=e;this.collisionMatrix.setNumObjects(t),this.removeBodyEvent.body=e,delete this.idToBodyMap[e.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(e){return this.idToBodyMap[e]}getShapeById(e){let t=this.bodies;for(let i=0;i<t.length;i++){let n=t[i].shapes;for(let t=0;t<n.length;t++){let i=n[t];if(i.id===e)return i}}return null}addContactMaterial(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)}removeContactMaterial(e){let t=this.contactmaterials.indexOf(e);-1!==t&&(this.contactmaterials.splice(t,1),this.contactMaterialTable.delete(e.materials[0].id,e.materials[1].id))}fixedStep(e,t){void 0===e&&(e=1/60),void 0===t&&(t=10);let i=iN.now()/1e3;if(this.lastCallTime){let n=i-this.lastCallTime;this.step(e,n,t)}else this.step(e,void 0,t);this.lastCallTime=i}step(e,t,i){if(void 0===i&&(i=10),void 0===t)this.internalStep(e),this.time+=e;else{this.accumulator+=t;let n=iN.now(),r=0;for(;this.accumulator>=e&&r<i&&(this.internalStep(e),this.accumulator-=e,r++,!(iN.now()-n>1e3*e)););this.accumulator=this.accumulator%e;let a=this.accumulator/e;for(let e=0;e!==this.bodies.length;e++){let t=this.bodies[e];t.previousPosition.lerp(t.position,a,t.interpolatedPosition),t.previousQuaternion.slerp(t.quaternion,a,t.interpolatedQuaternion),t.previousQuaternion.normalize()}this.time+=t}}internalStep(e){this.dt=e;let t=this.contacts,i=this.bodies.length,n=this.bodies,r=this.solver,a=this.gravity,s=this.doProfiling,o=this.profile,l=Q.DYNAMIC,h=-1/0,c=this.constraints;a.length();let u=a.x,d=a.y,p=a.z,f=0;for(s&&(h=iN.now()),f=0;f!==i;f++){let e=n[f];if(e.type===l){let t=e.force,i=e.mass;t.x+=i*u,t.y+=i*d,t.z+=i*p}}for(let e=0,t=this.subsystems.length;e!==t;e++)this.subsystems[e].update();s&&(h=iN.now()),iz.length=0,iB.length=0,this.broadphase.collisionPairs(this,iz,iB),s&&(o.broadphase=iN.now()-h);let m=c.length;for(f=0;f!==m;f++){let e=c[f];if(!e.collideConnected)for(let t=iz.length-1;t>=0;t-=1)(e.bodyA===iz[t]&&e.bodyB===iB[t]||e.bodyB===iz[t]&&e.bodyA===iB[t])&&(iz.splice(t,1),iB.splice(t,1))}this.collisionMatrixTick(),s&&(h=iN.now());let g=t.length;for(f=0;f!==g;f++)iD.push(t[f]);t.length=0;let v=this.frictionEquations.length;for(f=0;f!==v;f++)iF.push(this.frictionEquations[f]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(iz,iB,this,t,iD,this.frictionEquations,iF),s&&(o.narrowphase=iN.now()-h),s&&(h=iN.now()),f=0;f<this.frictionEquations.length;f++)r.addEquation(this.frictionEquations[f]);let y=t.length;for(let e=0;e!==y;e++){let i=t[e],n=i.bi,a=i.bj,s=i.si,o=i.sj;(n.material&&a.material&&this.getContactMaterial(n.material,a.material)||this.defaultContactMaterial).friction,n.material&&a.material&&(n.material.friction>=0&&a.material.friction>=0&&(n.material.friction,a.material.friction),n.material.restitution>=0&&a.material.restitution>=0&&(i.restitution=n.material.restitution*a.material.restitution)),r.addEquation(i),n.allowSleep&&n.type===Q.DYNAMIC&&n.sleepState===Q.SLEEPING&&a.sleepState===Q.AWAKE&&a.type!==Q.STATIC&&a.velocity.lengthSquared()+a.angularVelocity.lengthSquared()>=2*a.sleepSpeedLimit**2&&(n.wakeUpAfterNarrowphase=!0),a.allowSleep&&a.type===Q.DYNAMIC&&a.sleepState===Q.SLEEPING&&n.sleepState===Q.AWAKE&&n.type!==Q.STATIC&&n.velocity.lengthSquared()+n.angularVelocity.lengthSquared()>=2*n.sleepSpeedLimit**2&&(a.wakeUpAfterNarrowphase=!0),this.collisionMatrix.set(n,a,!0),this.collisionMatrixPrevious.get(n,a)||(iO.body=a,iO.contact=i,n.dispatchEvent(iO),iO.body=n,a.dispatchEvent(iO)),this.bodyOverlapKeeper.set(n.id,a.id),this.shapeOverlapKeeper.set(s.id,o.id)}for(this.emitContactEvents(),s&&(o.makeContactConstraints=iN.now()-h,h=iN.now()),f=0;f!==i;f++){let e=n[f];e.wakeUpAfterNarrowphase&&(e.wakeUp(),e.wakeUpAfterNarrowphase=!1)}for(f=0,m=c.length;f!==m;f++){let e=c[f];e.update();for(let t=0,i=e.equations.length;t!==i;t++){let i=e.equations[t];r.addEquation(i)}}r.solve(e,this),s&&(o.solve=iN.now()-h),r.removeAllEquations();let _=Math.pow;for(f=0;f!==i;f++){let t=n[f];if(t.type&l){let i=_(1-t.linearDamping,e),n=t.velocity;n.scale(i,n);let r=t.angularVelocity;if(r){let i=_(1-t.angularDamping,e);r.scale(i,r)}}}this.dispatchEvent(iU),s&&(h=iN.now());let x=this.stepnumber%(this.quatNormalizeSkip+1)==0,b=this.quatNormalizeFast;for(f=0;f!==i;f++)n[f].integrate(e,x,b);this.clearForces(),this.broadphase.dirty=!0,s&&(o.integrate=iN.now()-h),this.stepnumber+=1,this.dispatchEvent(iI);let M=!0;if(this.allowSleep)for(f=0,M=!1;f!==i;f++){let e=n[f];e.sleepTick(this.time),e.sleepState!==Q.SLEEPING&&(M=!0)}this.hasActiveBodies=M}emitContactEvents(){let e=this.hasAnyEventListener("beginContact"),t=this.hasAnyEventListener("endContact");if((e||t)&&this.bodyOverlapKeeper.getDiff(ik,iV),e){for(let e=0,t=ik.length;e<t;e+=2)iH.bodyA=this.getBodyById(ik[e]),iH.bodyB=this.getBodyById(ik[e+1]),this.dispatchEvent(iH);iH.bodyA=iH.bodyB=null}if(t){for(let e=0,t=iV.length;e<t;e+=2)iG.bodyA=this.getBodyById(iV[e]),iG.bodyB=this.getBodyById(iV[e+1]),this.dispatchEvent(iG);iG.bodyA=iG.bodyB=null}ik.length=iV.length=0;let i=this.hasAnyEventListener("beginShapeContact"),n=this.hasAnyEventListener("endShapeContact");if((i||n)&&this.shapeOverlapKeeper.getDiff(ik,iV),i){for(let e=0,t=ik.length;e<t;e+=2){let t=this.getShapeById(ik[e]),i=this.getShapeById(ik[e+1]);iW.shapeA=t,iW.shapeB=i,t&&(iW.bodyA=t.body),i&&(iW.bodyB=i.body),this.dispatchEvent(iW)}iW.bodyA=iW.bodyB=iW.shapeA=iW.shapeB=null}if(n){for(let e=0,t=iV.length;e<t;e+=2){let t=this.getShapeById(iV[e]),i=this.getShapeById(iV[e+1]);ij.shapeA=t,ij.shapeB=i,t&&(ij.bodyA=t.body),i&&(ij.bodyB=i.body),this.dispatchEvent(ij)}ij.bodyA=ij.bodyB=ij.shapeA=ij.shapeB=null}}clearForces(){let e=this.bodies,t=e.length;for(let i=0;i!==t;i++){let t=e[i];t.force,t.torque,t.force.set(0,0,0),t.torque.set(0,0,0)}}}new I;const iL=new e_,iN=globalThis.performance||{};if(!iN.now){let e=Date.now();iN.timing&&iN.timing.navigationStart&&(e=iN.timing.navigationStart),iN.now=()=>Date.now()-e}new R;const iI={type:"postStep"},iU={type:"preStep"},iO={type:Q.COLLIDE_EVENT_NAME,body:null,contact:null},iD=[],iF=[],iz=[],iB=[],ik=[],iV=[],iH={type:"beginContact",bodyA:null,bodyB:null},iG={type:"endContact",bodyA:null,bodyB:null},iW={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ij={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};var T=(S("ilwiq"),S("ilwiq"));const iq={type:"change"},iX={type:"start"},iY={type:"end"},iJ=new T.Ray,iZ=new T.Plane,iK=Math.cos(70*T.MathUtils.DEG2RAD);class iQ extends T.EventDispatcher{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new T.Vector3,this.cursor=new T.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:T.MOUSE.ROTATE,MIDDLE:T.MOUSE.DOLLY,RIGHT:T.MOUSE.PAN},this.touches={ONE:T.TOUCH.ROTATE,TWO:T.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return s.phi},this.getAzimuthalAngle=function(){return s.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",Z),this._domElementKeyEvents=e},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Z),this._domElementKeyEvents=null},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(iq),i.update(),r=n.NONE},this.update=function(){let t=new T.Vector3,c=new(0,T.Quaternion)().setFromUnitVectors(e.up,new T.Vector3(0,1,0)),u=c.clone().invert(),d=new T.Vector3,p=new T.Quaternion,f=new T.Vector3,m=2*Math.PI;return function(g=null){let v=i.object.position;t.copy(v).sub(i.target),t.applyQuaternion(c),s.setFromVector3(t),i.autoRotate&&r===n.NONE&&A(null!==g?2*Math.PI/60*i.autoRotateSpeed*g:2*Math.PI/60/60*i.autoRotateSpeed),i.enableDamping?(s.theta+=o.theta*i.dampingFactor,s.phi+=o.phi*i.dampingFactor):(s.theta+=o.theta,s.phi+=o.phi);let y=i.minAzimuthAngle,M=i.maxAzimuthAngle;isFinite(y)&&isFinite(M)&&(y<-Math.PI?y+=m:y>Math.PI&&(y-=m),M<-Math.PI?M+=m:M>Math.PI&&(M-=m),y<=M?s.theta=Math.max(y,Math.min(M,s.theta)):s.theta=s.theta>(y+M)/2?Math.max(y,s.theta):Math.min(M,s.theta)),s.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,s.phi)),s.makeSafe(),!0===i.enableDamping?i.target.addScaledVector(h,i.dampingFactor):i.target.add(h),i.target.sub(i.cursor),i.target.clampLength(i.minTargetRadius,i.maxTargetRadius),i.target.add(i.cursor);let w=!1;if(i.zoomToCursor&&b||i.object.isOrthographicCamera)s.radius=O(s.radius);else{let e=s.radius;s.radius=O(s.radius*l),w=e!=s.radius}if(t.setFromSpherical(s),t.applyQuaternion(u),v.copy(i.target).add(t),i.object.lookAt(i.target),!0===i.enableDamping?(o.theta*=1-i.dampingFactor,o.phi*=1-i.dampingFactor,h.multiplyScalar(1-i.dampingFactor)):(o.set(0,0,0),h.set(0,0,0)),i.zoomToCursor&&b){let n=null;if(i.object.isPerspectiveCamera){let e=t.length();n=O(e*l);let r=e-n;i.object.position.addScaledVector(_,r),i.object.updateMatrixWorld(),w=!!r}else if(i.object.isOrthographicCamera){let e=new T.Vector3(x.x,x.y,0);e.unproject(i.object);let r=i.object.zoom;i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/l)),i.object.updateProjectionMatrix(),w=r!==i.object.zoom;let a=new T.Vector3(x.x,x.y,0);a.unproject(i.object),i.object.position.sub(a).add(e),i.object.updateMatrixWorld(),n=t.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),i.zoomToCursor=!1;null!==n&&(this.screenSpacePanning?i.target.set(0,0,-1).transformDirection(i.object.matrix).multiplyScalar(n).add(i.object.position):(iJ.origin.copy(i.object.position),iJ.direction.set(0,0,-1).transformDirection(i.object.matrix),Math.abs(i.object.up.dot(iJ.direction))<iK?e.lookAt(i.target):(iZ.setFromNormalAndCoplanarPoint(i.object.up,i.target),iJ.intersectPlane(iZ,i.target))))}else if(i.object.isOrthographicCamera){let e=i.object.zoom;i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/l)),e!==i.object.zoom&&(i.object.updateProjectionMatrix(),w=!0)}return l=1,b=!1,!!(w||d.distanceToSquared(i.object.position)>a||8*(1-p.dot(i.object.quaternion))>a||f.distanceToSquared(i.target)>a)&&(i.dispatchEvent(iq),d.copy(i.object.position),p.copy(i.object.quaternion),f.copy(i.target),!0)}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",Q),i.domElement.removeEventListener("pointerdown",W),i.domElement.removeEventListener("pointercancel",q),i.domElement.removeEventListener("wheel",X),i.domElement.removeEventListener("pointermove",j),i.domElement.removeEventListener("pointerup",q),i.domElement.getRootNode().removeEventListener("keydown",Y,{capture:!0}),null!==i._domElementKeyEvents&&(i._domElementKeyEvents.removeEventListener("keydown",Z),i._domElementKeyEvents=null)};let i=this,n={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},r=n.NONE,a=1e-6,s=new T.Spherical,o=new T.Spherical,l=1,h=new T.Vector3,c=new T.Vector2,u=new T.Vector2,d=new T.Vector2,p=new T.Vector2,f=new T.Vector2,m=new T.Vector2,g=new T.Vector2,v=new T.Vector2,y=new T.Vector2,_=new T.Vector3,x=new T.Vector2,b=!1,M=[],w={},S=!1;function E(e){let t=Math.abs(.01*e);return Math.pow(.95,i.zoomSpeed*t)}function A(e){o.theta-=e}function C(e){o.phi-=e}let R=function(){let e=new T.Vector3;return function(t,i){e.setFromMatrixColumn(i,0),e.multiplyScalar(-t),h.add(e)}}(),P=function(){let e=new T.Vector3;return function(t,n){!0===i.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(i.object.up,e)),e.multiplyScalar(t),h.add(e)}}(),L=function(){let e=new T.Vector3;return function(t,n){let r=i.domElement;if(i.object.isPerspectiveCamera){let a=i.object.position;e.copy(a).sub(i.target);let s=e.length();R(2*t*(s*=Math.tan(i.object.fov/2*Math.PI/180))/r.clientHeight,i.object.matrix),P(2*n*s/r.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(R(t*(i.object.right-i.object.left)/i.object.zoom/r.clientWidth,i.object.matrix),P(n*(i.object.top-i.object.bottom)/i.object.zoom/r.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function N(e){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?l/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function I(e){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?l*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function U(e,t){if(!i.zoomToCursor)return;b=!0;let n=i.domElement.getBoundingClientRect(),r=e-n.left,a=t-n.top,s=n.width,o=n.height;x.x=r/s*2-1,x.y=-(a/o*2)+1,_.set(x.x,x.y,1).unproject(i.object).sub(i.object.position).normalize()}function O(e){return Math.max(i.minDistance,Math.min(i.maxDistance,e))}function D(e){c.set(e.clientX,e.clientY)}function F(e){p.set(e.clientX,e.clientY)}function z(e){if(1===M.length)c.set(e.pageX,e.pageY);else{let t=ee(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);c.set(i,n)}}function B(e){if(1===M.length)p.set(e.pageX,e.pageY);else{let t=ee(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);p.set(i,n)}}function k(e){let t=ee(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);g.set(0,r)}function V(e){if(1==M.length)u.set(e.pageX,e.pageY);else{let t=ee(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);u.set(i,n)}d.subVectors(u,c).multiplyScalar(i.rotateSpeed);let t=i.domElement;A(2*Math.PI*d.x/t.clientHeight),C(2*Math.PI*d.y/t.clientHeight),c.copy(u)}function H(e){if(1===M.length)f.set(e.pageX,e.pageY);else{let t=ee(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);f.set(i,n)}m.subVectors(f,p).multiplyScalar(i.panSpeed),L(m.x,m.y),p.copy(f)}function G(e){let t=ee(e),n=e.pageX-t.x,r=e.pageY-t.y,a=Math.sqrt(n*n+r*r);v.set(0,a),y.set(0,Math.pow(v.y/g.y,i.zoomSpeed)),N(y.y),g.copy(v),U((e.pageX+t.x)*.5,(e.pageY+t.y)*.5)}function W(e){if(!1!==i.enabled)0===M.length&&(i.domElement.setPointerCapture(e.pointerId),i.domElement.addEventListener("pointermove",j),i.domElement.addEventListener("pointerup",q)),!function(e){for(let t=0;t<M.length;t++)if(M[t]==e.pointerId)return!0;return!1}(e)&&(M.push(e.pointerId),"touch"===e.pointerType?K(e):function(e){let t;switch(e.button){case 0:t=i.mouseButtons.LEFT;break;case 1:t=i.mouseButtons.MIDDLE;break;case 2:t=i.mouseButtons.RIGHT;break;default:t=-1}switch(t){case T.MOUSE.DOLLY:if(!1===i.enableZoom)return;U(e.clientX,e.clientX),g.set(e.clientX,e.clientY),r=n.DOLLY;break;case T.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===i.enablePan)return;F(e),r=n.PAN}else{if(!1===i.enableRotate)return;D(e),r=n.ROTATE}break;case T.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===i.enableRotate)return;D(e),r=n.ROTATE}else{if(!1===i.enablePan)return;F(e),r=n.PAN}break;default:r=n.NONE}r!==n.NONE&&i.dispatchEvent(iX)}(e))}function j(e){!1!==i.enabled&&("touch"===e.pointerType?function(e){switch($(e),r){case n.TOUCH_ROTATE:if(!1===i.enableRotate)return;V(e),i.update();break;case n.TOUCH_PAN:if(!1===i.enablePan)return;H(e),i.update();break;case n.TOUCH_DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;i.enableZoom&&G(e),i.enablePan&&H(e),i.update();break;case n.TOUCH_DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;i.enableZoom&&G(e),i.enableRotate&&V(e),i.update();break;default:r=n.NONE}}(e):function(e){switch(r){case n.ROTATE:if(!1===i.enableRotate)return;!function(e){u.set(e.clientX,e.clientY),d.subVectors(u,c).multiplyScalar(i.rotateSpeed);let t=i.domElement;A(2*Math.PI*d.x/t.clientHeight),C(2*Math.PI*d.y/t.clientHeight),c.copy(u),i.update()}(e);break;case n.DOLLY:if(!1===i.enableZoom)return;v.set(e.clientX,e.clientY),y.subVectors(v,g),y.y>0?N(E(y.y)):y.y<0&&I(E(y.y)),g.copy(v),i.update();break;case n.PAN:if(!1===i.enablePan)return;f.set(e.clientX,e.clientY),m.subVectors(f,p).multiplyScalar(i.panSpeed),L(m.x,m.y),p.copy(f),i.update()}}(e))}function q(e){switch(function(e){delete w[e.pointerId];for(let t=0;t<M.length;t++)if(M[t]==e.pointerId){M.splice(t,1);return}}(e),M.length){case 0:i.domElement.releasePointerCapture(e.pointerId),i.domElement.removeEventListener("pointermove",j),i.domElement.removeEventListener("pointerup",q),i.dispatchEvent(iY),r=n.NONE;break;case 1:let t=M[0],a=w[t];K({pointerId:t,pageX:a.x,pageY:a.y})}}function X(e){if(!1!==i.enabled&&!1!==i.enableZoom&&r===n.NONE){var t;e.preventDefault(),i.dispatchEvent(iX),U((t=function(e){let t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100}return e.ctrlKey&&!S&&(i.deltaY*=10),i}(e)).clientX,t.clientY),t.deltaY<0?I(E(t.deltaY)):t.deltaY>0&&N(E(t.deltaY)),i.update(),i.dispatchEvent(iY)}}function Y(e){"Control"===e.key&&(S=!0,i.domElement.getRootNode().addEventListener("keyup",J,{passive:!0,capture:!0}))}function J(e){"Control"===e.key&&(S=!1,i.domElement.getRootNode().removeEventListener("keyup",J,{passive:!0,capture:!0}))}function Z(e){!1!==i.enabled&&!1!==i.enablePan&&function(e){let t=!1;switch(e.code){case i.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?C(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):L(0,i.keyPanSpeed),t=!0;break;case i.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?C(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):L(0,-i.keyPanSpeed),t=!0;break;case i.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?A(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):L(i.keyPanSpeed,0),t=!0;break;case i.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?A(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):L(-i.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),i.update())}(e)}function K(e){switch($(e),M.length){case 1:switch(i.touches.ONE){case T.TOUCH.ROTATE:if(!1===i.enableRotate)return;z(e),r=n.TOUCH_ROTATE;break;case T.TOUCH.PAN:if(!1===i.enablePan)return;B(e),r=n.TOUCH_PAN;break;default:r=n.NONE}break;case 2:switch(i.touches.TWO){case T.TOUCH.DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;i.enableZoom&&k(e),i.enablePan&&B(e),r=n.TOUCH_DOLLY_PAN;break;case T.TOUCH.DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;i.enableZoom&&k(e),i.enableRotate&&z(e),r=n.TOUCH_DOLLY_ROTATE;break;default:r=n.NONE}break;default:r=n.NONE}r!==n.NONE&&i.dispatchEvent(iX)}function Q(e){!1!==i.enabled&&e.preventDefault()}function $(e){let t=w[e.pointerId];void 0===t&&(t=new T.Vector2,w[e.pointerId]=t),t.set(e.pageX,e.pageY)}function ee(e){return w[e.pointerId===M[0]?M[1]:M[0]]}i.domElement.addEventListener("contextmenu",Q),i.domElement.addEventListener("pointerdown",W),i.domElement.addEventListener("pointercancel",q),i.domElement.addEventListener("wheel",X,{passive:!1}),i.domElement.getRootNode().addEventListener("keydown",Y,{passive:!0,capture:!0}),this.update()}}var T=S("ilwiq");const i$=new T.Raycaster,i0=new T.Vector3,i1=new T.Vector3,i2=new T.Quaternion,i3={X:new T.Vector3(1,0,0),Y:new T.Vector3(0,1,0),Z:new T.Vector3(0,0,1)},i4={type:"change"},i5={type:"mouseDown",mode:null},i6={type:"mouseUp",mode:null},i7={type:"objectChange"};class i8 extends T.Object3D{constructor(e,t){super(),void 0===t&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),t=document),this.isTransformControls=!0,this.visible=!1,this.domElement=t,this.domElement.style.touchAction="none";let i=new n_;this._gizmo=i,this.add(i);let n=new nx;this._plane=n,this.add(n);let r=this;function a(e,t){let a=t;Object.defineProperty(r,e,{get:function(){return void 0!==a?a:t},set:function(t){a!==t&&(a=t,n[e]=t,i[e]=t,r.dispatchEvent({type:e+"-changed",value:t}),r.dispatchEvent(i4))}}),r[e]=t,n[e]=t,i[e]=t}a("camera",e),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0);let s=new T.Vector3,o=new T.Vector3,l=new T.Quaternion,h=new T.Quaternion,c=new T.Vector3,u=new T.Quaternion,d=new T.Vector3,p=new T.Vector3,f=new T.Vector3,m=new T.Vector3;a("worldPosition",s),a("worldPositionStart",o),a("worldQuaternion",l),a("worldQuaternionStart",h),a("cameraPosition",c),a("cameraQuaternion",u),a("pointStart",d),a("pointEnd",p),a("rotationAxis",f),a("rotationAngle",0),a("eye",m),this._offset=new T.Vector3,this._startNorm=new T.Vector3,this._endNorm=new T.Vector3,this._cameraScale=new T.Vector3,this._parentPosition=new T.Vector3,this._parentQuaternion=new T.Quaternion,this._parentQuaternionInv=new T.Quaternion,this._parentScale=new T.Vector3,this._worldScaleStart=new T.Vector3,this._worldQuaternionInv=new T.Quaternion,this._worldScale=new T.Vector3,this._positionStart=new T.Vector3,this._quaternionStart=new T.Quaternion,this._scaleStart=new T.Vector3,this._getPointer=i9.bind(this),this._onPointerDown=nt.bind(this),this._onPointerHover=ne.bind(this),this._onPointerMove=ni.bind(this),this._onPointerUp=nn.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(e){void 0!==this.object&&(this.object.updateMatrixWorld(),null===this.object.parent?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.camera.isOrthographicCamera?this.camera.getWorldDirection(this.eye).negate():this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(e)}pointerHover(e){if(void 0===this.object||!0===this.dragging)return;null!==e&&i$.setFromCamera(e,this.camera);let t=nr(this._gizmo.picker[this.mode],i$);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(void 0!==this.object&&!0!==this.dragging&&(null==e||0===e.button)&&null!==this.axis){null!==e&&i$.setFromCamera(e,this.camera);let t=nr(this._plane,i$,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,i5.mode=this.mode,this.dispatchEvent(i5)}}pointerMove(e){let t=this.axis,i=this.mode,n=this.object,r=this.space;if("scale"===i?r="local":("E"===t||"XYZE"===t||"XYZ"===t)&&(r="world"),void 0===n||null===t||!1===this.dragging||null!==e&&-1!==e.button)return;null!==e&&i$.setFromCamera(e,this.camera);let a=nr(this._plane,i$,!0);if(a){if(this.pointEnd.copy(a.point).sub(this.worldPositionStart),"translate"===i)this._offset.copy(this.pointEnd).sub(this.pointStart),"local"===r&&"XYZ"!==t&&this._offset.applyQuaternion(this._worldQuaternionInv),-1===t.indexOf("X")&&(this._offset.x=0),-1===t.indexOf("Y")&&(this._offset.y=0),-1===t.indexOf("Z")&&(this._offset.z=0),"local"===r&&"XYZ"!==t?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),n.position.copy(this._offset).add(this._positionStart),this.translationSnap&&("local"===r&&(n.position.applyQuaternion(i2.copy(this._quaternionStart).invert()),-1!==t.search("X")&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),-1!==t.search("Y")&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),-1!==t.search("Z")&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.position.applyQuaternion(this._quaternionStart)),"world"===r&&(n.parent&&n.position.add(i0.setFromMatrixPosition(n.parent.matrixWorld)),-1!==t.search("X")&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),-1!==t.search("Y")&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),-1!==t.search("Z")&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.parent&&n.position.sub(i0.setFromMatrixPosition(n.parent.matrixWorld))));else if("scale"===i){if(-1!==t.search("XYZ")){let e=this.pointEnd.length()/this.pointStart.length();0>this.pointEnd.dot(this.pointStart)&&(e*=-1),i1.set(e,e,e)}else i0.copy(this.pointStart),i1.copy(this.pointEnd),i0.applyQuaternion(this._worldQuaternionInv),i1.applyQuaternion(this._worldQuaternionInv),i1.divide(i0),-1===t.search("X")&&(i1.x=1),-1===t.search("Y")&&(i1.y=1),-1===t.search("Z")&&(i1.z=1);n.scale.copy(this._scaleStart).multiply(i1),this.scaleSnap&&(-1!==t.search("X")&&(n.scale.x=Math.round(n.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==t.search("Y")&&(n.scale.y=Math.round(n.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==t.search("Z")&&(n.scale.z=Math.round(n.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if("rotate"===i){this._offset.copy(this.pointEnd).sub(this.pointStart);let e=20/this.worldPosition.distanceTo(i0.setFromMatrixPosition(this.camera.matrixWorld)),i=!1;"XYZE"===t?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(i0.copy(this.rotationAxis).cross(this.eye))*e):("X"===t||"Y"===t||"Z"===t)&&(this.rotationAxis.copy(i3[t]),i0.copy(i3[t]),"local"===r&&i0.applyQuaternion(this.worldQuaternion),i0.cross(this.eye),0===i0.length()?i=!0:this.rotationAngle=this._offset.dot(i0.normalize())*e),("E"===t||i)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=0>this._endNorm.cross(this._startNorm).dot(this.eye)?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),"local"===r&&"E"!==t&&"XYZE"!==t?(n.quaternion.copy(this._quaternionStart),n.quaternion.multiply(i2.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),n.quaternion.copy(i2.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),n.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(i4),this.dispatchEvent(i7)}}pointerUp(e){(null===e||0===e.button)&&(this.dragging&&null!==this.axis&&(i6.mode=this.mode,this.dispatchEvent(i6)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}attach(e){return this.object=e,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(i4),this.dispatchEvent(i7),this.pointStart.copy(this.pointEnd))}getRaycaster(){return i$}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}}function i9(e){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:e.button};{let t=this.domElement.getBoundingClientRect();return{x:(e.clientX-t.left)/t.width*2-1,y:-(e.clientY-t.top)/t.height*2+1,button:e.button}}}function ne(e){if(this.enabled)switch(e.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(e))}}function nt(e){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(e.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(e)),this.pointerDown(this._getPointer(e)))}function ni(e){this.enabled&&this.pointerMove(this._getPointer(e))}function nn(e){this.enabled&&(this.domElement.releasePointerCapture(e.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(e)))}function nr(e,t,i){let n=t.intersectObject(e,!0);for(let e=0;e<n.length;e++)if(n[e].object.visible||i)return n[e];return!1}const na=new T.Euler,ns=new T.Vector3(0,1,0),no=new T.Vector3(0,0,0),nl=new T.Matrix4,nh=new T.Quaternion,nc=new T.Quaternion,nu=new T.Vector3,nd=new T.Matrix4,np=new T.Vector3(1,0,0),nf=new T.Vector3(0,1,0),nm=new T.Vector3(0,0,1),ng=new T.Vector3,nv=new T.Vector3,ny=new T.Vector3;class n_ extends T.Object3D{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";let e=new T.MeshBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new T.LineBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),i=e.clone();i.opacity=.15;let n=t.clone();n.opacity=.5;let r=e.clone();r.color.setHex(16711680);let a=e.clone();a.color.setHex(65280);let s=e.clone();s.color.setHex(255);let o=e.clone();o.color.setHex(16711680),o.opacity=.5;let l=e.clone();l.color.setHex(65280),l.opacity=.5;let h=e.clone();h.color.setHex(255),h.opacity=.5;let c=e.clone();c.opacity=.25;let u=e.clone();u.color.setHex(16776960),u.opacity=.25,e.clone().color.setHex(16776960);let d=e.clone();d.color.setHex(7895160);let p=new T.CylinderGeometry(0,.04,.1,12);p.translate(0,.05,0);let f=new T.BoxGeometry(.08,.08,.08);f.translate(0,.04,0);let m=new T.BufferGeometry;m.setAttribute("position",new T.Float32BufferAttribute([0,0,0,1,0,0],3));let g=new T.CylinderGeometry(.0075,.0075,.5,3);function v(e,t){let i=new T.TorusGeometry(e,.0075,3,64,t*Math.PI*2);return i.rotateY(Math.PI/2),i.rotateX(Math.PI/2),i}g.translate(0,.25,0);let y={X:[[new T.Mesh(p,r),[.5,0,0],[0,0,-Math.PI/2]],[new T.Mesh(p,r),[-.5,0,0],[0,0,Math.PI/2]],[new T.Mesh(g,r),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new T.Mesh(p,a),[0,.5,0]],[new T.Mesh(p,a),[0,-.5,0],[Math.PI,0,0]],[new T.Mesh(g,a)]],Z:[[new T.Mesh(p,s),[0,0,.5],[Math.PI/2,0,0]],[new T.Mesh(p,s),[0,0,-.5],[-Math.PI/2,0,0]],[new T.Mesh(g,s),null,[Math.PI/2,0,0]]],XYZ:[[new T.Mesh(new T.OctahedronGeometry(.1,0),c.clone()),[0,0,0]]],XY:[[new T.Mesh(new T.BoxGeometry(.15,.15,.01),h.clone()),[.15,.15,0]]],YZ:[[new T.Mesh(new T.BoxGeometry(.15,.15,.01),o.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new T.Mesh(new T.BoxGeometry(.15,.15,.01),l.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},_={X:[[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[0,.3,0]],[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new T.Mesh(new T.OctahedronGeometry(.2,0),i)]],XY:[[new T.Mesh(new T.BoxGeometry(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new T.Mesh(new T.BoxGeometry(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new T.Mesh(new T.BoxGeometry(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]]},x={START:[[new T.Mesh(new T.OctahedronGeometry(.01,2),n),null,null,null,"helper"]],END:[[new T.Mesh(new T.OctahedronGeometry(.01,2),n),null,null,null,"helper"]],DELTA:[[new T.Line(function(){let e=new T.BufferGeometry;return e.setAttribute("position",new T.Float32BufferAttribute([0,0,0,1,1,1],3)),e}(),n),null,null,null,"helper"]],X:[[new T.Line(m,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new T.Line(m,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new T.Line(m,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},b={XYZE:[[new T.Mesh(v(.5,1),d),null,[0,Math.PI/2,0]]],X:[[new T.Mesh(v(.5,.5),r)]],Y:[[new T.Mesh(v(.5,.5),a),null,[0,0,-Math.PI/2]]],Z:[[new T.Mesh(v(.5,.5),s),null,[0,Math.PI/2,0]]],E:[[new T.Mesh(v(.75,1),u),null,[0,Math.PI/2,0]]]},M={AXIS:[[new T.Line(m,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},w={XYZE:[[new T.Mesh(new T.SphereGeometry(.25,10,8),i)]],X:[[new T.Mesh(new T.TorusGeometry(.5,.1,4,24),i),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new T.Mesh(new T.TorusGeometry(.5,.1,4,24),i),[0,0,0],[Math.PI/2,0,0]]],Z:[[new T.Mesh(new T.TorusGeometry(.5,.1,4,24),i),[0,0,0],[0,0,-Math.PI/2]]],E:[[new T.Mesh(new T.TorusGeometry(.75,.1,2,24),i)]]},S={X:[[new T.Mesh(f,r),[.5,0,0],[0,0,-Math.PI/2]],[new T.Mesh(g,r),[0,0,0],[0,0,-Math.PI/2]],[new T.Mesh(f,r),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new T.Mesh(f,a),[0,.5,0]],[new T.Mesh(g,a)],[new T.Mesh(f,a),[0,-.5,0],[0,0,Math.PI]]],Z:[[new T.Mesh(f,s),[0,0,.5],[Math.PI/2,0,0]],[new T.Mesh(g,s),[0,0,0],[Math.PI/2,0,0]],[new T.Mesh(f,s),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new T.Mesh(new T.BoxGeometry(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new T.Mesh(new T.BoxGeometry(.15,.15,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new T.Mesh(new T.BoxGeometry(.15,.15,.01),l),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new T.Mesh(new T.BoxGeometry(.1,.1,.1),c.clone())]]},E={X:[[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[0,.3,0]],[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new T.Mesh(new T.CylinderGeometry(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new T.Mesh(new T.BoxGeometry(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new T.Mesh(new T.BoxGeometry(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new T.Mesh(new T.BoxGeometry(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new T.Mesh(new T.BoxGeometry(.2,.2,.2),i),[0,0,0]]]},A={X:[[new T.Line(m,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new T.Line(m,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new T.Line(m,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function C(e){let t=new T.Object3D;for(let i in e)for(let n=e[i].length;n--;){let r=e[i][n][0].clone(),a=e[i][n][1],s=e[i][n][2],o=e[i][n][3],l=e[i][n][4];r.name=i,r.tag=l,a&&r.position.set(a[0],a[1],a[2]),s&&r.rotation.set(s[0],s[1],s[2]),o&&r.scale.set(o[0],o[1],o[2]),r.updateMatrix();let h=r.geometry.clone();h.applyMatrix4(r.matrix),r.geometry=h,r.renderOrder=1/0,r.position.set(0,0,0),r.rotation.set(0,0,0),r.scale.set(1,1,1),t.add(r)}return t}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=C(y)),this.add(this.gizmo.rotate=C(b)),this.add(this.gizmo.scale=C(S)),this.add(this.picker.translate=C(_)),this.add(this.picker.rotate=C(w)),this.add(this.picker.scale=C(E)),this.add(this.helper.translate=C(x)),this.add(this.helper.rotate=C(M)),this.add(this.helper.scale=C(A)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){let t="local"===("scale"===this.mode?"local":this.space)?this.worldQuaternion:nc;this.gizmo.translate.visible="translate"===this.mode,this.gizmo.rotate.visible="rotate"===this.mode,this.gizmo.scale.visible="scale"===this.mode,this.helper.translate.visible="translate"===this.mode,this.helper.rotate.visible="rotate"===this.mode,this.helper.scale.visible="scale"===this.mode;let i=[];i=(i=(i=i.concat(this.picker[this.mode].children)).concat(this.gizmo[this.mode].children)).concat(this.helper[this.mode].children);for(let e=0;e<i.length;e++){let n;let r=i[e];if(r.visible=!0,r.rotation.set(0,0,0),r.position.copy(this.worldPosition),n=this.camera.isOrthographicCamera?(this.camera.top-this.camera.bottom)/this.camera.zoom:this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),r.scale.set(1,1,1).multiplyScalar(n*this.size/4),"helper"===r.tag){r.visible=!1,"AXIS"===r.name?(r.visible=!!this.axis,"X"===this.axis&&(i2.setFromEuler(na.set(0,0,0)),r.quaternion.copy(t).multiply(i2),Math.abs(ns.copy(np).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),"Y"===this.axis&&(i2.setFromEuler(na.set(0,0,Math.PI/2)),r.quaternion.copy(t).multiply(i2),Math.abs(ns.copy(nf).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),"Z"===this.axis&&(i2.setFromEuler(na.set(0,Math.PI/2,0)),r.quaternion.copy(t).multiply(i2),Math.abs(ns.copy(nm).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),"XYZE"===this.axis&&(i2.setFromEuler(na.set(0,Math.PI/2,0)),ns.copy(this.rotationAxis),r.quaternion.setFromRotationMatrix(nl.lookAt(no,ns,nf)),r.quaternion.multiply(i2),r.visible=this.dragging),"E"===this.axis&&(r.visible=!1)):"START"===r.name?(r.position.copy(this.worldPositionStart),r.visible=this.dragging):"END"===r.name?(r.position.copy(this.worldPosition),r.visible=this.dragging):"DELTA"===r.name?(r.position.copy(this.worldPositionStart),r.quaternion.copy(this.worldQuaternionStart),i0.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),i0.applyQuaternion(this.worldQuaternionStart.clone().invert()),r.scale.copy(i0),r.visible=this.dragging):(r.quaternion.copy(t),this.dragging?r.position.copy(this.worldPositionStart):r.position.copy(this.worldPosition),this.axis&&(r.visible=-1!==this.axis.search(r.name)));continue}r.quaternion.copy(t),"translate"===this.mode||"scale"===this.mode?("X"===r.name&&Math.abs(ns.copy(np).applyQuaternion(t).dot(this.eye))>.99&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"Y"===r.name&&Math.abs(ns.copy(nf).applyQuaternion(t).dot(this.eye))>.99&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"Z"===r.name&&Math.abs(ns.copy(nm).applyQuaternion(t).dot(this.eye))>.99&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"XY"===r.name&&.2>Math.abs(ns.copy(nm).applyQuaternion(t).dot(this.eye))&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"YZ"===r.name&&.2>Math.abs(ns.copy(np).applyQuaternion(t).dot(this.eye))&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"XZ"===r.name&&.2>Math.abs(ns.copy(nf).applyQuaternion(t).dot(this.eye))&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1)):"rotate"===this.mode&&(nh.copy(t),ns.copy(this.eye).applyQuaternion(i2.copy(t).invert()),-1!==r.name.search("E")&&r.quaternion.setFromRotationMatrix(nl.lookAt(this.eye,no,nf)),"X"===r.name&&(i2.setFromAxisAngle(np,Math.atan2(-ns.y,ns.z)),i2.multiplyQuaternions(nh,i2),r.quaternion.copy(i2)),"Y"===r.name&&(i2.setFromAxisAngle(nf,Math.atan2(ns.x,ns.z)),i2.multiplyQuaternions(nh,i2),r.quaternion.copy(i2)),"Z"===r.name&&(i2.setFromAxisAngle(nm,Math.atan2(ns.y,ns.x)),i2.multiplyQuaternions(nh,i2),r.quaternion.copy(i2))),r.visible=r.visible&&(-1===r.name.indexOf("X")||this.showX),r.visible=r.visible&&(-1===r.name.indexOf("Y")||this.showY),r.visible=r.visible&&(-1===r.name.indexOf("Z")||this.showZ),r.visible=r.visible&&(-1===r.name.indexOf("E")||this.showX&&this.showY&&this.showZ),r.material._color=r.material._color||r.material.color.clone(),r.material._opacity=r.material._opacity||r.material.opacity,r.material.color.copy(r.material._color),r.material.opacity=r.material._opacity,this.enabled&&this.axis&&(r.name===this.axis?(r.material.color.setHex(16776960),r.material.opacity=1):this.axis.split("").some(function(e){return r.name===e})&&(r.material.color.setHex(16776960),r.material.opacity=1))}super.updateMatrixWorld(e)}}class nx extends T.Mesh{constructor(){super(new T.PlaneGeometry(1e5,1e5,2,2),new T.MeshBasicMaterial({visible:!1,wireframe:!0,side:T.DoubleSide,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),"scale"===this.mode&&(t="local"),ng.copy(np).applyQuaternion("local"===t?this.worldQuaternion:nc),nv.copy(nf).applyQuaternion("local"===t?this.worldQuaternion:nc),ny.copy(nm).applyQuaternion("local"===t?this.worldQuaternion:nc),ns.copy(nv),this.mode){case"translate":case"scale":switch(this.axis){case"X":ns.copy(this.eye).cross(ng),nu.copy(ng).cross(ns);break;case"Y":ns.copy(this.eye).cross(nv),nu.copy(nv).cross(ns);break;case"Z":ns.copy(this.eye).cross(ny),nu.copy(ny).cross(ns);break;case"XY":nu.copy(ny);break;case"YZ":nu.copy(ng);break;case"XZ":ns.copy(ny),nu.copy(nv);break;case"XYZ":case"E":nu.set(0,0,0)}break;default:nu.set(0,0,0)}0===nu.length()?this.quaternion.copy(this.cameraQuaternion):(nd.lookAt(i0.set(0,0,0),nu,ns),this.quaternion.setFromRotationMatrix(nd)),super.updateMatrixWorld(e)}}function nb(e){let t=e.split(/[\\/]/g);return(t.pop(),0===t.length)?"./":t.join("/")+"/"}function nM(e,t,i=[]){e.tagName===t&&i.push(e);for(let n=0,r=e.children.length;n<r;n++)nM(e.children[n],t,i);return i}function nw(e,t){let i=e.cloneNode(),n=e.childNodes;for(let e=0,r=n.length;e<r;e++){let r=n[e],a=r.tagName;t&&("xacro:property"===a||"xacro:macro"===a)||i.appendChild(nw(r,t))}return i}function nS(e){for(;e.length>0;){let t=e[e.length-1];if(t.nodeType!==t.ELEMENT_NODE)e.pop();else break}}function nE(e){return/^(('[^']*?')|("[^"]*?")|(`[^`]*?`))$/.test(e)}function nT(e){return!isNaN(parseFloat(e))&&!/[^0-9.eE-]/.test(e)}const nA=Symbol("parent");function nC(...e){let t={};for(let i=0,n=e.length;i<n;i++){let n=e[i];for(let e in n)t[e]=n[e];nA in n&&(t[nA]=n[nA])}return t}var nR="INUMBER",nP="IOP1",nL="IOP2",nN="IOP3",nI="IVAR",nU="IVARNAME",nO="IFUNCALL",nD="IFUNDEF",nF="IEXPR",nz="IEXPREVAL",nB="IMEMBER",nk="IENDSTATEMENT",nV="IARRAY";function nH(e,t){this.type=e,this.value=null!=t?t:0}function nG(e){return new nH(nP,e)}function nW(e){return new nH(nL,e)}function nj(e){return e&&e.type===nz}function nq(e,t){return nj(e)?e.value(t):e}function nX(e,t){for(var i,n,r,a,s,o,l=[],h=0;h<e.length;h++){var c=e[h],u=c.type;if(u===nR)"number"==typeof c.value&&c.value<0?l.push("("+c.value+")"):Array.isArray(c.value)?l.push("["+c.value.map(nY).join(", ")+"]"):l.push(nY(c.value));else if(u===nL)n=l.pop(),i=l.pop(),a=c.value,t?"^"===a?l.push("Math.pow("+i+", "+n+")"):"and"===a?l.push("(!!"+i+" && !!"+n+")"):"or"===a?l.push("(!!"+i+" || !!"+n+")"):"||"===a?l.push("(function(a,b){ return Array.isArray(a) && Array.isArray(b) ? a.concat(b) : String(a) + String(b); }(("+i+"),("+n+")))"):"=="===a?l.push("("+i+" === "+n+")"):"!="===a?l.push("("+i+" !== "+n+")"):"["===a?l.push(i+"[("+n+") | 0]"):l.push("("+i+" "+a+" "+n+")"):"["===a?l.push(i+"["+n+"]"):l.push("("+i+" "+a+" "+n+")");else if(u===nN){if(r=l.pop(),n=l.pop(),i=l.pop(),"?"===(a=c.value))l.push("("+i+" ? "+n+" : "+r+")");else throw Error("invalid Expression")}else if(u===nI||u===nU)l.push(c.value);else if(u===nP)i=l.pop(),"-"===(a=c.value)||"+"===a?l.push("("+a+i+")"):t?"not"===a?l.push("(!"+i+")"):"!"===a?l.push("fac("+i+")"):l.push(a+"("+i+")"):"!"===a?l.push("("+i+"!)"):l.push("("+a+" "+i+")");else if(u===nO){for(o=c.value,s=[];o-- >0;)s.unshift(l.pop());a=l.pop(),l.push(a+"("+s.join(", ")+")")}else if(u===nD){for(n=l.pop(),o=c.value,s=[];o-- >0;)s.unshift(l.pop());i=l.pop(),t?l.push("("+i+" = function("+s.join(", ")+") { return "+n+" })"):l.push("("+i+"("+s.join(", ")+") = "+n+")")}else if(u===nB)i=l.pop(),l.push(i+"."+c.value);else if(u===nV){for(o=c.value,s=[];o-- >0;)s.unshift(l.pop());l.push("["+s.join(", ")+"]")}else if(u===nF)l.push("("+nX(c.value,t)+")");else if(u===nk);else throw Error("invalid Expression")}return l.length>1&&(l=t?[l.join(",")]:[l.join(";")]),String(l[0])}function nY(e){return"string"==typeof e?JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029"):e}function nJ(e,t){for(var i=0;i<e.length;i++)if(e[i]===t)return!0;return!1}function nZ(e,t,i){for(var n=!!(i=i||{}).withMembers,r=null,a=0;a<e.length;a++){var s=e[a];s.type===nI||s.type===nU?n||nJ(t,s.value)?(null===r||nJ(t,r)||t.push(r),r=s.value):t.push(s.value):s.type===nB&&n&&null!==r?r+="."+s.value:s.type===nF?nZ(s.value,t,i):null!==r&&(nJ(t,r)||t.push(r),r=null)}null===r||nJ(t,r)||t.push(r)}function nK(e,t){this.tokens=e,this.parser=t,this.unaryOps=t.unaryOps,this.binaryOps=t.binaryOps,this.ternaryOps=t.ternaryOps,this.functions=t.functions}nH.prototype.toString=function(){switch(this.type){case nR:case nP:case nL:case nN:case nI:case nU:case nk:return this.value;case nO:return"CALL "+this.value;case nD:return"DEF "+this.value;case nV:return"ARRAY "+this.value;case nB:return"."+this.value;default:return"Invalid Instruction"}},nK.prototype.simplify=function(e){return e=e||{},new nK(function e(t,i,n,r,a){for(var s,o,l,h=[],c=[],u=0;u<t.length;u++){var d=t[u],p=d.type;if(p===nR||p===nU)Array.isArray(d.value)?h.push.apply(h,e(d.value.map(function(e){return new nH(nR,e)}).concat(new nH(nV,d.value.length)),i,n,r,a)):h.push(d);else if(p===nI&&a.hasOwnProperty(d.value))d=new nH(nR,a[d.value]),h.push(d);else if(p===nL&&h.length>1)o=h.pop(),s=h.pop(),d=new nH(nR,(0,n[d.value])(s.value,o.value)),h.push(d);else if(p===nN&&h.length>2)l=h.pop(),o=h.pop(),s=h.pop(),"?"===d.value?h.push(s.value?o.value:l.value):(d=new nH(nR,(0,r[d.value])(s.value,o.value,l.value)),h.push(d));else if(p===nP&&h.length>0)s=h.pop(),d=new nH(nR,(0,i[d.value])(s.value)),h.push(d);else if(p===nF){for(;h.length>0;)c.push(h.shift());c.push(new nH(nF,e(d.value,i,n,r,a)))}else if(p===nB&&h.length>0)s=h.pop(),h.push(new nH(nR,s.value[d.value]));else{for(;h.length>0;)c.push(h.shift());c.push(d)}}for(;h.length>0;)c.push(h.shift());return c}(this.tokens,this.unaryOps,this.binaryOps,this.ternaryOps,e),this.parser)},nK.prototype.substitute=function(e,t){return t instanceof nK||(t=this.parser.parse(String(t))),new nK(function e(t,i,n){for(var r=[],a=0;a<t.length;a++){var s=t[a],o=s.type;if(o===nI&&s.value===i)for(var l=0;l<n.tokens.length;l++){var h,c=n.tokens[l];h=c.type===nP?nG(c.value):c.type===nL?nW(c.value):c.type===nN?new nH(nN,c.value):new nH(c.type,c.value),r.push(h)}else o===nF?r.push(new nH(nF,e(s.value,i,n))):r.push(s)}return r}(this.tokens,e,t),this.parser)},nK.prototype.evaluate=function(e){return e=e||{},function e(t,i,n){var r,a,s,o,l,h,c=[];if(nj(t))return nq(t,n);for(var u=t.length,d=0;d<u;d++){var p=t[d],f=p.type;if(f===nR||f===nU)c.push(p.value);else if(f===nL)a=c.pop(),r=c.pop(),"and"===p.value?c.push(!!r&&!!e(a,i,n)):"or"===p.value?c.push(!!r||!!e(a,i,n)):"="===p.value?(o=i.binaryOps[p.value],c.push(o(r,e(a,i,n),n))):(o=i.binaryOps[p.value],c.push(o(nq(r,n),nq(a,n))));else if(f===nN)s=c.pop(),a=c.pop(),r=c.pop(),"?"===p.value?c.push(e(r?a:s,i,n)):(o=i.ternaryOps[p.value],c.push(o(nq(r,n),nq(a,n),nq(s,n))));else if(f===nI){if(p.value in i.functions)c.push(i.functions[p.value]);else if(p.value in i.unaryOps&&i.parser.isOperatorEnabled(p.value))c.push(i.unaryOps[p.value]);else{var m=n[p.value];if(void 0!==m)c.push(m);else throw Error("undefined variable: "+p.value)}}else if(f===nP)r=c.pop(),o=i.unaryOps[p.value],c.push(o(nq(r,n)));else if(f===nO){for(h=p.value,l=[];h-- >0;)l.unshift(nq(c.pop(),n));if((o=c.pop()).apply&&o.call)c.push(o.apply(void 0,l));else throw Error(o+" is not a function")}else if(f===nD)c.push(function(){for(var t=c.pop(),r=[],a=p.value;a-- >0;)r.unshift(c.pop());var s=c.pop(),o=function(){for(var a=Object.assign({},n),s=0,o=r.length;s<o;s++)a[r[s]]=arguments[s];return e(t,i,a)};return Object.defineProperty(o,"name",{value:s,writable:!1}),n[s]=o,o}());else if(f===nF)c.push(function(t,i,n){return nj(t)?t:{type:nz,value:function(n){return e(t.value,i,n)}}}(p,i));else if(f===nz)c.push(p);else if(f===nB)r=c.pop(),c.push(r[p.value]);else if(f===nk)c.pop();else if(f===nV){for(h=p.value,l=[];h-- >0;)l.unshift(c.pop());c.push(l)}else throw Error("invalid Expression")}if(c.length>1)throw Error("invalid Expression (parity)");return 0===c[0]?0:nq(c[0],n)}(this.tokens,this,e)},nK.prototype.toString=function(){return nX(this.tokens,!1)},nK.prototype.symbols=function(e){e=e||{};var t=[];return nZ(this.tokens,t,e),t},nK.prototype.variables=function(e){e=e||{};var t=[];nZ(this.tokens,t,e);var i=this.functions;return t.filter(function(e){return!(e in i)})},nK.prototype.toJSFunction=function(e,t){var i=this,n=Function(e,"with(this.functions) with (this.ternaryOps) with (this.binaryOps) with (this.unaryOps) { return "+nX(this.simplify(t).tokens,!0)+"; }");return function(){return n.apply(i,arguments)}};var nQ="TEOF",n$="TNUMBER",n0="TSTRING",n1="TPAREN",n2="TBRACKET",n3="TCOMMA",n4="TNAME",n5="TSEMICOLON";function n6(e,t,i){this.type=e,this.value=t,this.index=i}function n7(e,t){this.pos=0,this.current=null,this.unaryOps=e.unaryOps,this.binaryOps=e.binaryOps,this.ternaryOps=e.ternaryOps,this.consts=e.consts,this.expression=t,this.savedPosition=0,this.savedCurrent=null,this.options=e.options,this.parser=e}n6.prototype.toString=function(){return this.type+": "+this.value},n7.prototype.newToken=function(e,t,i){return new n6(e,t,null!=i?i:this.pos)},n7.prototype.save=function(){this.savedPosition=this.pos,this.savedCurrent=this.current},n7.prototype.restore=function(){this.pos=this.savedPosition,this.current=this.savedCurrent},n7.prototype.next=function(){return this.pos>=this.expression.length?this.newToken(nQ,"EOF"):this.isWhitespace()||this.isComment()?this.next():this.isRadixInteger()||this.isNumber()||this.isOperator()||this.isString()||this.isParen()||this.isBracket()||this.isComma()||this.isSemicolon()||this.isNamedOp()||this.isConst()||this.isName()?this.current:void this.parseError('Unknown character "'+this.expression.charAt(this.pos)+'"')},n7.prototype.isString=function(){var e=!1,t=this.pos,i=this.expression.charAt(t);if("'"===i||'"'===i)for(var n=this.expression.indexOf(i,t+1);n>=0&&this.pos<this.expression.length;){if(this.pos=n+1,"\\"!==this.expression.charAt(n-1)){var r=this.expression.substring(t+1,n);this.current=this.newToken(n0,this.unescape(r),t),e=!0;break}n=this.expression.indexOf(i,n+1)}return e},n7.prototype.isParen=function(){var e=this.expression.charAt(this.pos);return("("===e||")"===e)&&(this.current=this.newToken(n1,e),this.pos++,!0)},n7.prototype.isBracket=function(){var e=this.expression.charAt(this.pos);return!!(("["===e||"]"===e)&&this.isOperatorEnabled("["))&&(this.current=this.newToken(n2,e),this.pos++,!0)},n7.prototype.isComma=function(){return","===this.expression.charAt(this.pos)&&(this.current=this.newToken(n3,","),this.pos++,!0)},n7.prototype.isSemicolon=function(){return";"===this.expression.charAt(this.pos)&&(this.current=this.newToken(n5,";"),this.pos++,!0)},n7.prototype.isConst=function(){for(var e=this.pos,t=e;t<this.expression.length;t++){var i=this.expression.charAt(t);if(i.toUpperCase()===i.toLowerCase()&&(t===this.pos||"_"!==i&&"."!==i&&(i<"0"||i>"9")))break}if(t>e){var n=this.expression.substring(e,t);if(n in this.consts)return this.current=this.newToken(n$,this.consts[n]),this.pos+=n.length,!0}return!1},n7.prototype.isNamedOp=function(){for(var e=this.pos,t=e;t<this.expression.length;t++){var i=this.expression.charAt(t);if(i.toUpperCase()===i.toLowerCase()&&(t===this.pos||"_"!==i&&(i<"0"||i>"9")))break}if(t>e){var n=this.expression.substring(e,t);if(this.isOperatorEnabled(n)&&(n in this.binaryOps||n in this.unaryOps||n in this.ternaryOps))return this.current=this.newToken("TOP",n),this.pos+=n.length,!0}return!1},n7.prototype.isName=function(){for(var e=this.pos,t=e,i=!1;t<this.expression.length;t++){var n=this.expression.charAt(t);if(n.toUpperCase()===n.toLowerCase()){if(t===this.pos&&("$"===n||"_"===n)){"_"===n&&(i=!0);continue}if(t===this.pos||!i||"_"!==n&&(n<"0"||n>"9"))break}else i=!0}if(i){var r=this.expression.substring(e,t);return this.current=this.newToken(n4,r),this.pos+=r.length,!0}return!1},n7.prototype.isWhitespace=function(){for(var e=!1,t=this.expression.charAt(this.pos);(" "===t||"	"===t||"\n"===t||"\r"===t)&&(e=!0,this.pos++,!(this.pos>=this.expression.length));)t=this.expression.charAt(this.pos);return e};var n8=/^[0-9a-f]{4}$/i;function n9(e,t,i){this.parser=e,this.tokens=t,this.current=null,this.nextToken=null,this.next(),this.savedCurrent=null,this.savedNextToken=null,this.allowMemberAccess=!1!==i.allowMemberAccess}n7.prototype.unescape=function(e){var t=e.indexOf("\\");if(t<0)return e;for(var i=e.substring(0,t);t>=0;){var n=e.charAt(++t);switch(n){case"'":i+="'";break;case'"':i+='"';break;case"\\":i+="\\";break;case"/":i+="/";break;case"b":i+="\b";break;case"f":i+="\f";break;case"n":i+="\n";break;case"r":i+="\r";break;case"t":i+="	";break;case"u":var r=e.substring(t+1,t+5);n8.test(r)||this.parseError("Illegal escape sequence: \\u"+r),i+=String.fromCharCode(parseInt(r,16)),t+=4;break;default:throw this.parseError('Illegal escape sequence: "\\'+n+'"')}++t;var a=e.indexOf("\\",t);i+=e.substring(t,a<0?e.length:a),t=a}return i},n7.prototype.isComment=function(){return"/"===this.expression.charAt(this.pos)&&"*"===this.expression.charAt(this.pos+1)&&(this.pos=this.expression.indexOf("*/",this.pos)+2,1===this.pos&&(this.pos=this.expression.length),!0)},n7.prototype.isRadixInteger=function(){var e,t,i=this.pos;if(i>=this.expression.length-2||"0"!==this.expression.charAt(i))return!1;if(++i,"x"===this.expression.charAt(i))e=16,t=/^[0-9a-f]$/i,++i;else{if("b"!==this.expression.charAt(i))return!1;e=2,t=/^[01]$/i,++i}for(var n=!1,r=i;i<this.expression.length;){var a=this.expression.charAt(i);if(t.test(a))i++,n=!0;else break}return n&&(this.current=this.newToken(n$,parseInt(this.expression.substring(r,i),e)),this.pos=i),n},n7.prototype.isNumber=function(){for(var e,t=!1,i=this.pos,n=i,r=i,a=!1,s=!1;i<this.expression.length;)if((e=this.expression.charAt(i))>="0"&&e<="9"||!a&&"."===e)"."===e?a=!0:s=!0,i++,t=s;else break;if(t&&(r=i),"e"===e||"E"===e){i++;for(var o=!0,l=!1;i<this.expression.length;){if(e=this.expression.charAt(i),o&&("+"===e||"-"===e))o=!1;else if(e>="0"&&e<="9")l=!0,o=!1;else break;i++}l||(i=r)}return t?(this.current=this.newToken(n$,parseFloat(this.expression.substring(n,i))),this.pos=i):this.pos=r,t},n7.prototype.isOperator=function(){var e=this.pos,t=this.expression.charAt(this.pos);if("+"===t||"-"===t||"*"===t||"/"===t||"%"===t||"^"===t||"?"===t||":"===t||"."===t)this.current=this.newToken("TOP",t);else if("∙"===t||"•"===t)this.current=this.newToken("TOP","*");else if(">"===t)"="===this.expression.charAt(this.pos+1)?(this.current=this.newToken("TOP",">="),this.pos++):this.current=this.newToken("TOP",">");else if("<"===t)"="===this.expression.charAt(this.pos+1)?(this.current=this.newToken("TOP","<="),this.pos++):this.current=this.newToken("TOP","<");else if("|"===t){if("|"!==this.expression.charAt(this.pos+1))return!1;this.current=this.newToken("TOP","||"),this.pos++}else if("="===t)"="===this.expression.charAt(this.pos+1)?(this.current=this.newToken("TOP","=="),this.pos++):this.current=this.newToken("TOP",t);else{if("!"!==t)return!1;"="===this.expression.charAt(this.pos+1)?(this.current=this.newToken("TOP","!="),this.pos++):this.current=this.newToken("TOP",t)}return this.pos++,!!this.isOperatorEnabled(this.current.value)||(this.pos=e,!1)},n7.prototype.isOperatorEnabled=function(e){return this.parser.isOperatorEnabled(e)},n7.prototype.getCoordinates=function(){var e,t=0,i=-1;do t++,e=this.pos-i,i=this.expression.indexOf("\n",i+1);while(i>=0&&i<this.pos)return{line:t,column:e}},n7.prototype.parseError=function(e){var t=this.getCoordinates();throw Error("parse error ["+t.line+":"+t.column+"]: "+e)},n9.prototype.next=function(){return this.current=this.nextToken,this.nextToken=this.tokens.next()},n9.prototype.tokenMatches=function(e,t){return void 0===t||(Array.isArray(t)?nJ(t,e.value):"function"==typeof t?t(e):e.value===t)},n9.prototype.save=function(){this.savedCurrent=this.current,this.savedNextToken=this.nextToken,this.tokens.save()},n9.prototype.restore=function(){this.tokens.restore(),this.current=this.savedCurrent,this.nextToken=this.savedNextToken},n9.prototype.accept=function(e,t){return!!(this.nextToken.type===e&&this.tokenMatches(this.nextToken,t))&&(this.next(),!0)},n9.prototype.expect=function(e,t){if(!this.accept(e,t)){var i=this.tokens.getCoordinates();throw Error("parse error ["+i.line+":"+i.column+"]: Expected "+(t||e))}},n9.prototype.parseAtom=function(e){var t=this.tokens.unaryOps;if(this.accept(n4)||this.accept("TOP",function(e){return e.value in t}))e.push(new nH(nI,this.current.value));else if(this.accept(n$))e.push(new nH(nR,this.current.value));else if(this.accept(n0))e.push(new nH(nR,this.current.value));else if(this.accept(n1,"("))this.parseExpression(e),this.expect(n1,")");else if(this.accept(n2,"[")){if(this.accept(n2,"]"))e.push(new nH(nV,0));else{var i=this.parseArrayList(e);e.push(new nH(nV,i))}}else throw Error("unexpected "+this.nextToken)},n9.prototype.parseExpression=function(e){var t=[];!this.parseUntilEndStatement(e,t)&&(this.parseVariableAssignmentExpression(t),this.parseUntilEndStatement(e,t)||this.pushExpression(e,t))},n9.prototype.pushExpression=function(e,t){for(var i=0,n=t.length;i<n;i++)e.push(t[i])},n9.prototype.parseUntilEndStatement=function(e,t){return!!this.accept(n5)&&(this.nextToken&&this.nextToken.type!==nQ&&!(this.nextToken.type===n1&&")"===this.nextToken.value)&&t.push(new nH(nk)),this.nextToken.type!==nQ&&this.parseExpression(t),e.push(new nH(nF,t)),!0)},n9.prototype.parseArrayList=function(e){for(var t=0;!this.accept(n2,"]");)for(this.parseExpression(e),++t;this.accept(n3);)this.parseExpression(e),++t;return t},n9.prototype.parseVariableAssignmentExpression=function(e){for(this.parseConditionalExpression(e);this.accept("TOP","=");){var t=e.pop(),i=[],n=e.length-1;if(t.type===nO){if(!this.tokens.isOperatorEnabled("()="))throw Error("function definition is not permitted");for(var r=0,a=t.value+1;r<a;r++){var s=n-r;e[s].type===nI&&(e[s]=new nH(nU,e[s].value))}this.parseVariableAssignmentExpression(i),e.push(new nH(nF,i)),e.push(new nH(nD,t.value));continue}if(t.type!==nI&&t.type!==nB)throw Error("expected variable for assignment");this.parseVariableAssignmentExpression(i),e.push(new nH(nU,t.value)),e.push(new nH(nF,i)),e.push(nW("="))}},n9.prototype.parseConditionalExpression=function(e){for(this.parseOrExpression(e);this.accept("TOP","?");){var t=[],i=[];this.parseConditionalExpression(t),this.expect("TOP",":"),this.parseConditionalExpression(i),e.push(new nH(nF,t)),e.push(new nH(nF,i)),e.push(new nH(nN,"?"))}},n9.prototype.parseOrExpression=function(e){for(this.parseAndExpression(e);this.accept("TOP","or");){var t=[];this.parseAndExpression(t),e.push(new nH(nF,t)),e.push(nW("or"))}},n9.prototype.parseAndExpression=function(e){for(this.parseComparison(e);this.accept("TOP","and");){var t=[];this.parseComparison(t),e.push(new nH(nF,t)),e.push(nW("and"))}};var re=["==","!=","<","<=",">=",">","in"];n9.prototype.parseComparison=function(e){for(this.parseAddSub(e);this.accept("TOP",re);){var t=this.current;this.parseAddSub(e),e.push(nW(t.value))}};var rt=["+","-","||"];n9.prototype.parseAddSub=function(e){for(this.parseTerm(e);this.accept("TOP",rt);){var t=this.current;this.parseTerm(e),e.push(nW(t.value))}};var ri=["*","/","%"];function rn(e,t){return Number(e)+Number(t)}function rr(e,t){return e-t}function ra(e,t){return e*t}function rs(e,t){return e/t}function ro(e,t){return e%t}function rl(e,t){return Array.isArray(e)&&Array.isArray(t)?e.concat(t):""+e+t}function rh(e,t){return e===t}function rc(e,t){return e!==t}function ru(e,t){return e>t}function rd(e,t){return e<t}function rp(e,t){return e>=t}function rf(e,t){return e<=t}function rm(e,t){return!!(e&&t)}function rg(e,t){return!!(e||t)}function rv(e,t){return nJ(t,e)}function ry(e){return(Math.exp(e)-Math.exp(-e))/2}function r_(e){return(Math.exp(e)+Math.exp(-e))/2}function rx(e){return e===1/0?1:e===-1/0?-1:(Math.exp(e)-Math.exp(-e))/(Math.exp(e)+Math.exp(-e))}function rb(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))}function rM(e){return Math.log(e+Math.sqrt(e*e-1))}function rw(e){return Math.log((1+e)/(1-e))/2}function rS(e){return Math.log(e)*Math.LOG10E}function rE(e){return-e}function rT(e){return!e}function rA(e){return e<0?Math.ceil(e):Math.floor(e)}function rC(e){return Math.random()*(e||1)}function rR(e){return rL(e+1)}n9.prototype.parseTerm=function(e){for(this.parseFactor(e);this.accept("TOP",ri);){var t=this.current;this.parseFactor(e),e.push(nW(t.value))}},n9.prototype.parseFactor=function(e){var t=this.tokens.unaryOps;if(this.save(),this.accept("TOP",function(e){return e.value in t})){if("-"!==this.current.value&&"+"!==this.current.value){if(this.nextToken.type===n1&&"("===this.nextToken.value){this.restore(),this.parseExponential(e);return}if(this.nextToken.type===n5||this.nextToken.type===n3||this.nextToken.type===nQ||this.nextToken.type===n1&&")"===this.nextToken.value){this.restore(),this.parseAtom(e);return}}var i=this.current;this.parseFactor(e),e.push(nG(i.value))}else this.parseExponential(e)},n9.prototype.parseExponential=function(e){for(this.parsePostfixExpression(e);this.accept("TOP","^");)this.parseFactor(e),e.push(nW("^"))},n9.prototype.parsePostfixExpression=function(e){for(this.parseFunctionCall(e);this.accept("TOP","!");)e.push(nG("!"))},n9.prototype.parseFunctionCall=function(e){var t=this.tokens.unaryOps;if(this.accept("TOP",function(e){return e.value in t})){var i=this.current;this.parseAtom(e),e.push(nG(i.value))}else for(this.parseMemberExpression(e);this.accept(n1,"(");)if(this.accept(n1,")"))e.push(new nH(nO,0));else{var n=this.parseArgumentList(e);e.push(new nH(nO,n))}},n9.prototype.parseArgumentList=function(e){for(var t=0;!this.accept(n1,")");)for(this.parseExpression(e),++t;this.accept(n3);)this.parseExpression(e),++t;return t},n9.prototype.parseMemberExpression=function(e){for(this.parseAtom(e);this.accept("TOP",".")||this.accept(n2,"[");){var t=this.current;if("."===t.value){if(!this.allowMemberAccess)throw Error('unexpected ".", member access is not permitted');this.expect(n4),e.push(new nH(nB,this.current.value))}else if("["===t.value){if(!this.tokens.isOperatorEnabled("["))throw Error('unexpected "[]", arrays are disabled');this.parseExpression(e),this.expect(n2,"]"),e.push(nW("["))}else throw Error("unexpected symbol: "+t.value)}};var rP=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-.00009837447530487956,1580887032249125e-19,-.00021026444172410488,21743961811521265e-20,-.0001643181065367639,8441822398385275e-20,-.000026190838401581408,36899182659531625e-22];function rL(e){if(isFinite(n=e)&&n===Math.round(n)){if(e<=0)return isFinite(e)?1/0:NaN;if(e>171)return 1/0;for(var t,i,n,r=e-2,a=e-1;r>1;)a*=r,r--;return 0===a&&(a=1),a}if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*rL(1-e));if(e>=171.35)return 1/0;if(e>85){var s=e*e,o=s*e,l=o*e,h=l*e;return Math.sqrt(2*Math.PI/e)*Math.pow(e/Math.E,e)*(1+1/(12*e)+1/(288*s)-139/(51840*o)-571/(2488320*l)+163879/(209018880*h)+5246819/(75246796800*h*e))}--e,i=rP[0];for(var c=1;c<rP.length;++c)i+=rP[c]/(e+c);return Math.sqrt(2*Math.PI)*Math.pow(t=e+4.7421875+.5,e+.5)*Math.exp(-t)*i}function rN(e){return Array.isArray(e)?e.length:String(e).length}function rI(){for(var e=0,t=0,i=0;i<arguments.length;i++){var n,r=Math.abs(arguments[i]);t<r?(e=e*(n=t/r)*n+1,t=r):r>0?e+=(n=r/t)*n:e+=r}return t===1/0?1/0:t*Math.sqrt(e)}function rU(e,t,i){return e?t:i}function rO(e,t){return void 0===t||0==+t?Math.round(e):(t=-+t,isNaN(e=+e)||!("number"==typeof t&&t%1==0))?NaN:+((e=(e=Math.round(+((e=e.toString().split("e"))[0]+"e"+(e[1]?+e[1]-t:-t)))).toString().split("e"))[0]+"e"+(e[1]?+e[1]+t:t))}function rD(e,t,i){return i&&(i[e]=t),t}function rF(e,t){return e[0|t]}function rz(e){return 1==arguments.length&&Array.isArray(e)?Math.max.apply(Math,e):Math.max.apply(Math,arguments)}function rB(e){return 1==arguments.length&&Array.isArray(e)?Math.min.apply(Math,e):Math.min.apply(Math,arguments)}function rk(e,t){if("function"!=typeof e)throw Error("First argument to map is not a function");if(!Array.isArray(t))throw Error("Second argument to map is not an array");return t.map(function(t,i){return e(t,i)})}function rV(e,t,i){if("function"!=typeof e)throw Error("First argument to fold is not a function");if(!Array.isArray(i))throw Error("Second argument to fold is not an array");return i.reduce(function(t,i,n){return e(t,i,n)},t)}function rH(e,t){if("function"!=typeof e)throw Error("First argument to filter is not a function");if(!Array.isArray(t))throw Error("Second argument to filter is not an array");return t.filter(function(t,i){return e(t,i)})}function rG(e,t){if(!(Array.isArray(t)||"string"==typeof t))throw Error("Second argument to indexOf is not a string or array");return t.indexOf(e)}function rW(e,t){if(!Array.isArray(t))throw Error("Second argument to join is not an array");return t.join(e)}function rj(e){return(e>0)-(e<0)||+e}var rq=1/3;function rX(e){return e<0?-Math.pow(-e,rq):Math.pow(e,rq)}function rY(e){return Math.exp(e)-1}function rJ(e){return Math.log(1+e)}function rZ(e){return Math.log(e)/Math.LN2}function rK(e){this.options=e||{},this.unaryOps={sin:Math.sin,cos:Math.cos,tan:Math.tan,asin:Math.asin,acos:Math.acos,atan:Math.atan,sinh:Math.sinh||ry,cosh:Math.cosh||r_,tanh:Math.tanh||rx,asinh:Math.asinh||rb,acosh:Math.acosh||rM,atanh:Math.atanh||rw,sqrt:Math.sqrt,cbrt:Math.cbrt||rX,log:Math.log,log2:Math.log2||rZ,ln:Math.log,lg:Math.log10||rS,log10:Math.log10||rS,expm1:Math.expm1||rY,log1p:Math.log1p||rJ,abs:Math.abs,ceil:Math.ceil,floor:Math.floor,round:Math.round,trunc:Math.trunc||rA,"-":rE,"+":Number,exp:Math.exp,not:rT,length:rN,"!":rR,sign:Math.sign||rj},this.binaryOps={"+":rn,"-":rr,"*":ra,"/":rs,"%":ro,"^":Math.pow,"||":rl,"==":rh,"!=":rc,">":ru,"<":rd,">=":rp,"<=":rf,and:rm,or:rg,in:rv,"=":rD,"[":rF},this.ternaryOps={"?":rU},this.functions={random:rC,fac:rR,min:rB,max:rz,hypot:Math.hypot||rI,pyt:Math.hypot||rI,pow:Math.pow,atan2:Math.atan2,if:rU,gamma:rL,roundTo:rO,map:rk,fold:rV,filter:rH,indexOf:rG,join:rW},this.consts={E:Math.E,PI:Math.PI,true:!0,false:!1}}rK.prototype.parse=function(e){var t=[],i=new n9(this,new n7(this,e),{allowMemberAccess:this.options.allowMemberAccess});return i.parseExpression(t),i.expect(nQ,"EOF"),new nK(t,this)},rK.prototype.evaluate=function(e,t){return this.parse(e).evaluate(t)};var rQ=new rK;rK.parse=function(e){return rQ.parse(e)},rK.evaluate=function(e,t){return rQ.parse(e).evaluate(t)};var r$={"+":"add","-":"subtract","*":"multiply","/":"divide","%":"remainder","^":"power","!":"factorial","<":"comparison",">":"comparison","<=":"comparison",">=":"comparison","==":"comparison","!=":"comparison","||":"concatenate",and:"logical",or:"logical",not:"logical","?":"conditional",":":"conditional","=":"assignment","[":"array","()=":"fndef"};rK.prototype.isOperatorEnabled=function(e){var t=r$.hasOwnProperty(e)?r$[e]:e,i=this.options.operators||{};return!(t in i)||!!i[t]};const r0=new rK;function r1(e){return r0.evaluate(e)}r0.unaryOps={"-":r0.unaryOps["-"],"+":r0.unaryOps["+"],"!":r0.unaryOps.not,not:r0.unaryOps.not},r0.functions={sin:Math.sin,cos:Math.cos,tan:Math.tan,asin:Math.asin,acos:Math.acos,atan:Math.atan,log:Math.log,atan2:Math.atan2,pow:Math.pow,radians:e=>Math.PI/180*e,degrees:e=>180/Math.PI*e},r0.binaryOps={...r0.binaryOps,"+":(e,t)=>(nT(e)&&(e=Number(e)),nT(t)&&(t=Number(t)),e+t),in:(e,t)=>Array.isArray(t)?t.includes(e):"string"==typeof t?t.includes(e):e in t,"||":(e,t)=>!!(e||t)},r0.consts={...r0.consts,pi:Math.PI,e:Math.E};class r2{constructor(){this.inOrder=!0,this.requirePrefix=!0,this.localProperties=!0,this.rospackCommands={},this.workingPath=""}async getFileContents(e){throw Error("XacroParser: getFileContents() not implemented.")}async parse(e){function t(e,i,n=!1){let r=[],a=nC(m,i);try{let t=function e(t,i){return"number"==typeof t?t:t.replace(/(\$?\$\([^)]+\))|(\$?\${[^}]+})/g,t=>{if(/^\$\$/.test(t))return t;let n=/^\$\(/.test(t),a=t.substring(2,t.length-1);if(a=e(a,i),n){let t=e(a,i).split(/\s+/g),n=t.shift();try{return g(n,...t)}catch(e){throw Error(`XacroParser: Cannot run rospack command "${a}".
`+e.message)}}else{if(r.includes(a))throw Error(`XacroParser: Cannot evaluate infinitely recursive expression: ${r.join(" > ")} > ${a}`);r.push(a);let t=/([()/*+!\-%|&=[\]])+/g,n=a.replace(/(('[^']*?')|("[^"]*?")|(`[^`]*?`)|([()/*+\-%|!&=[\]]+?))/g,e=>` ${e} `).trim().split(/\s+/g).map(n=>{if(t.lastIndex=0,/^[()/*+\-%|&=[\]]+$/.test(n)||nT(n)||nE(n)||!(n in i))return n;{let t=e(i[n],i);return nT(t)?t:`"${t.toString().replace(/\\/g,"\\\\").replace(/"/g,'\\"')}"`}}).map(e=>(t.lastIndex=0,/^[^0-9.]/.test(e)&&!t.test(e))?` ${e} `:e).join("");return(r.pop(),nE(n))?n.substring(1,n.length-1):nT(n)?n:v(n.replace(/[-+]{2,}/,e=>{let t=!0;for(let i=0,n=e.length;i<n;i++)"-"===e[i]&&(t=!t);return t?"+":"-"}))}})}(e,a);return n&&(t=t.replace(/\${2}([({])/g,(e,t)=>`$${t}`)),t}catch(t){throw Error(`XacroParser: Failed to process expression "${e}". 
`+t.message)}}async function i(e,i,r,a){let s=e.tagName.replace(/^xacro:/,""),o=r[s];if(!o)throw Error(`XacroParser: Cannot find macro "${s}"`);let l=i,h=r;i=function(e){let t=nC(e);return t[nA]=e,t}(i),r=nC(r);let c=[];for(let t of e.children)await n(t,l,h,c);c=c.filter(e=>e.nodeType===e.ELEMENT_NODE);let u=0;for(let n in o.params){let r=o.params[n];e.hasAttribute(n)?i[n]=t(e.getAttribute(n),l):"BLOCK"===r.type?(i[n]=[c[u]],u++):"MULTI_BLOCK"===r.type?i[n]=[...c.filter(e=>e.tagName===n)[0].childNodes]:i[n]=t(o.params[n].def,l)}for(let e of[...o.node.childNodes]){let t=[];await n(e,i,r,t),a.push(...t)}}async function n(e,r,a,o=[]){if(e.nodeType!==e.ELEMENT_NODE){let i=e.cloneNode();i.textContent=t(i.textContent,r,!0),o.push(i);return}let l=e.tagName.toLowerCase();if(!u)switch(l){case"arg":case"property":case"macro":case"insert_block":case"if":case"unless":case"include":case"element":case"attribute":l=`xacro:${l}`;break;default:l in a&&(l=`xacro:${l}`)}switch(l){case"xacro:property":{let i;nS(o);let n=e.getAttribute("name");if(e.hasAttribute("value"))i=e.getAttribute("value");else if(e.hasAttribute("default"))i=e.getAttribute("default");else for(let t of(i=[],[...e.childNodes]))i.push(nw(t,!1));let a="global";y&&(a=e.getAttribute("scope")||"local"),"local"!==a&&(i=t(i,r)),"global"===a?m[n]=i:"parent"===a?r[nA][n]=i:r[n]=i;break}case"xacro:macro":{nS(o);let t=function(e){let t=e.getAttribute("name").replace(/^xacro:/,""),i=e.getAttribute("params"),n={};return i&&i.trim().match(/[^\s']+('[^']*')?/g).map(e=>(function(e){let t={};if(/^\*\*/.test(e)?t.type="MULTI_BLOCK":/^\*/.test(e)?t.type="BLOCK":t.type="PARAM",e=e.replace(/^\*{1,2}/g,""),/:=/.test(e)){let[i,n]=e.split(":=");if(/^\^/.test(n)||/\|/.test(n))throw Error(`XacroParser: ROS Jade pass-through notation not supported in macro defaults: ${n}`);t.name=i,n.startsWith("'")&&n.endsWith("'")?t.def=n.substring(1,n.length-1):t.def=n}else t.name=e,t.def=null;return t})(e)).forEach(e=>{n[e.name]=e}),{name:t,node:nw(e,!1),params:n}}(e);a[t.name]=t;break}case"xacro:insert_block":for(let t of(nS(o),r[e.getAttribute("name")]))await n(t,r,a,o);return;case"xacro:if":case"xacro:unless":{nS(o);let i=t(e.getAttribute("value"),r,!0),s=null;if(s=isNaN(parseFloat(i))?"true"===i||"false"===i?"true"===i:i:!!parseFloat(i),"xacro:unless"===l&&(s=!s),s)for(let t of[...e.childNodes])await n(t,r,a,o);return}case"xacro:include":{if(nS(o),e.hasAttribute("ns"))throw Error("XacroParser: xacro:include name spaces not supported.");let i=t(e.getAttribute("filename"),r,!0),l=/^[/\\]/.test(i)||/^[a-zA-Z]+:[/\\]/.test(i)?i:_+i,h=_;for(let e of(_=nb(l),[...(await s(l)).children[0].childNodes]))await n(e,r,a,o);_=h;return}case"xacro:arg":case"xacro:attribute":case"xacro:element":throw Error(`XacroParser: ${l} tags not supported.`);default:if(/^xacro:/.test(l)||l in a)return nS(o),i(e,r,a,o);{let i=e.cloneNode();for(let e=0,n=i.attributes.length;e<n;e++){let n=i.attributes[e],a=t(n.value,r,!0);i.setAttribute(n.name,a)}let s=[...e.childNodes],l=[];for(let e=0,t=s.length;e<t;e++)await n(s[e],r,a,l);l.forEach(e=>i.appendChild(e)),o.push(i)}}}async function r(e,t,i){let r=nM(e,"xacro:property");for(let a of(u||r.push(...nM(e,"property")),r))await n(a,t,i);let a=nM(e,"xacro:macro");for(let r of(u||a.push(...nM(e,"macro")),a))await n(r,t,i)}async function a(e,t,i){let r=e.cloneNode();for(let a=0,s=e.children.length;a<s;a++){let s=[];await n(e.children[a],t,i,s);let o=s[0];o.removeAttribute("xmlns:xacro"),r.appendChild(o)}return r}async function s(e){try{let t=await l.getFileContents(e);return new DOMParser().parseFromString(t,"text/xml")}catch(t){throw Error(`XacroParser: Could not load included file: ${e}`)}}async function o(e,t,i=[]){let n=nM(e,"xacro:include");u||n.push(...nM(e,"include"));let r=n.map(e=>{if(e.hasAttribute("ns"))throw Error("XacroParser: xacro:include name spaces not supported.");let n=e.getAttribute("filename"),r=e.getAttribute("ns")||null,a=/^[/\\]/.test(n)||/^[a-zA-Z]+:[/\\]/.test(n)?n:t+n;return s(a).then(e=>(i.push({filename:n,namespace:r,content:e}),o(e,nb(a),i)))});return await Promise.all(r),i}let l=this,h=this.inOrder,c=this.workingPath+(this.workingPath&&!/[\\/]$/.test(this.workingPath)?"/":""),u=this.requirePrefix,d=this.rospackCommands,p={},f={},m={True:1,False:0};m[nA]=m;let g=(e,...t)=>d instanceof Function?d(e,...t):d[e](...t),v=r1,y=this.localProperties,_=c,x=new DOMParser().parseFromString(e,"text/xml");y&&!h&&(console.warn('XacroParser: Implicitly setting "localProperties" option to false because "inOrder" is false.'),y=!1);let b=null;return b=h?Promise.resolve():async function(){return await r(x,m,p),o(x=nw(x,!0),c).then(e=>{e.forEach(e=>{r(e.content,m,p),e.content=nw(e.content,!0),f[e.filename]=e.content})})}(),await b,a(x,m,p)}}class r3 extends r2{constructor(){super(),this.fetchOptions={}}load(e,t,i){let n=nb(e);""===this.workingPath&&(this.workingPath=n),this.getFileContents(e).then(e=>{this.parse(e,t,i)}).catch(e=>{i&&i(e)})}parse(e,t,i){super.parse(e).then(t).catch(e=>{i&&i(e)})}getFileContents(e){return fetch(e,this.fetchOptions).then(t=>{if(t.ok)return t.text();throw Error(`XacroLoader: Failed to load url '${e}' with error code ${t.status} : ${t.statusText}.`)})}}var T=(S("ilwiq"),S("ilwiq"));class r4 extends T.Loader{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new T.FileLoader(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{t(r.parse(i))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}},i,n)}parse(e){let t=function(e){if("string"!=typeof e)return e;{let t=new Uint8Array(e.length);for(let i=0;i<e.length;i++)t[i]=255&e.charCodeAt(i);return t.buffer||t}}(e);return!function(e){let t=new DataView(e);if(84+50*t.getUint32(80,!0)===t.byteLength)return!0;let i=[115,111,108,105,100];for(let e=0;e<5;e++)if(function(e,t,i){for(let n=0,r=e.length;n<r;n++)if(e[n]!==t.getUint8(i+n))return!1;return!0}(i,t,e))return!1;return!0}(t)?function(e){let t;let i=new T.BufferGeometry,n=/solid([\s\S]*?)endsolid/g,r=/facet([\s\S]*?)endfacet/g,a=/solid\s(.+)/,s=0,o=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,l=RegExp("vertex"+o+o+o,"g"),h=RegExp("normal"+o+o+o,"g"),c=[],u=[],d=[],p=new T.Vector3,f=0,m=0,g=0;for(;null!==(t=n.exec(e));){m=g;let e=t[0],n=null!==(t=a.exec(e))?t[1]:"";for(d.push(n);null!==(t=r.exec(e));){let e=0,i=0,n=t[0];for(;null!==(t=h.exec(n));)p.x=parseFloat(t[1]),p.y=parseFloat(t[2]),p.z=parseFloat(t[3]),i++;for(;null!==(t=l.exec(n));)c.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3])),u.push(p.x,p.y,p.z),e++,g++;1!==i&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+s),3!==e&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+s),s++}let o=m,v=g-m;i.userData.groupNames=d,i.addGroup(o,v,f),f++}return i.setAttribute("position",new T.Float32BufferAttribute(c,3)),i.setAttribute("normal",new T.Float32BufferAttribute(u,3)),i}("string"!=typeof e?new TextDecoder().decode(e):e):function(e){let t,i,n,r;let a=new DataView(e),s=a.getUint32(80,!0),o,l,h,c=!1,u;for(let e=0;e<70;e++)1129270351==a.getUint32(e,!1)&&82==a.getUint8(e+4)&&61==a.getUint8(e+5)&&(c=!0,u=new Float32Array(9*s),t=a.getUint8(e+6)/255,i=a.getUint8(e+7)/255,n=a.getUint8(e+8)/255,r=a.getUint8(e+9)/255);let d=new T.BufferGeometry,p=new Float32Array(9*s),f=new Float32Array(9*s),m=new T.Color;for(let e=0;e<s;e++){let r=84+50*e,s=a.getFloat32(r,!0),d=a.getFloat32(r+4,!0),g=a.getFloat32(r+8,!0);if(c){let e=a.getUint16(r+48,!0);(32768&e)==0?(o=(31&e)/31,l=(e>>5&31)/31,h=(e>>10&31)/31):(o=t,l=i,h=n)}for(let t=1;t<=3;t++){let i=r+12*t,n=9*e+(t-1)*3;p[n]=a.getFloat32(i,!0),p[n+1]=a.getFloat32(i+4,!0),p[n+2]=a.getFloat32(i+8,!0),f[n]=s,f[n+1]=d,f[n+2]=g,c&&(m.set(o,l,h).convertSRGBToLinear(),u[n]=m.r,u[n+1]=m.g,u[n+2]=m.b)}}return d.setAttribute("position",new T.BufferAttribute(p,3)),d.setAttribute("normal",new T.BufferAttribute(f,3)),c&&(d.setAttribute("color",new T.BufferAttribute(u,3)),d.hasColors=!0,d.alpha=r),d}(t)}}var T=(S("ilwiq"),S("ilwiq"));class r5 extends T.DataTextureLoader{constructor(e){super(e)}parse(e){if(e.length<19)throw Error("THREE.TGALoader: Not enough data to contain header.");let t=0,i=new Uint8Array(e),n={id_length:i[t++],colormap_type:i[t++],image_type:i[t++],colormap_index:i[t++]|i[t++]<<8,colormap_length:i[t++]|i[t++]<<8,colormap_size:i[t++],origin:[i[t++]|i[t++]<<8,i[t++]|i[t++]<<8],width:i[t++]|i[t++]<<8,height:i[t++]|i[t++]<<8,pixel_size:i[t++],flags:i[t++]};if(!function(e){switch(e.image_type){case 1:case 9:if(e.colormap_length>256||24!==e.colormap_size||1!==e.colormap_type)throw Error("THREE.TGALoader: Invalid type colormap data for indexed type.");break;case 2:case 3:case 10:case 11:if(e.colormap_type)throw Error("THREE.TGALoader: Invalid type colormap data for colormap type.");break;case 0:throw Error("THREE.TGALoader: No data.");default:throw Error("THREE.TGALoader: Invalid type "+e.image_type)}if(e.width<=0||e.height<=0)throw Error("THREE.TGALoader: Invalid image size.");if(8!==e.pixel_size&&16!==e.pixel_size&&24!==e.pixel_size&&32!==e.pixel_size)throw Error("THREE.TGALoader: Invalid pixel size "+e.pixel_size)}(n),n.id_length+t>e.length)throw Error("THREE.TGALoader: No data.");t+=n.id_length;let r=!1,a=!1,s=!1;switch(n.image_type){case 9:r=!0,a=!0;break;case 1:a=!0;break;case 10:r=!0;break;case 2:break;case 11:r=!0,s=!0;break;case 3:s=!0}let o=new Uint8Array(n.width*n.height*4),l=function(e,t,i,n,r){let a,s;let o=i.pixel_size>>3,l=i.width*i.height*o;if(t&&(s=r.subarray(n,n+=i.colormap_length*(i.colormap_size>>3))),e){let e,t,i;a=new Uint8Array(l);let s=0,h=new Uint8Array(o);for(;s<l;)if(t=(127&(e=r[n++]))+1,128&e){for(i=0;i<o;++i)h[i]=r[n++];for(i=0;i<t;++i)a.set(h,s+i*o);s+=o*t}else{for(t*=o,i=0;i<t;++i)a[s+i]=r[n++];s+=t}}else a=r.subarray(n,n+=t?i.width*i.height:l);return{pixel_data:a,palettes:s}}(r,a,n,t,i);return!function(e,t,i,r,a){let o,l,h,c,u,d;switch((48&n.flags)>>4){default:case 2:o=0,h=1,u=t,l=0,c=1,d=i;break;case 0:o=0,h=1,u=t,l=i-1,c=-1,d=-1;break;case 3:o=t-1,h=-1,u=-1,l=0,c=1,d=i;break;case 1:o=t-1,h=-1,u=-1,l=i-1,c=-1,d=-1}if(s)switch(n.pixel_size){case 8:!function(e,t,i,r,a,s,o,l){let h,c=0,u,d,p=n.width;for(d=t;d!==r;d+=i)for(u=a;u!==o;u+=s,c++)h=l[c],e[(u+p*d)*4+0]=h,e[(u+p*d)*4+1]=h,e[(u+p*d)*4+2]=h,e[(u+p*d)*4+3]=255}(e,l,c,d,o,h,u,r);break;case 16:!function(e,t,i,r,a,s,o,l){let h=0,c,u,d=n.width;for(u=t;u!==r;u+=i)for(c=a;c!==o;c+=s,h+=2)e[(c+d*u)*4+0]=l[h+0],e[(c+d*u)*4+1]=l[h+0],e[(c+d*u)*4+2]=l[h+0],e[(c+d*u)*4+3]=l[h+1]}(e,l,c,d,o,h,u,r);break;default:throw Error("THREE.TGALoader: Format not supported.")}else switch(n.pixel_size){case 8:!function(e,t,i,r,a,s,o,l,h){let c,u=0,d,p,f=n.width;for(p=t;p!==r;p+=i)for(d=a;d!==o;d+=s,u++)c=l[u],e[(d+f*p)*4+3]=255,e[(d+f*p)*4+2]=h[3*c+0],e[(d+f*p)*4+1]=h[3*c+1],e[(d+f*p)*4+0]=h[3*c+2]}(e,l,c,d,o,h,u,r,a);break;case 16:!function(e,t,i,r,a,s,o,l){let h,c=0,u,d,p=n.width;for(d=t;d!==r;d+=i)for(u=a;u!==o;u+=s,c+=2)h=l[c+0]+(l[c+1]<<8),e[(u+p*d)*4+0]=(31744&h)>>7,e[(u+p*d)*4+1]=(992&h)>>2,e[(u+p*d)*4+2]=(31&h)<<3,e[(u+p*d)*4+3]=32768&h?0:255}(e,l,c,d,o,h,u,r);break;case 24:!function(e,t,i,r,a,s,o,l){let h=0,c,u,d=n.width;for(u=t;u!==r;u+=i)for(c=a;c!==o;c+=s,h+=3)e[(c+d*u)*4+3]=255,e[(c+d*u)*4+2]=l[h+0],e[(c+d*u)*4+1]=l[h+1],e[(c+d*u)*4+0]=l[h+2]}(e,l,c,d,o,h,u,r);break;case 32:!function(e,t,i,r,a,s,o,l){let h=0,c,u,d=n.width;for(u=t;u!==r;u+=i)for(c=a;c!==o;c+=s,h+=4)e[(c+d*u)*4+2]=l[h+0],e[(c+d*u)*4+1]=l[h+1],e[(c+d*u)*4+0]=l[h+2],e[(c+d*u)*4+3]=l[h+3]}(e,l,c,d,o,h,u,r);break;default:throw Error("THREE.TGALoader: Format not supported.")}}(o,n.width,n.height,l.pixel_data,l.palettes),{data:o,width:n.width,height:n.height,flipY:!0,generateMipmaps:!0,minFilter:T.LinearMipmapLinearFilter}}}class r6 extends T.Loader{load(e,t,i,n){let r=this,a=""===r.path?(0,T.LoaderUtils).extractUrlBase(e):r.path,s=new T.FileLoader(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(i){try{t(r.parse(i,a))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}},i,n)}parse(e,t){var i,n,r,a;let s;function o(e,t){let i=[],n=e.childNodes;for(let e=0,r=n.length;e<r;e++){let r=n[e];r.nodeName===t&&i.push(r)}return i}function l(e){if(0===e.length)return[];let t=e.trim().split(/\s+/),i=Array(t.length);for(let e=0,n=t.length;e<n;e++)i[e]=parseFloat(t[e]);return i}function h(e){if(0===e.length)return[];let t=e.trim().split(/\s+/),i=Array(t.length);for(let e=0,n=t.length;e<n;e++)i[e]=parseInt(t[e]);return i}function c(e){return e.substring(1)}function u(e){return 0===Object.keys(e).length}function d(e,t,i,n){let r=o(e,t)[0];if(void 0!==r){let e=o(r,i);for(let t=0;t<e.length;t++)n(e[t])}}function p(e,t){for(let i in e)e[i].build=t(e[i])}function f(e,t){return void 0!==e.build||(e.build=t(e)),e.build}function m(e){let t=[],i=e.channels,n=e.samplers,r=e.sources;for(let e in i)if(i.hasOwnProperty(e)){let a=i[e],s=n[a.sampler],o=s.inputs.INPUT,l=s.inputs.OUTPUT;!function(e,t){let i=e.keyframes,n=e.name,r=[],a=[],s=[],o=[];for(let e=0,t=i.length;e<t;e++){let t=i[e],n=t.time,l=t.value;k.fromArray(l).transpose(),k.decompose(v,_,y),r.push(n),a.push(v.x,v.y,v.z),s.push(_.x,_.y,_.z,_.w),o.push(y.x,y.y,y.z)}a.length>0&&t.push(new T.VectorKeyframeTrack(n+".position",r,a)),s.length>0&&t.push(new T.QuaternionKeyframeTrack(n+".quaternion",r,s)),o.length>0&&t.push(new T.VectorKeyframeTrack(n+".scale",r,o))}(function(e,t,i){let n,r,a,s,o,l;let h=eo.nodes[e.id],c=J(h.id),u=h.transforms[e.sid],d=h.matrix.clone().transpose(),p={};switch(u){case"matrix":for(a=0,s=t.array.length;a<s;a++)if(n=t.array[a],r=a*i.stride,void 0===p[n]&&(p[n]={}),!0===e.arraySyntax){let t=i.array[r],a=e.indices[0]+4*e.indices[1];p[n][a]=t}else for(o=0,l=i.stride;o<l;o++)p[n][o]=i.array[r+o];break;case"translate":case"rotate":case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',u)}let f=function(e,t){let i=[];for(let t in e)i.push({time:parseFloat(t),value:e[t]});i.sort(function(e,t){return e.time-t.time});for(let e=0;e<16;e++)!function(e,t,i){let n,r,a;let s=!0;for(r=0,a=e.length;r<a;r++)void 0===(n=e[r]).value[t]?n.value[t]=null:s=!1;if(!0===s)for(r=0,a=e.length;r<a;r++)(n=e[r]).value[t]=i;else!function(e,t){let i,n;for(let r=0,a=e.length;r<a;r++){let a=e[r];if(null===a.value[t]){if(i=function(e,t,i){for(;t>=0;){let n=e[t];if(null!==n.value[i])return n;t--}return null}(e,r,t),n=function(e,t,i){for(;t<e.length;){let n=e[t];if(null!==n.value[i])return n;t++}return null}(e,r,t),null===i){a.value[t]=n.value[t];continue}if(null===n){a.value[t]=i.value[t];continue}!function(e,t,i,n){if(i.time-t.time==0){e.value[n]=t.value[n];return}e.value[n]=(e.time-t.time)*(i.value[n]-t.value[n])/(i.time-t.time)+t.value[n]}(a,i,n,t)}}}(e,t)}(i,e,t.elements[e]);return i}(p,d);return{name:c.uuid,keyframes:f}}(a,r[o],r[l]),t)}return t}function g(e){return f(eo.animations[e],m)}let v=new T.Vector3,y=new T.Vector3,_=new T.Quaternion;function x(e){let t=[],i=e.name,n=e.end-e.start||-1,r=e.animations;for(let e=0,i=r.length;e<i;e++){let i=g(r[e]);for(let e=0,n=i.length;e<n;e++)t.push(i[e])}return new T.AnimationClip(i,n,t)}function b(e){let t={id:e.id},i=eo.geometries[t.id];return void 0!==e.skin&&(t.skin=function(e){let t,i,n;let r={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},a=e.sources,s=e.vertexWeights,o=s.vcount,l=s.v,h=s.inputs.JOINT.offset,c=s.inputs.WEIGHT.offset,u=e.sources[e.joints.inputs.JOINT],d=e.sources[e.joints.inputs.INV_BIND_MATRIX],p=a[s.inputs.WEIGHT.id].array,f=0;for(t=0,n=o.length;t<n;t++){let e=o[t],n=[];for(i=0;i<e;i++){let e=l[f+h],t=p[l[f+c]];n.push({index:e,weight:t}),f+=2}for(n.sort(m),i=0;i<4;i++){let e=n[i];void 0!==e?(r.indices.array.push(e.index),r.weights.array.push(e.weight)):(r.indices.array.push(0),r.weights.array.push(0))}}for(e.bindShapeMatrix?r.bindMatrix=new(0,T.Matrix4)().fromArray(e.bindShapeMatrix).transpose():r.bindMatrix=new(0,T.Matrix4)().identity(),t=0,n=u.array.length;t<n;t++){let e=u.array[t],i=new(0,T.Matrix4)().fromArray(d.array,t*d.stride).transpose();r.joints.push({name:e,boneInverse:i})}return r;function m(e,t){return t.weight-e.weight}}(e.skin),i.sources.skinIndices=t.skin.indices,i.sources.skinWeights=t.skin.weights),t}function M(e){return void 0!==e.build?e.build:e.init_from}function w(e){let t=eo.images[e];return void 0!==t?f(t,M):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",e),null)}function S(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"color":t[n.nodeName]=l(n.textContent);break;case"float":t[n.nodeName]=parseFloat(n.textContent);break;case"texture":t[n.nodeName]={id:n.getAttribute("texture"),extra:E(n)}}}return t}function E(e){let t={technique:{}};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"extra"===n.nodeName&&function(e,t){for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"technique"===n.nodeName&&function(e,t){for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":t.technique[n.nodeName]=parseFloat(n.textContent);break;case"wrapU":case"wrapV":"TRUE"===n.textContent.toUpperCase()?t.technique[n.nodeName]=1:"FALSE"===n.textContent.toUpperCase()?t.technique[n.nodeName]=0:t.technique[n.nodeName]=parseInt(n.textContent);break;case"bump":t[n.nodeName]=C(n)}}}(n,t)}}(n,t)}return t}function A(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"technique"===n.nodeName&&(t.technique=function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"double_sided":t[n.nodeName]=parseInt(n.textContent);break;case"bump":t[n.nodeName]=C(n)}}return t}(n))}return t}function C(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"texture"===n.nodeName&&(t[n.nodeName]={id:n.getAttribute("texture"),texcoord:n.getAttribute("texcoord"),extra:E(n)})}return t}function R(e){return e}function P(e){var t;let i;let n=(t=e.url,f(eo.effects[t],R)),r=n.profile.technique;switch(r.type){case"phong":case"blinn":i=new T.MeshPhongMaterial;break;case"lambert":i=new T.MeshLambertMaterial;break;default:i=new T.MeshBasicMaterial}function a(e,t=null){let i=n.profile.samplers[e.id],r=null;if(void 0!==i?r=w(n.profile.surfaces[i.source].init_from):(console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),r=w(e.id)),null===r)return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",e.id),null;{var o;let i,n;let a="tga"===(o=r).slice((o.lastIndexOf(".")-1>>>0)+2).toLowerCase()?s:ei;if(void 0===a)return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",r),null;{let i=a.load(r),n=e.extra;if(void 0!==n&&void 0!==n.technique&&!1===u(n.technique)){let e=n.technique;i.wrapS=e.wrapU?T.RepeatWrapping:T.ClampToEdgeWrapping,i.wrapT=e.wrapV?T.RepeatWrapping:T.ClampToEdgeWrapping,i.offset.set(e.offsetU||0,e.offsetV||0),i.repeat.set(e.repeatU||1,e.repeatV||1)}else i.wrapS=T.RepeatWrapping,i.wrapT=T.RepeatWrapping;return null!==t&&(i.colorSpace=t),i}}}i.name=e.name||"";let o=r.parameters;for(let e in o){let t=o[e];switch(e){case"diffuse":t.color&&i.color.fromArray(t.color),t.texture&&(i.map=a(t.texture,T.SRGBColorSpace));break;case"specular":t.color&&i.specular&&i.specular.fromArray(t.color),t.texture&&(i.specularMap=a(t.texture));break;case"bump":t.texture&&(i.normalMap=a(t.texture));break;case"ambient":t.texture&&(i.lightMap=a(t.texture,T.SRGBColorSpace));break;case"shininess":t.float&&i.shininess&&(i.shininess=t.float);break;case"emission":t.color&&i.emissive&&i.emissive.fromArray(t.color),t.texture&&(i.emissiveMap=a(t.texture,T.SRGBColorSpace))}}i.color.convertSRGBToLinear(),i.specular&&i.specular.convertSRGBToLinear(),i.emissive&&i.emissive.convertSRGBToLinear();let l=o.transparent,h=o.transparency;if(void 0===h&&l&&(h={float:1}),void 0===l&&h&&(l={opaque:"A_ONE",data:{color:[1,1,1,1]}}),l&&h){if(l.data.texture)i.transparent=!0;else{let e=l.data.color;switch(l.opaque){case"A_ONE":i.opacity=e[3]*h.float;break;case"RGB_ZERO":i.opacity=1-e[0]*h.float;break;case"A_ZERO":i.opacity=1-e[3]*h.float;break;case"RGB_ONE":i.opacity=e[0]*h.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',l.opaque)}i.opacity<1&&(i.transparent=!0)}}if(void 0!==r.extra&&void 0!==r.extra.technique){let e=r.extra.technique;for(let t in e){let n=e[t];switch(t){case"double_sided":i.side=1===n?T.DoubleSide:T.FrontSide;break;case"bump":i.normalMap=a(n.texture),i.normalScale=new T.Vector2(1,1)}}}return i}function L(e){let t;switch(e.optics.technique){case"perspective":t=new T.PerspectiveCamera(e.optics.parameters.yfov,e.optics.parameters.aspect_ratio,e.optics.parameters.znear,e.optics.parameters.zfar);break;case"orthographic":let i=e.optics.parameters.ymag,n=e.optics.parameters.xmag,r=e.optics.parameters.aspect_ratio;n=void 0===n?i*r:n,i=void 0===i?n/r:i,n*=.5,i*=.5,t=new T.OrthographicCamera(-n,n,i,-i,e.optics.parameters.znear,e.optics.parameters.zfar);break;default:t=new T.PerspectiveCamera}return t.name=e.name||"",t}function N(e){let t;switch(e.technique){case"directional":t=new T.DirectionalLight;break;case"point":t=new T.PointLight;break;case"spot":t=new T.SpotLight;break;case"ambient":t=new T.AmbientLight}return e.parameters.color&&t.color.copy(e.parameters.color),e.parameters.distance&&(t.distance=e.parameters.distance),t}function I(e){let t={array:[],stride:3};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"float_array":t.array=l(n.textContent);break;case"Name_array":t.array=function(e){if(0===e.length)return[];let t=e.trim().split(/\s+/),i=Array(t.length);for(let e=0,n=t.length;e<n;e++)i[e]=t[e];return i}(n.textContent);break;case"technique_common":let r=o(n,"accessor")[0];void 0!==r&&(t.stride=parseInt(r.getAttribute("stride")))}}return t}function U(e){let t={},i=e.sources,n=e.vertices,r=e.primitives;if(0===r.length)return{};let a=function(e){let t={};for(let i=0;i<e.length;i++){let n=e[i];void 0===t[n.type]&&(t[n.type]=[]),t[n.type].push(n)}return t}(r);for(let e in a){let r=a[e];!function(e){let t=0;for(let i=0,n=e.length;i<n;i++)!0===e[i].hasUV&&t++;t>0&&t<e.length&&(e.uvsNeedsFix=!0)}(r),t[e]=function(e,t,i){let n={},r={array:[],stride:0},a={array:[],stride:0},s={array:[],stride:0},o={array:[],stride:0},l={array:[],stride:0},h={array:[],stride:4},c={array:[],stride:4},u=new T.BufferGeometry,d=[],p=0;for(let n=0;n<e.length;n++){let f=e[n],m=f.inputs,g=0;switch(f.type){case"lines":case"linestrips":g=2*f.count;break;case"triangles":g=3*f.count;break;case"polylist":for(let e=0;e<f.count;e++){let t=f.vcount[e];switch(t){case 3:g+=3;break;case 4:g+=6;break;default:g+=(t-2)*3}}break;default:console.warn("THREE.ColladaLoader: Unknow primitive type:",f.type)}for(let v in u.addGroup(p,g,n),p+=g,f.material&&d.push(f.material),m){let n=m[v];switch(v){case"VERTEX":for(let u in i){let d=i[u];switch(u){case"POSITION":let p=r.array.length;if(O(f,t[d],n.offset,r.array),r.stride=t[d].stride,t.skinWeights&&t.skinIndices&&(O(f,t.skinIndices,n.offset,h.array),O(f,t.skinWeights,n.offset,c.array)),!1===f.hasUV&&!0===e.uvsNeedsFix){let e=(r.array.length-p)/r.stride;for(let t=0;t<e;t++)s.array.push(0,0)}break;case"NORMAL":O(f,t[d],n.offset,a.array),a.stride=t[d].stride;break;case"COLOR":O(f,t[d],n.offset,l.array),l.stride=t[d].stride;break;case"TEXCOORD":O(f,t[d],n.offset,s.array),s.stride=t[d].stride;break;case"TEXCOORD1":O(f,t[d],n.offset,o.array),s.stride=t[d].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',u)}}break;case"NORMAL":O(f,t[n.id],n.offset,a.array),a.stride=t[n.id].stride;break;case"COLOR":O(f,t[n.id],n.offset,l.array,!0),l.stride=t[n.id].stride;break;case"TEXCOORD":O(f,t[n.id],n.offset,s.array),s.stride=t[n.id].stride;break;case"TEXCOORD1":O(f,t[n.id],n.offset,o.array),o.stride=t[n.id].stride}}}return r.array.length>0&&u.setAttribute("position",new T.Float32BufferAttribute(r.array,r.stride)),a.array.length>0&&u.setAttribute("normal",new T.Float32BufferAttribute(a.array,a.stride)),l.array.length>0&&u.setAttribute("color",new T.Float32BufferAttribute(l.array,l.stride)),s.array.length>0&&u.setAttribute("uv",new T.Float32BufferAttribute(s.array,s.stride)),o.array.length>0&&u.setAttribute("uv1",new T.Float32BufferAttribute(o.array,o.stride)),h.array.length>0&&u.setAttribute("skinIndex",new T.Float32BufferAttribute(h.array,h.stride)),c.array.length>0&&u.setAttribute("skinWeight",new T.Float32BufferAttribute(c.array,c.stride)),n.data=u,n.type=e[0].type,n.materialKeys=d,n}(r,i,n)}return t}function O(e,t,i,n,r=!1){let a=e.p,s=e.stride,o=e.vcount;function l(e){let t=a[e+i]*c,s=t+c;for(;t<s;t++)n.push(h[t]);if(r){let e=n.length-c-1;en.setRGB(n[e+0],n[e+1],n[e+2]).convertSRGBToLinear(),n[e+0]=en.r,n[e+1]=en.g,n[e+2]=en.b}}let h=t.array,c=t.stride;if(void 0!==e.vcount){let e=0;for(let t=0,i=o.length;t<i;t++){let i=o[t];if(4===i){let t=e+0*s,i=e+1*s,n=e+2*s,r=e+3*s;l(t),l(i),l(r),l(i),l(n),l(r)}else if(3===i){let t=e+0*s,i=e+1*s,n=e+2*s;l(t),l(i),l(n)}else if(i>4)for(let t=1,n=i-2;t<=n;t++){let i=e+0*s,n=e+s*t,r=e+s*(t+1);l(i),l(n),l(r)}e+=s*i}}else for(let e=0,t=a.length;e<t;e+=s)l(e)}function D(e){return f(eo.geometries[e],U)}function F(e){return void 0!==e.build?e.build:e}function z(e){let t={type:e.nodeName},i=l(e.textContent);switch(t.type){case"matrix":t.obj=new T.Matrix4,t.obj.fromArray(i).transpose();break;case"translate":t.obj=new T.Vector3,t.obj.fromArray(i);break;case"rotate":t.obj=new T.Vector3,t.obj.fromArray(i),t.angle=(0,T.MathUtils).degToRad(i[3])}return t}function B(e){return void 0!==e.build?e.build:e}let k=new T.Matrix4,V=new T.Vector3;function H(e){let t={name:e.getAttribute("name")||"",type:e.getAttribute("type"),id:e.getAttribute("id"),sid:e.getAttribute("sid"),matrix:new T.Matrix4,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let i=0;i<e.childNodes.length;i++){let n;let r=e.childNodes[i];if(1===r.nodeType)switch(r.nodeName){case"node":t.nodes.push(r.getAttribute("id")),H(r);break;case"instance_camera":t.instanceCameras.push(c(r.getAttribute("url")));break;case"instance_controller":t.instanceControllers.push(G(r));break;case"instance_light":t.instanceLights.push(c(r.getAttribute("url")));break;case"instance_geometry":t.instanceGeometries.push(G(r));break;case"instance_node":t.instanceNodes.push(c(r.getAttribute("url")));break;case"matrix":n=l(r.textContent),t.matrix.multiply(k.fromArray(n).transpose()),t.transforms[r.getAttribute("sid")]=r.nodeName;break;case"translate":n=l(r.textContent),V.fromArray(n),t.matrix.multiply(k.makeTranslation(V.x,V.y,V.z)),t.transforms[r.getAttribute("sid")]=r.nodeName;break;case"rotate":n=l(r.textContent);let a=(0,T.MathUtils).degToRad(n[3]);t.matrix.multiply(k.makeRotationAxis(V.fromArray(n),a)),t.transforms[r.getAttribute("sid")]=r.nodeName;break;case"scale":n=l(r.textContent),t.matrix.scale(V.fromArray(n)),t.transforms[r.getAttribute("sid")]=r.nodeName;break;case"extra":break;default:console.log(r)}}return Y(t.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",t.id):eo.nodes[t.id]=t,t}function G(e){let t={id:c(e.getAttribute("url")),materials:{},skeletons:[]};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];switch(n.nodeName){case"bind_material":let r=n.getElementsByTagName("instance_material");for(let e=0;e<r.length;e++){let i=r[e],n=i.getAttribute("symbol"),a=i.getAttribute("target");t.materials[n]=c(a)}break;case"skeleton":t.skeletons.push(c(n.textContent))}}return t}function W(e,t,i){e.traverse(function(e){if(!0===e.isBone){let n;for(let i=0;i<t.length;i++){let r=t[i];if(r.name===e.name){n=r.boneInverse;break}}void 0===n&&(n=new T.Matrix4),i.push({bone:e,boneInverse:n,processed:!1})}})}function j(e){let t;let i=[],n=e.matrix,r=e.nodes,a=e.type,s=e.instanceCameras,o=e.instanceControllers,l=e.instanceLights,h=e.instanceGeometries,c=e.instanceNodes;for(let e=0,t=r.length;e<t;e++)i.push(J(r[e]));for(let e=0,t=s.length;e<t;e++){let t=function(e){let t=eo.cameras[e];return void 0!==t?f(t,L):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",e),null)}(s[e]);null!==t&&i.push(t.clone())}for(let e=0,t=o.length;e<t;e++){var u;let t=o[e],n=(u=t.id,f(eo.controllers[u],b)),r=X(D(n.id),t.materials),a=function(e,t){let i,n,r;let a=[],s=[];for(i=0;i<e.length;i++){let n=e[i];if(Y(n))W(J(n),t,a);else if(void 0!==eo.visualScenes[n]){let e=eo.visualScenes[n].children;for(let i=0;i<e.length;i++){let n=e[i];"JOINT"===n.type&&W(J(n.id),t,a)}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",n)}for(i=0;i<t.length;i++)for(n=0;n<a.length;n++)if((r=a[n]).bone.name===t[i].name){s[i]=r,r.processed=!0;break}for(i=0;i<a.length;i++)!1===(r=a[i]).processed&&(s.push(r),r.processed=!0);let o=[],l=[];for(i=0;i<s.length;i++)r=s[i],o.push(r.bone),l.push(r.boneInverse);return new T.Skeleton(o,l)}(t.skeletons,n.skin.joints);for(let e=0,t=r.length;e<t;e++){let t=r[e];t.isSkinnedMesh&&(t.bind(a,n.skin.bindMatrix),t.normalizeSkinWeights()),i.push(t)}}for(let e=0,t=l.length;e<t;e++){let t=function(e){let t=eo.lights[e];return void 0!==t?f(t,N):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",e),null)}(l[e]);null!==t&&i.push(t.clone())}for(let e=0,t=h.length;e<t;e++){let t=h[e],n=X(D(t.id),t.materials);for(let e=0,t=n.length;e<t;e++)i.push(n[e])}for(let e=0,t=c.length;e<t;e++)i.push(J(c[e]).clone());if(0===r.length&&1===i.length)t=i[0];else{t="JOINT"===a?new T.Bone:new T.Group;for(let e=0;e<i.length;e++)t.add(i[e])}return t.name="JOINT"===a?e.sid:e.name,t.matrix.copy(n),t.matrix.decompose(t.position,t.quaternion,t.scale),t}let q=new T.MeshBasicMaterial({name:T.Loader.DEFAULT_MATERIAL_NAME,color:16711935});function X(e,t){let i=[];for(let n in e){let r;let a=e[n],s=function(e,t){let i=[];for(let n=0,r=e.length;n<r;n++){let r=t[e[n]];void 0===r?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",e[n]),i.push(q)):i.push(f(eo.materials[r],P))}return i}(a.materialKeys,t);if(0===s.length&&("lines"===n||"linestrips"===n?s.push(new T.LineBasicMaterial):s.push(new T.MeshPhongMaterial)),"lines"===n||"linestrips"===n)for(let e=0,t=s.length;e<t;e++){let t=s[e];if(!0===t.isMeshPhongMaterial||!0===t.isMeshLambertMaterial){let i=new T.LineBasicMaterial;i.color.copy(t.color),i.opacity=t.opacity,i.transparent=t.transparent,s[e]=i}}let o=void 0!==a.data.attributes.skinIndex,l=1===s.length?s[0]:s;switch(n){case"lines":r=new T.LineSegments(a.data,l);break;case"linestrips":r=new T.Line(a.data,l);break;case"triangles":case"polylist":r=o?new T.SkinnedMesh(a.data,l):new T.Mesh(a.data,l)}i.push(r)}return i}function Y(e){return void 0!==eo.nodes[e]}function J(e){return f(eo.nodes[e],j)}function Z(e){let t=new T.Group;t.name=e.name;let i=e.children;for(let e=0;e<i.length;e++){let n=i[e];t.add(J(n.id))}return t}function K(e){return f(eo.visualScenes[e],Z)}if(0===e.length)return{scene:new T.Scene};let Q=new DOMParser().parseFromString(e,"application/xml"),$=o(Q,"COLLADA")[0],ee=Q.getElementsByTagName("parsererror")[0];if(void 0!==ee){let e=o(ee,"div")[0];return console.error("THREE.ColladaLoader: Failed to parse collada file.\n",e?e.textContent:function(e){let t="",i=[e];for(;i.length;){let e=i.shift();e.nodeType===Node.TEXT_NODE?t+=e.textContent:(t+="\n",i.push.apply(i,e.childNodes))}return t.trim()}(ee)),null}console.debug("THREE.ColladaLoader: File version",$.getAttribute("version"));let et=(i=o($,"asset")[0],{unit:void 0!==(r=o(i,"unit")[0])&&!0===r.hasAttribute("meter")?parseFloat(r.getAttribute("meter")):1,upAxis:void 0!==(a=o(i,"up_axis")[0])?a.textContent:"Y_UP"}),ei=new T.TextureLoader(this.manager);ei.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin),r5&&(s=new r5(this.manager)).setPath(this.resourcePath||t);let en=new T.Color,er=[],ea={},es=0,eo={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};d($,"library_animations","animation",function e(t){let i={sources:{},samplers:{},channels:{}},n=!1;for(let r=0,a=t.childNodes.length;r<a;r++){let a;let s=t.childNodes[r];if(1===s.nodeType)switch(s.nodeName){case"source":a=s.getAttribute("id"),i.sources[a]=I(s);break;case"sampler":a=s.getAttribute("id"),i.samplers[a]=function(e){let t={inputs:{}};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType&&"input"===n.nodeName){let e=c(n.getAttribute("source")),i=n.getAttribute("semantic");t.inputs[i]=e}}return t}(s);break;case"channel":a=s.getAttribute("target"),i.channels[a]=function(e){let t={},i=e.getAttribute("target").split("/"),n=i.shift(),r=i.shift(),a=-1!==r.indexOf("("),s=-1!==r.indexOf(".");if(s)r=(i=r.split(".")).shift(),t.member=i.shift();else if(a){let e=r.split("(");r=e.shift();for(let t=0;t<e.length;t++)e[t]=parseInt(e[t].replace(/\)/,""));t.indices=e}return t.id=n,t.sid=r,t.arraySyntax=a,t.memberSyntax=s,t.sampler=c(e.getAttribute("source")),t}(s);break;case"animation":e(s),n=!0;break;default:console.log(s)}}!1===n&&(eo.animations[t.getAttribute("id")||(0,T.MathUtils).generateUUID()]=i)}),d($,"library_animation_clips","animation_clip",function(e){let t={name:e.getAttribute("id")||"default",start:parseFloat(e.getAttribute("start")||0),end:parseFloat(e.getAttribute("end")||0),animations:[]};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"instance_animation"===n.nodeName&&t.animations.push(c(n.getAttribute("url")))}eo.clips[e.getAttribute("id")]=t}),d($,"library_controllers","controller",function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"skin":t.id=c(n.getAttribute("source")),t.skin=function(e){let t={sources:{}};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"bind_shape_matrix":t.bindShapeMatrix=l(n.textContent);break;case"source":let r=n.getAttribute("id");t.sources[r]=I(n);break;case"joints":t.joints=function(e){let t={inputs:{}};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType&&"input"===n.nodeName){let e=n.getAttribute("semantic"),i=c(n.getAttribute("source"));t.inputs[e]=i}}return t}(n);break;case"vertex_weights":t.vertexWeights=function(e){let t={inputs:{}};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"input":let r=n.getAttribute("semantic"),a=c(n.getAttribute("source")),s=parseInt(n.getAttribute("offset"));t.inputs[r]={id:a,offset:s};break;case"vcount":t.vcount=h(n.textContent);break;case"v":t.v=h(n.textContent)}}return t}(n)}}return t}(n);break;case"morph":t.id=c(n.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.")}}eo.controllers[e.getAttribute("id")]=t}),d($,"library_images","image",function(e){let t={init_from:o(e,"init_from")[0].textContent};eo.images[e.getAttribute("id")]=t}),d($,"library_effects","effect",function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"profile_COMMON"===n.nodeName&&(t.profile=function(e){let t={surfaces:{},samplers:{}};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"newparam":(function(e,t){let i=e.getAttribute("sid");for(let n=0,r=e.childNodes.length;n<r;n++){let r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"surface":t.surfaces[i]=function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"init_from"===n.nodeName&&(t.init_from=n.textContent)}return t}(r);break;case"sampler2D":t.samplers[i]=function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"source"===n.nodeName&&(t.source=n.textContent)}return t}(r)}}})(n,t);break;case"technique":t.technique=function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"constant":case"lambert":case"blinn":case"phong":t.type=n.nodeName,t.parameters=function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":t[n.nodeName]=S(n);break;case"transparent":t[n.nodeName]={opaque:n.hasAttribute("opaque")?n.getAttribute("opaque"):"A_ONE",data:S(n)}}}return t}(n);break;case"extra":t.extra=A(n)}}return t}(n);break;case"extra":t.extra=A(n)}}return t}(n))}eo.effects[e.getAttribute("id")]=t}),d($,"library_materials","material",function(e){let t={name:e.getAttribute("name")};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"instance_effect"===n.nodeName&&(t.url=c(n.getAttribute("url")))}eo.materials[e.getAttribute("id")]=t}),d($,"library_cameras","camera",function(e){let t={name:e.getAttribute("name")};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"optics"===n.nodeName&&(t.optics=function(e){for(let t=0;t<e.childNodes.length;t++){let i=e.childNodes[t];if("technique_common"===i.nodeName)return function(e){let t={};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];switch(n.nodeName){case"perspective":case"orthographic":t.technique=n.nodeName,t.parameters=function(e){let t={};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];switch(n.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":t[n.nodeName]=parseFloat(n.textContent)}}return t}(n)}}return t}(i)}return{}}(n))}eo.cameras[e.getAttribute("id")]=t}),d($,"library_lights","light",function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];1===n.nodeType&&"technique_common"===n.nodeName&&(t=function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"directional":case"point":case"spot":case"ambient":t.technique=n.nodeName,t.parameters=function(e){let t={};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"color":let r=l(n.textContent);t.color=new(0,T.Color)().fromArray(r).convertSRGBToLinear();break;case"falloff_angle":t.falloffAngle=parseFloat(n.textContent);break;case"quadratic_attenuation":let a=parseFloat(n.textContent);t.distance=a?Math.sqrt(1/a):0}}return t}(n)}}return t}(n))}eo.lights[e.getAttribute("id")]=t}),d($,"library_geometries","geometry",function(e){let t={name:e.getAttribute("name"),sources:{},vertices:{},primitives:[]},i=o(e,"mesh")[0];if(void 0!==i){for(let e=0;e<i.childNodes.length;e++){let n=i.childNodes[e];if(1!==n.nodeType)continue;let r=n.getAttribute("id");switch(n.nodeName){case"source":t.sources[r]=I(n);break;case"vertices":t.vertices=function(e){let t={};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];1===n.nodeType&&(t[n.getAttribute("semantic")]=c(n.getAttribute("source")))}return t}(n);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",n.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":t.primitives.push(function(e){let t={type:e.nodeName,material:e.getAttribute("material"),count:parseInt(e.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let i=0,n=e.childNodes.length;i<n;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"input":let r=c(n.getAttribute("source")),a=n.getAttribute("semantic"),s=parseInt(n.getAttribute("offset")),o=parseInt(n.getAttribute("set")),l=o>0?a+o:a;t.inputs[l]={id:r,offset:s},t.stride=Math.max(t.stride,s+1),"TEXCOORD"===a&&(t.hasUV=!0);break;case"vcount":t.vcount=h(n.textContent);break;case"p":t.p=h(n.textContent)}}return t}(n));break;default:console.log(n)}}eo.geometries[e.getAttribute("id")]=t}}),d($,"library_nodes","node",H),d($,"library_visual_scenes","visual_scene",function(e){let t={name:e.getAttribute("name"),children:[]};!function(e){let t=e.getElementsByTagName("node");for(let e=0;e<t.length;e++){let i=t[e];!1===i.hasAttribute("id")&&i.setAttribute("id","three_default_"+es++)}}(e);let i=o(e,"node");for(let e=0;e<i.length;e++)t.children.push(H(i[e]));eo.visualScenes[e.getAttribute("id")]=t}),d($,"library_kinematics_models","kinematics_model",function(e){let t={name:e.getAttribute("name")||"",joints:{},links:[]};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];1===n.nodeType&&"technique_common"===n.nodeName&&function(e,t){for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"joint":t.joints[n.getAttribute("sid")]=function(e){let t;for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"prismatic":case"revolute":t=function(e){let t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",axis:new T.Vector3,limits:{min:0,max:0},type:e.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"axis":let r=l(n.textContent);t.axis.fromArray(r);break;case"limits":let a=n.getElementsByTagName("max")[0],s=n.getElementsByTagName("min")[0];t.limits.max=parseFloat(a.textContent),t.limits.min=parseFloat(s.textContent)}}return t.limits.min>=t.limits.max&&(t.static=!0),t.middlePosition=(t.limits.min+t.limits.max)/2,t}(n)}}return t}(n);break;case"link":t.links.push(function e(t){let i={sid:t.getAttribute("sid"),name:t.getAttribute("name")||"",attachments:[],transforms:[]};for(let n=0;n<t.childNodes.length;n++){let r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"attachment_full":i.attachments.push(function(t){let i={joint:t.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let n=0;n<t.childNodes.length;n++){let r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"link":i.links.push(e(r));break;case"matrix":case"translate":case"rotate":i.transforms.push(z(r))}}return i}(r));break;case"matrix":case"translate":case"rotate":i.transforms.push(z(r))}}return i}(n))}}}(n,t)}eo.kinematicsModels[e.getAttribute("id")]=t}),d($,"library_physics_models","physics_model",function(e){let t={name:e.getAttribute("name")||"",rigidBodies:{}};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];1===n.nodeType&&"rigid_body"===n.nodeName&&(t.rigidBodies[n.getAttribute("name")]={},function(e,t){for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];1===n.nodeType&&"technique_common"===n.nodeName&&function(e,t){for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];if(1===n.nodeType)switch(n.nodeName){case"inertia":t.inertia=l(n.textContent);break;case"mass":t.mass=l(n.textContent)[0]}}}(n,t)}}(n,t.rigidBodies[n.getAttribute("name")]))}eo.physicsModels[e.getAttribute("id")]=t}),d($,"scene","instance_kinematics_scene",function(e){let t={bindJointAxis:[]};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];1===n.nodeType&&"bind_joint_axis"===n.nodeName&&t.bindJointAxis.push(function(e){let t={target:e.getAttribute("target").split("/").pop()};for(let i=0;i<e.childNodes.length;i++){let n=e.childNodes[i];if(1===n.nodeType&&"axis"===n.nodeName){let e=n.getElementsByTagName("param")[0];t.axis=e.textContent;let i=t.axis.split("inst_").pop().split("axis")[0];t.jointIndex=i.substring(0,i.length-1)}}return t}(n))}eo.kinematicsScenes[c(e.getAttribute("url"))]=t}),p(eo.animations,m),p(eo.clips,x),p(eo.controllers,b),p(eo.images,M),p(eo.effects,R),p(eo.materials,P),p(eo.cameras,L),p(eo.lights,N),p(eo.geometries,U),p(eo.visualScenes,Z),function(){let e=eo.clips;if(!0===u(e)){if(!1===u(eo.animations)){let e=[];for(let t in eo.animations){let i=g(t);for(let t=0,n=i.length;t<n;t++)e.push(i[t])}er.push(new T.AnimationClip("default",-1,e))}}else for(let t in e)er.push(f(eo.clips[t],x))}(),function(){let e=Object.keys(eo.kinematicsModels)[0],t=Object.keys(eo.kinematicsScenes)[0],i=Object.keys(eo.visualScenes)[0];if(void 0===e||void 0===t)return;let n=f(eo.kinematicsModels[e],F),r=f(eo.kinematicsScenes[t],B),a=K(i),s=r.bindJointAxis,o={};for(let e=0,t=s.length;e<t;e++){let t=s[e],i=$.querySelector('[sid="'+t.target+'"]');if(i){let e=i.parentElement;(function(e,t){let i=t.getAttribute("name"),r=n.joints[e];a.traverse(function(n){n.name===i&&(o[e]={object:n,transforms:function(e){let t=[],i=$.querySelector('[id="'+e.id+'"]');for(let e=0;e<i.childNodes.length;e++){let n,r;let a=i.childNodes[e];if(1===a.nodeType)switch(a.nodeName){case"matrix":n=l(a.textContent);let s=new(0,T.Matrix4)().fromArray(n).transpose();t.push({sid:a.getAttribute("sid"),type:a.nodeName,obj:s});break;case"translate":case"scale":n=l(a.textContent),r=new(0,T.Vector3)().fromArray(n),t.push({sid:a.getAttribute("sid"),type:a.nodeName,obj:r});break;case"rotate":n=l(a.textContent),r=new(0,T.Vector3)().fromArray(n);let o=(0,T.MathUtils).degToRad(n[3]);t.push({sid:a.getAttribute("sid"),type:a.nodeName,obj:r,angle:o})}}return t}(t),joint:r,position:r.zeroPosition})})})(t.jointIndex,e)}}let h=new T.Matrix4;ea={joints:n&&n.joints,getJointValue:function(e){let t=o[e];if(t)return t.position;console.warn("THREE.ColladaLoader: Joint "+e+" doesn't exist.")},setJointValue:function(e,t){let i=o[e];if(i){let n=i.joint;if(t>n.limits.max||t<n.limits.min)console.warn("THREE.ColladaLoader: Joint "+e+" value "+t+" outside of limits (min: "+n.limits.min+", max: "+n.limits.max+").");else if(n.static)console.warn("THREE.ColladaLoader: Joint "+e+" is static.");else{let r=i.object,a=n.axis,s=i.transforms;k.identity();for(let i=0;i<s.length;i++){let r=s[i];if(r.sid&&-1!==r.sid.indexOf(e))switch(n.type){case"revolute":k.multiply(h.makeRotationAxis(a,(0,T.MathUtils).degToRad(t)));break;case"prismatic":k.multiply(h.makeTranslation(a.x*t,a.y*t,a.z*t));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+n.type)}else switch(r.type){case"matrix":k.multiply(r.obj);break;case"translate":k.multiply(h.makeTranslation(r.obj.x,r.obj.y,r.obj.z));break;case"scale":k.scale(r.obj);break;case"rotate":k.multiply(h.makeRotationAxis(r.obj,r.angle))}}r.matrix.copy(k),r.matrix.decompose(r.position,r.quaternion,r.scale),o[e].position=t}}else console.log("THREE.ColladaLoader: "+e+" does not exist.")}}}();let el=(n=o($,"scene")[0],K(c(o(n,"instance_visual_scene")[0].getAttribute("url"))));return el.animations=er,"Z_UP"===et.upAxis&&(console.warn("THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289."),el.rotation.set(-Math.PI/2,0,0)),el.scale.multiplyScalar(et.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),er},kinematics:ea,library:eo,scene:el}}}var T=S("ilwiq");const r7=new T.Vector3;class r8 extends T.Object3D{constructor(...e){super(...e),this.urdfNode=null,this.urdfName=""}copy(e,t){return super.copy(e,t),this.urdfNode=e.urdfNode,this.urdfName=e.urdfName,this}}class r9 extends r8{constructor(...e){super(...e),this.isURDFCollider=!0,this.type="URDFCollider"}}class ae extends r8{constructor(...e){super(...e),this.isURDFVisual=!0,this.type="URDFVisual"}}class at extends r8{constructor(...e){super(...e),this.isURDFLink=!0,this.type="URDFLink"}}class ai extends r8{get jointType(){return this._jointType}set jointType(e){if(this.jointType!==e)switch(this._jointType=e,this.matrixWorldNeedsUpdate=!0,e){case"fixed":this.jointValue=[];break;case"continuous":case"revolute":case"prismatic":this.jointValue=[,].fill(0);break;case"planar":this.jointValue=[,,].fill(0);break;case"floating":this.jointValue=Array(6).fill(0)}}get angle(){return this.jointValue[0]}constructor(...e){super(...e),this.isURDFJoint=!0,this.type="URDFJoint",this.jointValue=null,this.jointType="fixed",this.axis=new T.Vector3(1,0,0),this.limit={lower:0,upper:0},this.ignoreLimits=!1,this.origPosition=null,this.origQuaternion=null,this.mimicJoints=[]}copy(e,t){return super.copy(e,t),this.jointType=e.jointType,this.axis=e.axis.clone(),this.limit.lower=e.limit.lower,this.limit.upper=e.limit.upper,this.ignoreLimits=!1,this.jointValue=[...e.jointValue],this.origPosition=e.origPosition?e.origPosition.clone():null,this.origQuaternion=e.origQuaternion?e.origQuaternion.clone():null,this.mimicJoints=[...e.mimicJoints],this}setJointValue(...e){e=e.map(e=>parseFloat(e)),this.origPosition&&this.origQuaternion||(this.origPosition=this.position.clone(),this.origQuaternion=this.quaternion.clone());let t=!1;switch(this.mimicJoints.forEach(i=>{t=i.updateFromMimickedJoint(...e)||t}),this.jointType){case"fixed":break;case"continuous":case"revolute":{let i=e[0];if(null==i||i===this.jointValue[0])return t;if(this.ignoreLimits||"revolute"!==this.jointType||(i=Math.min(this.limit.upper,i),i=Math.max(this.limit.lower,i)),this.quaternion.setFromAxisAngle(this.axis,i).premultiply(this.origQuaternion),this.jointValue[0]!==i)return this.jointValue[0]=i,this.matrixWorldNeedsUpdate=!0,!0;break}case"prismatic":{let i=e[0];if(null==i||i===this.jointValue[0])return t;if(this.ignoreLimits||(i=Math.min(this.limit.upper,i),i=Math.max(this.limit.lower,i)),this.position.copy(this.origPosition),r7.copy(this.axis).applyEuler(this.rotation),this.position.addScaledVector(r7,i),this.jointValue[0]!==i)return this.jointValue[0]=i,this.matrixWorldNeedsUpdate=!0,!0;break}case"floating":case"planar":console.warn(`'${this.jointType}' joint not yet supported`)}return t}}class an extends ai{constructor(...e){super(...e),this.type="URDFMimicJoint",this.mimicJoint=null,this.offset=0,this.multiplier=1}updateFromMimickedJoint(...e){let t=e.map(e=>e*this.multiplier+this.offset);return super.setJointValue(...t)}copy(e,t){return super.copy(e,t),this.mimicJoint=e.mimicJoint,this.offset=e.offset,this.multiplier=e.multiplier,this}}class ar extends at{constructor(...e){super(...e),this.isURDFRobot=!0,this.urdfNode=null,this.urdfRobotNode=null,this.robotName=null,this.links=null,this.joints=null,this.colliders=null,this.visual=null,this.frames=null}copy(e,t){return super.copy(e,t),this.urdfRobotNode=e.urdfRobotNode,this.robotName=e.robotName,this.links={},this.joints={},this.colliders={},this.visual={},this.traverse(t=>{t.isURDFJoint&&t.urdfName in e.joints&&(this.joints[t.urdfName]=t),t.isURDFLink&&t.urdfName in e.links&&(this.links[t.urdfName]=t),t.isURDFCollider&&t.urdfName in e.colliders&&(this.colliders[t.urdfName]=t),t.isURDFVisual&&t.urdfName in e.visual&&(this.visual[t.urdfName]=t)}),this.frames={...this.colliders,...this.visual,...this.links,...this.joints},this}getFrame(e){return this.frames[e]}setJointValue(e,...t){let i=this.joints[e];return!!i&&i.setJointValue(...t)}setJointValues(e){let t=!1;for(let i in e){let n=e[i];t=Array.isArray(n)?this.setJointValue(i,...n)||t:this.setJointValue(i,n)||t}return t}}const aa=new T.Quaternion,as=new T.Euler;function ao(e){return e?e.trim().split(/\s+/g).map(e=>parseFloat(e)):[0,0,0]}function al(e,t,i=!1){i||e.rotation.set(0,0,0),as.set(t[0],t[1],t[2],"ZYX"),aa.setFromEuler(as),aa.multiply(e.quaternion),e.quaternion.copy(aa)}class ah{constructor(e){this.manager=e||T.DefaultLoadingManager,this.loadMeshCb=this.defaultMeshLoader.bind(this),this.parseVisual=!0,this.parseCollision=!1,this.packages="",this.workingPath="",this.fetchOptions={}}loadAsync(e){return new Promise((t,i)=>{this.load(e,t,null,i)})}load(e,t,i,n){let r=this.manager,a=T.LoaderUtils.extractUrlBase(e),s=this.manager.resolveURL(e);r.itemStart(s),fetch(s,this.fetchOptions).then(e=>{if(e.ok)return i&&i(null),e.text();throw Error(`URDFLoader: Failed to load url '${s}' with error code ${e.status} : ${e.statusText}.`)}).then(e=>{""===this.workingPath&&(this.workingPath=a),t(this.parse(e)),r.itemEnd(s)}).catch(e=>{n?n(e):console.error("URDFLoader: Error loading file.",e),r.itemError(s),r.itemEnd(s)})}parse(e){let t;let i=this.packages,n=this.loadMeshCb,r=this.parseVisual,a=this.parseCollision,s=this.workingPath,o=this.manager,l={},h={},c={};function u(e){if(!/^package:\/\//.test(e))return s?s+e:e;let[t,n]=e.replace(/^package:\/\//,"").split(/\/(.+)/);return"string"==typeof i?i.endsWith(t)?i+"/"+n:i+"/"+t+"/"+n:i instanceof Function?i(t)+"/"+n:"object"==typeof i?t in i?i[t]+"/"+n:(console.error(`URDFLoader : ${t} not found in provided package list.`),null):void 0}function d(e){let t=[...e.children],i=new T.MeshPhongMaterial;return i.name=e.getAttribute("name")||"",t.forEach(e=>{let t=e.nodeName.toLowerCase();if("color"===t){let t=e.getAttribute("rgba").split(/\s/g).map(e=>parseFloat(e));i.color.setRGB(t[0],t[1],t[2]),i.opacity=t[3],i.transparent=t[3]<1,i.depthWrite=!i.transparent}else if("texture"===t){let t=e.getAttribute("filename");if(t){let e=new T.TextureLoader(o),n=u(t);i.map=e.load(n),i.map.colorSpace=T.SRGBColorSpace}}}),i}function p(e,t={}){let i="collision"===e.nodeName.toLowerCase(),r=[...e.children],a=null,s=r.filter(e=>"material"===e.nodeName.toLowerCase())[0];if(s){let e=s.getAttribute("name");a=e&&e in t?t[e]:d(s)}else a=new T.MeshPhongMaterial;let l=i?new r9:new ae;return l.urdfNode=e,r.forEach(e=>{let t=e.nodeName.toLowerCase();if("geometry"===t){let t=e.children[0].nodeName.toLowerCase();if("mesh"===t){let t=u(e.children[0].getAttribute("filename"));if(null!==t){let i=e.children[0].getAttribute("scale");if(i){let e=ao(i);l.scale.set(e[0],e[1],e[2])}n(t,o,(e,t)=>{t?console.error("URDFLoader: Error loading mesh.",t):e&&(e instanceof T.Mesh&&(e.material=a),e.position.set(0,0,0),e.quaternion.identity(),l.add(e))})}}else if("box"===t){let t=new T.Mesh;t.geometry=new T.BoxGeometry(1,1,1),t.material=a;let i=ao(e.children[0].getAttribute("size"));t.scale.set(i[0],i[1],i[2]),l.add(t)}else if("sphere"===t){let t=new T.Mesh;t.geometry=new T.SphereGeometry(1,30,30),t.material=a;let i=parseFloat(e.children[0].getAttribute("radius"))||0;t.scale.set(i,i,i),l.add(t)}else if("cylinder"===t){let t=new T.Mesh;t.geometry=new T.CylinderGeometry(1,1,1,30),t.material=a;let i=parseFloat(e.children[0].getAttribute("radius"))||0,n=parseFloat(e.children[0].getAttribute("length"))||0;t.scale.set(i,n,i),t.rotation.set(Math.PI/2,0,0),l.add(t)}}else if("origin"===t){let t=ao(e.getAttribute("xyz")),i=ao(e.getAttribute("rpy"));l.position.set(t[0],t[1],t[2]),l.rotation.set(0,0,0),al(l,i)}}),l}return e instanceof Document?t=[...e.children]:e instanceof Element?t=[e]:t=[...new DOMParser().parseFromString(e,"text/xml").children],function(e){let t=[...e.children],i=t.filter(e=>"link"===e.nodeName.toLowerCase()),n=t.filter(e=>"joint"===e.nodeName.toLowerCase()),s=t.filter(e=>"material"===e.nodeName.toLowerCase()),o=new ar;o.robotName=e.getAttribute("name"),o.urdfRobotNode=e,s.forEach(e=>{c[e.getAttribute("name")]=d(e)});let u={},f={};i.forEach(t=>{let i=t.getAttribute("name"),n=null===e.querySelector(`child[link="${i}"]`);l[i]=function(e,t,i,n=null){null===n&&(n=new at);let s=[...e.children];return n.name=e.getAttribute("name"),n.urdfName=n.name,n.urdfNode=e,r&&s.filter(e=>"visual"===e.nodeName.toLowerCase()).forEach(e=>{let i=p(e,c);if(n.add(i),e.hasAttribute("name")){let n=e.getAttribute("name");i.name=n,i.urdfName=n,t[n]=i}}),a&&s.filter(e=>"collision"===e.nodeName.toLowerCase()).forEach(e=>{let t=p(e);if(n.add(t),e.hasAttribute("name")){let n=e.getAttribute("name");t.name=n,t.urdfName=n,i[n]=t}}),n}(t,u,f,n?o:null)}),n.forEach(e=>{h[e.getAttribute("name")]=function(e){let t;let i=[...e.children],n=e.getAttribute("type"),r=i.find(e=>"mimic"===e.nodeName.toLowerCase());r?((t=new an).mimicJoint=r.getAttribute("joint"),t.multiplier=parseFloat(r.getAttribute("multiplier")||1),t.offset=parseFloat(r.getAttribute("offset")||0)):t=new ai,t.urdfNode=e,t.name=e.getAttribute("name"),t.urdfName=t.name,t.jointType=n;let a=null,s=null,o=[0,0,0],h=[0,0,0];i.forEach(e=>{let i=e.nodeName.toLowerCase();"origin"===i?(o=ao(e.getAttribute("xyz")),h=ao(e.getAttribute("rpy"))):"child"===i?s=l[e.getAttribute("link")]:"parent"===i?a=l[e.getAttribute("link")]:"limit"===i&&(t.limit.lower=parseFloat(e.getAttribute("lower")||t.limit.lower),t.limit.upper=parseFloat(e.getAttribute("upper")||t.limit.upper))}),a.add(t),t.add(s),al(t,h),t.position.set(o[0],o[1],o[2]);let c=i.filter(e=>"axis"===e.nodeName.toLowerCase())[0];if(c){let e=c.getAttribute("xyz").split(/\s+/g).map(e=>parseFloat(e));t.axis=new T.Vector3(e[0],e[1],e[2]),t.axis.normalize()}return t}(e)}),o.joints=h,o.links=l,o.colliders=f,o.visual=u;let m=Object.values(h);return m.forEach(e=>{e instanceof an&&h[e.mimicJoint].mimicJoints.push(e)}),m.forEach(e=>{let t=new Set,i=e=>{if(t.has(e))throw Error("URDFLoader: Detected an infinite loop of mimic joints.");t.add(e),e.mimicJoints.forEach(e=>{i(e)})};i(e)}),o.frames={...f,...u,...l,...h},o}(t.filter(e=>"robot"===e.nodeName).pop())}defaultMeshLoader(e,t,i){/\.stl$/i.test(e)?new r4(t).load(e,e=>{i(new T.Mesh(e,new T.MeshPhongMaterial))}):/\.dae$/i.test(e)?new r6(t).load(e,e=>i(e.scene)):console.warn(`URDFLoader: Could not load model at ${e}.
No loader available`)}}var T=S("ilwiq"),ac=class{constructor(e,t){}solve(e,t,i,{maxIterations:n=1,stopDistance:r=.1,jointLimits:a={},apply:s=!1}={}){let o=[];if(i.length)for(let e of t.arm.movable)i.includes(e.name)&&o.push(e);else o=t.arm.movable;let l={},h={},c=new T.Vector3,u=new T.Vector3,d=new T.Vector3;for(let e of o)l[e.name]=e.angle;e.getWorldPosition(c);for(let e=0;e<n;e++){for(let e=o.length-1;e>=0;e--){let i=o[e];t.tcp.object.getWorldPosition(u);let n=i.worldToLocal(u.clone()).normalize(),r=i.worldToLocal(c.clone()).normalize();n=n.projectOnPlane(i.axis),r=r.projectOnPlane(i.axis),d.crossVectors(n,r).normalize();let s=Math.sign(d.dot(i.axis))*n.angleTo(r),l=i.angle+s,p=a[i.name];p&&("lower"in p&&l<p.lower&&(l=Math.max(p.lower,l)),"upper"in p&&l>p.upper&&(l=Math.min(p.upper,l))),i.setJointValue(l),h[i.name]=i.angle}if(t.tcp.object.getWorldPosition(u),c.distanceTo(u)<r)break}if(!s)for(let e of o)e.setJointValue(l[e.name]);return h}},T=S("ilwiq"),au=S("8PNKb");function ad(e){return e*Math.PI/180}function ap(e,t){let i=e.limit.lower;return Math.min(e.limit.upper,Math.max(i,t))}function af(e,t,i){let n=0;for(let i in t)n=Math.max(n,Math.abs(e.joints[i].angle-t[i]));return n/i*1500}class am{constructor(e,t,i){this.robot=e,this.ik=t,this.renderCallback=i,this.lockedJointIndices=[],this.running=!1,this.velocities={},this.setDefaultVelocities(),this.runningPhysics=!1,this.physicsDone=!0,this.lastSimObjectProcessed=!1}reset(){this.unlockJoints(),this.setDefaultVelocities(),this.physicsDone=!0,this.lastSimObjectProcessed=!1,this.runningPhysics=!1}async run(e,...t){let i={cancel:this.cancel,setParam:this.setParam,lockJoint:this.lockJoint,unlockJoint:this.unlockJoint,wait:this.wait,move:this.move,gripper_close:this.gripper_close,gripper_open:this.gripper_open,joint_absolute:this.joint_absolute,joint_relative:this.joint_relative,startPhysicalBody:this.startPhysicalBody,getPhysicsDone:this.getPhysicsDone};try{await i[e].call(this,...t)}catch(i){throw console.error("Failed to run command '"+e+"("+t+")':"+i),i}}cancel(){for(let e of(console.log("cancel"),this.running=!1,au.getAll()))e.stop();au.removeAll(),this.runningPhysics=!1,this.physicsDone=!0,this.lastSimObjectProcessed=!0}setParam(e,t){console.log("> Setting "+e+" to "+t);try{if(e.startsWith("velocity")){let i=e.split("/")[1];switch(t=parseFloat(t),i){case"move":this.velocities.move=t;break;case"gripper":this.velocities.gripper=t;break;default:throw"invalid parameter '"+e+"="+t+"'"}}else throw"unknown parameter"}catch(t){console.warn("! Failed to set "+e+": "+t)}}setDefaultVelocities(){console.log("> Resetting velocities to defaults"),this.velocities={move:.5,gripper:.5}}lockJoint(e){if(console.log("> Locking joint "+e),this.lockedJointIndices.includes(e)){console.warn("! ... but joint "+e+" is already locked");return}this.lockedJointIndices.push(e)}unlockJoint(e){console.log("> Unlocking joint "+e);let t=this.lockedJointIndices.indexOf(e);if(t<0){console.warn("! ... but joint "+e+" is not locked");return}this.lockedJointIndices.splice(t,1)}unlockJoints(){console.log("> Unlocking all joints"),this.lockedJointIndices=[]}getJointSpacePose(){let e=this.robot,t=[];for(let i=0;i<e.arm.movable.length;i++){let n=e.arm.movable[i];t.push(n.angle)}return t}getTaskSpacePose(){let e=[],t=this.robot.tcp.object.matrixWorld,i=new T.Vector3;i.setFromMatrixPosition(t);let n=new T.Euler;return n.setFromRotationMatrix(t),e.push(i.x,i.y,i.z,n.x,n.y,n.z),e}wait(e){return console.log("> Waiting "+e+" ms"),new Promise(t=>{setTimeout(()=>t("success"),e)})}move(e,t){if(!t)throw Error("move failed: missing pose");if("Array"===t.class&&void 0===t.length){let e=[];for(let i in t.properties)i.match(/\d+/g)&&(e[i]=t.properties[i]);t=e}let i=this.robot,n={},r={};switch(e){case"TaskspacePose":console.log("> Moving robot to task space pose "+t);let a=new T.Object3D;a.position.set(t[0],t[1],t[2]),t.length>3?a.setRotationFromEuler(new T.Euler(t[3],t[4],t[5])):a.setRotationFromQuaternion(i.tcp.object.quaternion);let s=this.ik.solve(a,i,i.ikEnabled,{maxIterations:30,stopDistance:.05,jointLimits:i.interactionJointLimits,apply:!1});for(let e=0;e<t.length;e++){let t=i.arm.movable[e];t.name in s&&(n[t.name]=t.angle,r[t.name]=s[t.name])}break;case"JointspacePose":console.log("> Moving robot to joint space pose "+t);for(let e=0;e<t.length;e++){let a=i.arm.movable[e];n[a.name]=a.angle,r[a.name]=ap(a,ad(t[e]))}break;default:console.error("# unknown configuration space '"+e+"'");return}let o=af(i,r,this.velocities.move*i.maxSpeed.move);return this._makeTween(n,r,o)}gripper_close(){console.log("> Closing hand");let e=this.robot,t={},i={},n=e.tcp.object,r=new T.Vector3;for(let a of(n.getWorldPosition(r),e.hand.movable))t[a.name]=a.angle,i[a.name]=a.states.closed;let a=af(e,i,this.velocities.gripper);return this._makeTween(t,i,a)}gripper_open(){console.log("> Opening hand");let e=this.robot,t={},i={};for(let n of e.hand.movable)t[n.name]=n.angle,i[n.name]=n.states.opened;let n=af(e,i,this.velocities.gripper);return this._makeTween(t,i,n)}joint_absolute(e,t){if(console.log("> Setting joint "+e+" to "+t+" degrees"),this.lockedJointIndices.includes(e))throw console.log("> ... but joint "+e+" is locked"),Error("locked");let i=this.robot,n={},r={},a=i.arm.movable[e-1];n[a.name]=a.angle,r[a.name]=ap(a,ad(t));let s=af(i,r,this.velocities.move*i.maxSpeed.move);return this._makeTween(n,r,s)}joint_relative(e,t){console.log("> Rotating joint "+e+" by "+t+" degrees");let i=180*this.robot.arm.movable[e-1].angle/Math.PI+t;return this.joint_absolute(e,i)}startPhysicalBody(e){this.physicsDone=!1,this.runningPhysics||(this._animatePhysics(),this.runningPhysics=!0)}getPhysicsDone(){return this.physicsDone}_animatePhysics(){if(o.step(.02),this.renderCallback(),!o.hasActiveBodies){console.log("Physics rendering halted."),this.runningPhysics=!1;return}window.requestAnimationFrame(()=>this._animatePhysics())}_makeTween(e,t,i){return new Promise((n,r)=>{let a=this.robot;for(let e of this.lockedJointIndices){let i=a.arm.movable[e].name;delete t[i]}let s=new au.Tween(e).to(t,i).easing(au.Easing.Quadratic.Out);s.onUpdate(e=>{for(let t in e)a.model.joints[t].setJointValue(e[t])}),s.onComplete(e=>{this.running=!1,n("success")}),s.onStop(e=>{this.running=!1,r("tween obsolete")}),s.start(),this.running||(this.running=!0,window.requestAnimationFrame(()=>this._animate()))})}_animate(e){au.update(e),this.renderCallback(),this.running&&window.requestAnimationFrame(()=>this._animate())}}var ag={instance:null,_awaiting:[],init:function(e,t,i){this.instance=new am(e,t,i),this._awaiting.forEach(e=>e(this.instance)),this._awaiting=[]}};window.matchMedia("(hover: none) and (pointer: coarse)").matches;const av=window.matchMedia("(hover: hover)").matches;T.Object3D.DefaultUp=new T.Vector3(0,0,1);var ay=S("59kwG");l=S("chmDu");let a_=new T.Vector2,ax=new T.Vector2,ab=!1;const aM=[];function aw(){if(f.position.z=Math.max(0,f.position.z),aE(),!y){console.log("IK solver not initialized yet.");return}y.solve(f,l,l.ikEnabled,{maxIterations:3,stopDistance:.1,jointLimits:l.interactionJointLimits,apply:!0})}function aS(){l.tcp.object.getWorldPosition(f.position),l.tcp.object.getWorldQuaternion(f.quaternion),aE(),requestAnimationFrame(aT)}function aE(){let e=m.geometry.attributes.position;e.setXYZ(0,f.position.x,f.position.y,f.position.z),e.setXYZ(1,f.position.x,f.position.y,0),e.needsUpdate=!0}function aT(){for(let e of(d.render(u,c),aM))e(l)}function aA(e){e.preventDefault(),ab=!0,ax.x=e.offsetX/h.clientWidth*2-1,ax.y=-(2*(e.offsetY/h.clientHeight))+1,p.setFromCamera(ax,c);let t=!1;(t=p.intersectObjects([f]).length>0)!==v.visible&&(v.visible=t,v.enabled=t),requestAnimationFrame(aT)}function aC(e){ab=!1,a_.x=e.offsetX,a_.y=e.offsetY}function aR(e){ab||new(0,T.Vector2)(e.offsetX,e.offsetY).sub(a_).length()>5||requestAnimationFrame(aT)}function aP(e){e.preventDefault(),ab=!0,requestAnimationFrame(aT)}function aL(e){ab=!1,a_.x=e.offsetX,a_.y=e.offsetY}function aN(e){ab||new(0,T.Vector2)(e.offsetX,e.offsetY).sub(a_).length()>5||(ax.x=e.offsetX/h.clientWidth*2-1,ax.y=-(2*(e.offsetY/h.clientHeight))+1,p.setFromCamera(ax,c),!1!==v.visible&&(v.visible=!1,v.enabled=!1),requestAnimationFrame(aT))}(x=l.xacro,new Promise((e,t)=>{let i=new r3;for(let e in i.inOrder=!0,i.requirePrefix=!0,i.localProperties=!0,i.rospackCommands.find=(...e)=>ay.join(l.robotRoot,...e),l.rosMacros)i.rospackCommands[e]=l.rosMacros[e];i.load(x,i=>{if("parsererror"===i.documentElement.nodeName){console.log("Parser error, invalid XML:",i),t("Failed to load XML, received parser error.");return}let n=new ah(new T.LoadingManager);n.packages=l.packages,n.workingPath=(0,T.LoaderUtils).extractUrlBase(x);try{let t=n.parse(i);t.rotateX(-Math.PI/2),t.position.y-=3,e(t)}catch(e){console.log("Failed to parse URDF:",e),t(e)}},e=>{console.log("Error loading Xacro file:",e),t(e)})})).then(e=>{l.init(e),l.setPose(l.defaultPose),function(){h=document.getElementById("viewer"),(u=new T.Scene).background=new T.Color(12636412),(c=new T.PerspectiveCamera(35,h.clientWidth/h.clientHeight,1,2e3)).position.set(8,15,17),c.lookAt(0,0,10);let e=new T.PolarGridHelper(12,16,8,64,8947848,11184810);e.position.y-=3,u.add(e),u.add(l.model);let t=new T.HemisphereLight(16772846,1118498,3);u.add(t);let i=new T.PointLight(16777215,2);i.position.set(30,30,50),u.add(i),(d=new T.WebGLRenderer({antialias:!0})).sortObjects=!1,d.setPixelRatio(window.devicePixelRatio||1),d.setSize(h.clientWidth,h.clientHeight),h.appendChild(d.domElement),(g=new iQ(c,d.domElement)).damping=.2,g.addEventListener("change",aT),f=new T.Mesh(new T.SphereGeometry(2),new T.MeshBasicMaterial({visible:!1})),l.tcp.object.getWorldPosition(f.position),u.add(f);let n=[];n.push(f.position.clone()),n.push(f.position.clone().setZ(0));let r=new(0,T.BufferGeometry)().setFromPoints(n);(m=new T.Line(r,new T.LineBasicMaterial({color:11184844}))).name="groundLine",u.add(m),(v=new i8(c,d.domElement)).setSize(av?1.7:3),v.addEventListener("change",e=>requestAnimationFrame(aT)),v.addEventListener("objectChange",aw),v.addEventListener("dragging-changed",e=>g.enabled=!e.value),v.attach(f),u.add(v),v.visible=!1,v.enabled=!1,p=new T.Raycaster,av?(h.style.touchAction="none",h.addEventListener("pointermove",aA),h.addEventListener("pointerdown",aC),h.addEventListener("pointerup",aR)):(h.style.touchAction="none",h.addEventListener("pointermove",aP),h.addEventListener("pointerdown",aL),h.addEventListener("pointerup",aN))}(),function(){(o=new iP).gravity.set(0,0,-9.81),o.broadphase=new ev,o.solver.tolerance=.001,o.quatNormalizeFast=!0,o.solver.iterations=10,o.allowSleep=!0;let e=new tl,t=new Q({mass:0});t.addShape(e),t.material=new to({friction:4,restitution:-2}),t.quaternion.setFromEuler(0,0,-Math.PI/2),t.allowSleep=!0,t.sleepSpeedLimit=1.2,t.sleepTimeLimit=.1,t.name="the_floor",o.addBody(t)}(),y=new ac(u,l),ag.init(l,y,aS)},e=>{console.log(e)});
//# sourceMappingURL=index.c598e3eb.js.map
